import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c,a as n,b as s,d as e,f as i}from"./app-731a6e06.js";const l={},r=n("h1",{id:"caching-缓存",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#caching-缓存","aria-hidden":"true"},"#"),s(" Caching（缓存）")],-1),u=n("blockquote",null,[n("p",null,"某个女人意识非常敏锐，但是几乎没有记忆 ... 她只记得如何工作，并且很努力。 - Lydia Davis")],-1),d=n("p",null,"REST Framework中的缓存是使用Django提供的缓存工具来实现的。",-1),k=n("hr",null,null,-1),_=n("h2",{id:"在apiview和viewset中使用缓存",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在apiview和viewset中使用缓存","aria-hidden":"true"},"#"),s(" 在apiview和viewset中使用缓存")],-1),v={href:"https://docs.djangoproject.com/en/dev/topics/class-based-views/intro/#decorating-the-class",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"method_decorator",-1),h={href:"https://docs.djangoproject.com/en/dev/topics/cache/#the-per-view-cache",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"cache_page",-1),w={href:"https://docs.djangoproject.com/en/dev/topics/http/decorators/#django.views.decorators.vary.vary_on_cookie",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"vary_on_cookie",-1),g=i(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>decorators <span class="token keyword">import</span> method_decorator
<span class="token keyword">from</span> django<span class="token punctuation">.</span>views<span class="token punctuation">.</span>decorators<span class="token punctuation">.</span>cache <span class="token keyword">import</span> cache_page
<span class="token keyword">from</span> django<span class="token punctuation">.</span>views<span class="token punctuation">.</span>decorators<span class="token punctuation">.</span>vary <span class="token keyword">import</span> vary_on_cookie
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>response <span class="token keyword">import</span> Response
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>views <span class="token keyword">import</span> APIView
<span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> viewsets
<span class="token keyword">class</span> <span class="token class-name">UserViewSet</span><span class="token punctuation">(</span>viewsets<span class="token punctuation">.</span>ViewSet<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 为每个请求该接口的用户设置2个小时缓存</span>
    <span class="token decorator annotation punctuation">@method_decorator</span><span class="token punctuation">(</span>cache_page<span class="token punctuation">(</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token decorator annotation punctuation">@method_decorator</span><span class="token punctuation">(</span>vary_on_cookie<span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">list</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        content <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;user_feed&#39;</span><span class="token punctuation">:</span> request<span class="token punctuation">.</span>user<span class="token punctuation">.</span>get_user_feed<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>content<span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">PostView</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 为接口设置缓存</span>
    <span class="token decorator annotation punctuation">@method_decorator</span><span class="token punctuation">(</span>cache_page<span class="token punctuation">(</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        content <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;title&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Post title&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;body&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Post content&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),y=n("strong",null,"NOTE:",-1),j={href:"https://docs.djangoproject.com/en/dev/topics/cache/#the-per-view-cache",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"cache_page",-1),V=n("code",null,"GET",-1),E=n("code",null,"HEAD",-1);function N(P,q){const a=o("ExternalLinkIcon");return p(),c("div",null,[r,u,d,k,_,n("p",null,[s("Django提供了一个"),n("a",v,[m,e(a)]),s("的装饰器，来结合类视图使用。 它也可以和其他缓存重视起一起使用，例如"),n("a",h,[b,e(a)]),s("和"),n("a",w,[f,e(a)]),s("。")]),g,n("p",null,[y,s(),n("a",j,[x,e(a)]),s("装饰器只缓存"),V,s("和"),E,s("的200状态码的返回")])])}const I=t(l,[["render",N],["__file","15.Caching（缓存）.html.vue"]]);export{I as default};
