const e=JSON.parse('{"key":"v-5a1187cd","path":"/book/django-restframework/api/17.Filtering%EF%BC%88%E8%BF%87%E6%BB%A4%EF%BC%89.html","title":"Filtering（过滤）","lang":"zh-CN","frontmatter":{"description":"“ 由Django Manager提供的根QuerySet描述了数据库表中的所有对象。可是通常你需要的只是选择完整对象中的一个子集而已。 —— Django文档 ” REST framework列表视图的默认行为是返回一个model的全部queryset。通常你却想要你的API来限制queryset返回的数据。 最简单的过滤任意GenericAPIVi...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/book/django-restframework/api/17.Filtering%EF%BC%88%E8%BF%87%E6%BB%A4%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"Filtering（过滤）"}],["meta",{"property":"og:description","content":"“ 由Django Manager提供的根QuerySet描述了数据库表中的所有对象。可是通常你需要的只是选择完整对象中的一个子集而已。 —— Django文档 ” REST framework列表视图的默认行为是返回一个model的全部queryset。通常你却想要你的API来限制queryset返回的数据。 最简单的过滤任意GenericAPIVi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-03T09:19:59.000Z"}],["meta",{"property":"article:author","content":"gstorms"}],["meta",{"property":"article:modified_time","content":"2023-07-03T09:19:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Filtering（过滤）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-03T09:19:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gstorms\\",\\"url\\":\\"https://gtcool.top\\"}]}"]]},"headers":[{"level":2,"title":"Filtering against the current user（根据当前用户进行过滤）","slug":"filtering-against-the-current-user-根据当前用户进行过滤","link":"#filtering-against-the-current-user-根据当前用户进行过滤","children":[]},{"level":2,"title":"Filtering against the URL（根据URL进行过滤）","slug":"filtering-against-the-url-根据url进行过滤","link":"#filtering-against-the-url-根据url进行过滤","children":[]},{"level":2,"title":"Filtering against query parameters（根据查询参数进行过滤）","slug":"filtering-against-query-parameters-根据查询参数进行过滤","link":"#filtering-against-query-parameters-根据查询参数进行过滤","children":[]},{"level":2,"title":"Setting filter backends（设置通用过滤后端）","slug":"setting-filter-backends-设置通用过滤后端","link":"#setting-filter-backends-设置通用过滤后端","children":[]},{"level":2,"title":"Filtering and object lookups（过滤和对象查找）","slug":"filtering-and-object-lookups-过滤和对象查找","link":"#filtering-and-object-lookups-过滤和对象查找","children":[]},{"level":2,"title":"Overriding the initial queryset（覆盖初始queryset）","slug":"overriding-the-initial-queryset-覆盖初始queryset","link":"#overriding-the-initial-queryset-覆盖初始queryset","children":[]},{"level":2,"title":"DjangoFilterBackend（Django过滤后端）","slug":"djangofilterbackend-django过滤后端","link":"#djangofilterbackend-django过滤后端","children":[]},{"level":2,"title":"Specifying filter fields（指定筛选字段）","slug":"specifying-filter-fields-指定筛选字段","link":"#specifying-filter-fields-指定筛选字段","children":[]},{"level":2,"title":"Specifying a FilterSet（指定FilterSet）","slug":"specifying-a-filterset-指定filterset","link":"#specifying-a-filterset-指定filterset","children":[{"level":3,"title":"Hints & Tips（提示）","slug":"hints-tips-提示","link":"#hints-tips-提示","children":[]}]},{"level":2,"title":"SearchFilter（搜索过滤）","slug":"searchfilter-搜索过滤","link":"#searchfilter-搜索过滤","children":[]},{"level":2,"title":"OrderingFilter（排序筛选）","slug":"orderingfilter-排序筛选","link":"#orderingfilter-排序筛选","children":[]},{"level":2,"title":"Specifying which fields may be ordered against（指定支持排序的字段）","slug":"specifying-which-fields-may-be-ordered-against-指定支持排序的字段","link":"#specifying-which-fields-may-be-ordered-against-指定支持排序的字段","children":[]},{"level":2,"title":"Specifying a default ordering（指定默认排序）","slug":"specifying-a-default-ordering-指定默认排序","link":"#specifying-a-default-ordering-指定默认排序","children":[]}],"git":{"createdTime":1688375999000,"updatedTime":1688375999000,"contributors":[{"name":"gstorms","email":"wangzx_2015@foxmail.com","commits":1}]},"readingTime":{"minutes":8.65,"words":2595},"filePathRelative":"book/django-restframework/api/17.Filtering（过滤）.md","localizedDate":"2023年7月3日","autoDesc":true,"excerpt":""}');export{e as data};
