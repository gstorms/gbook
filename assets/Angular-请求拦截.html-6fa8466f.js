import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c as o,a as n,b as s,d as c,f as l}from"./app-731a6e06.js";const u={},i=l(`<h1 id="angular-请求拦截" tabindex="-1"><a class="header-anchor" href="#angular-请求拦截" aria-hidden="true">#</a> Angular-请求拦截</h1><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HttpEvent<span class="token punctuation">,</span> HttpInterceptor<span class="token punctuation">,</span> HttpHandler<span class="token punctuation">,</span> HttpRequest<span class="token punctuation">,</span> HttpResponse<span class="token punctuation">,</span> HttpErrorResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/common/http&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Observable<span class="token punctuation">,</span> throwError <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> timeout<span class="token punctuation">,</span> delay<span class="token punctuation">,</span> retryWhen<span class="token punctuation">,</span> scan<span class="token punctuation">,</span> tap<span class="token punctuation">,</span> catchError  <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs/operators&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> mergeMap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs/operators&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Router <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/router&#39;</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/** Pass untouched request through to the next request handler. */</span>
 
<span class="token keyword">import</span> <span class="token punctuation">{</span> MessageProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../tools/message&quot;</span><span class="token punctuation">;</span>
 
<span class="token doc-comment comment">/** 超时时间 */</span>
<span class="token keyword">const</span> <span class="token constant">DEFAULTTIMEOUT</span> <span class="token operator">=</span> <span class="token number">5000</span><span class="token punctuation">;</span>
 
<span class="token doc-comment comment">/** 最大重试次数 */</span>
<span class="token keyword">const</span> <span class="token constant">MAXRETRYCOUNT</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
 
<span class="token doc-comment comment">/** 防止重复点击 网络重复请求 */</span>
<span class="token keyword">const</span> <span class="token constant">MAXDEBOUNCETIME</span> <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>
 
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">NoopInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HttpInterceptor</span> <span class="token punctuation">{</span>
 
  <span class="token function">constructor</span><span class="token punctuation">(</span>
    <span class="token keyword">private</span> router<span class="token operator">:</span> Router<span class="token punctuation">,</span> 
    <span class="token keyword">private</span> messagePvd<span class="token operator">:</span> MessageProvider
    <span class="token punctuation">)</span> <span class="token punctuation">{</span> 
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  
  <span class="token function">intercept</span><span class="token punctuation">(</span>req<span class="token operator">:</span> HttpRequest<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> next<span class="token operator">:</span> HttpHandler<span class="token punctuation">)</span><span class="token operator">:</span>Observable<span class="token operator">&lt;</span>HttpEvent<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// console.log(&#39;test ckick3&#39;);</span>
    <span class="token keyword">let</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> accessToken<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> authReq <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      setHeaders<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// REQUEST_FROM: &quot;WEB_OFFICIAL&quot;,</span>
        Ver<span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
        <span class="token constant">TIMESTAMP</span><span class="token operator">:</span> time<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token constant">ACCESS_TOKEN</span><span class="token operator">:</span> accessToken<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ACCESS_TOKEN:accessToken}});</span>
 
    <span class="token keyword">return</span> <span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>next<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>authReq<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
      <span class="token function">debounceTime</span><span class="token punctuation">(</span><span class="token constant">MAXDEBOUNCETIME</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">timeout</span><span class="token punctuation">(</span><span class="token constant">DEFAULTTIMEOUT</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">retryWhen</span><span class="token punctuation">(</span>err$ <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 重试</span>
        <span class="token keyword">return</span> err$<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
          <span class="token function">scan</span><span class="token punctuation">(</span><span class="token punctuation">(</span>errCount<span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>errCount <span class="token operator">&gt;=</span> <span class="token constant">MAXRETRYCOUNT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> errCount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token function">tap</span><span class="token punctuation">(</span>errCount <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 副作用</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>errCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">// 第一次重试时，提示用户</span>
              <span class="token keyword">this</span><span class="token punctuation">.</span>messagePvd<span class="token punctuation">.</span><span class="token function">errorMsg</span><span class="token punctuation">(</span><span class="token string">&#39;网络超时,正在重新请求中...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">catchError</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token operator">:</span> HttpErrorResponse<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>messagePvd<span class="token punctuation">.</span><span class="token function">errorMsg</span><span class="token punctuation">(</span><span class="token string">&#39;网络超时, 请重试&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">throwError</span><span class="token punctuation">(</span><span class="token string">&#39;网络超时&#39;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>name <span class="token operator">+</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">mergeMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">HttpResponse</span> <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> 
        
        <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">HttpResponse</span> <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>body<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>messagePvd<span class="token punctuation">.</span><span class="token function">errorMsg</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>body<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;/passport&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">HttpResponse</span> <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>body<span class="token punctuation">.</span>code <span class="token operator">!=</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>body<span class="token punctuation">.</span>code <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>messagePvd<span class="token punctuation">.</span><span class="token function">errorMsg</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>body<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
 
        <span class="token keyword">return</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>observer <span class="token operator">=&gt;</span> observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//请求成功返回响应</span>
 
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">catchError</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token operator">:</span> HttpErrorResponse<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> <span class="token number">401</span><span class="token operator">:</span> 
            <span class="token keyword">this</span><span class="token punctuation">.</span>messagePvd<span class="token punctuation">.</span><span class="token function">errorMsg</span><span class="token punctuation">(</span><span class="token string">&#39;服务器错误代码:401&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token number">403</span><span class="token operator">:</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>messagePvd<span class="token punctuation">.</span><span class="token function">errorMsg</span><span class="token punctuation">(</span><span class="token string">&#39;服务器错误代码:403&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token number">404</span><span class="token operator">:</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>messagePvd<span class="token punctuation">.</span><span class="token function">errorMsg</span><span class="token punctuation">(</span><span class="token string">&#39;服务器错误代码:404&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token number">500</span><span class="token operator">:</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>messagePvd<span class="token punctuation">.</span><span class="token function">errorMsg</span><span class="token punctuation">(</span><span class="token string">&#39;服务器错误代码:500&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token number">502</span><span class="token operator">:</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>messagePvd<span class="token punctuation">.</span><span class="token function">errorMsg</span><span class="token punctuation">(</span><span class="token string">&#39;服务器错误代码:502&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">throwError</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),k={href:"https://blog.csdn.net/strong90/article/details/88965483",target:"_blank",rel:"noopener noreferrer"};function r(d,v){const a=p("ExternalLinkIcon");return e(),o("div",null,[i,n("blockquote",null,[n("p",null,[s("参考："),n("a",k,[s("https://blog.csdn.net/strong90/article/details/88965483"),c(a)])])])])}const g=t(u,[["render",r],["__file","Angular-请求拦截.html.vue"]]);export{g as default};
