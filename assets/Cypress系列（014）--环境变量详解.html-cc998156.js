import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as e,c as p,a as n,b as i,d as o,f as c}from"./app-207e7d61.js";const l={},r=c(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><ul><li>环境变量，其实就是根据环境的变化，变量会有不同的值</li><li>比如最常见的：开发环境、测试环境、生产环境的 URL 肯定不一样，我们可以根据不同的环境选择不同的环境变量</li><li>这就是为什么我们要学习环境变量的原因</li></ul><p></p><h2 id="环境变量在以下情况会很有用" tabindex="-1"><a class="header-anchor" href="#环境变量在以下情况会很有用" aria-hidden="true">#</a> 环境变量在以下情况会很有用</h2><ul><li>不同开发人员，对应的值也可能不同</li><li>不同环境下的值是不同的，如：dev、test、prod</li><li>某些值会频繁变化，而且高度动态</li><li>环境变量很容易会更改，尤其是在持续集成（CI）中运行时</li></ul><p></p><h4 id="栗子" tabindex="-1"><a class="header-anchor" href="#栗子" aria-hidden="true">#</a> 栗子</h4><p>不要在测试中进行硬编码（写死，常量），需要改的时候需要动代码，比如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.acme.corp&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 这将在其他环境中无法使</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用环境变量后</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&#39;EXTERNAL_API&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 指向动态环境变量</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当不同环境运行时，如果需要访问不同的 URL 我们只需要改环境变量即可了，而不用动到代码</p><h2 id="baseurl" tabindex="-1"><a class="header-anchor" href="#baseurl" aria-hidden="true">#</a> baseUrl</h2><ul><li>前面我们说到可以通过<strong>环境变量</strong>设置测试套件访问的 URL，这是其中一种方式</li><li>而 Cypress 早就替我们想好了如何解决这问题，可以通过配置 baseUrl 来取代环境变量的方式</li><li>当你配置了 baseUrl ，测试套件中的 cy.visit() 、 cy.request() 都会自动以 baseUrl 的值作为前缀</li><li>并且，当你需要<strong>访问某些网址</strong>或者<strong>发起接口请求</strong>时，在代码中就可以不用再指定请求的 host 或者 url 了</li></ul><p></p><h3 id="如何配置-baseurl" tabindex="-1"><a class="header-anchor" href="#如何配置-baseurl" aria-hidden="true">#</a> 如何配置 baseUrl</h3><ul><li>细心的小伙伴已经知道，前面我讲 Cypress 全局配置项的时候已经提到过 baseUrl 了</li><li>只需要在 cypress.json 文件进行配置就可以啦，如下</li></ul><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200608095054970-1798178040.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="代码中调用" tabindex="-1"><a class="header-anchor" href="#代码中调用" aria-hidden="true">#</a> 代码中调用</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">visit</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 错误写法  cy.visit()</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>记住</strong>调用 visit 或 request 时，再怎么样也要传个空字符串 &quot;&quot; ，不能啥都不填哦</p><h3 id="通过环境变量来覆盖-baseurl" tabindex="-1"><a class="header-anchor" href="#通过环境变量来覆盖-baseurl" aria-hidden="true">#</a> 通过环境变量来覆盖 baseUrl</h3><p>即使配置了 baseUrl ，我们也可以通过环境变量来覆盖它</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>CYPRESS_baseUrl<span class="token operator">=</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>staging<span class="token punctuation">.</span>app<span class="token punctuation">.</span>com cypress run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h2 id="设置环境变量" tabindex="-1"><a class="header-anchor" href="#设置环境变量" aria-hidden="true">#</a> 设置环境变量</h2><h4 id="一共有六种方式" tabindex="-1"><a class="header-anchor" href="#一共有六种方式" aria-hidden="true">#</a> 一共有六种方式</h4><ol><li>在 cypress.json 文件中设置</li><li>创建一个 cypress.env.json 文件</li><li>导出为 CYPRESS_*</li><li>在 CLI 中传递为 --env （命令行运行中添加）</li><li>在插件中设置一个环境变量</li><li>可以通过 test configuration 设置环境变量</li></ol><p><strong>-----------------------------&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 点击右侧目录即可跳转</strong></p><h4 id="最常见的做法" tabindex="-1"><a class="header-anchor" href="#最常见的做法" aria-hidden="true">#</a> 最常见的做法</h4><ul><li>使用一种策略进行本地开发，但在 CI（持续集成）中运行时使用另一种策略</li><li>在测试运行时，可以使用 Cypress.env() 访问环境变量的值</li></ul><p>** **</p><h3 id="cypress-json-中设置" tabindex="-1"><a class="header-anchor" href="#cypress-json-中设置" aria-hidden="true">#</a> cypress.json 中设置</h3><p>在 cypress.json 的 env 键下设置的任何 key:value 都是环境变量</p><h4 id="cypress-json-代码" tabindex="-1"><a class="header-anchor" href="#cypress-json-代码" aria-hidden="true">#</a> cypress.json 代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200608101919851-721016188.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="测试文件代码" tabindex="-1"><a class="header-anchor" href="#测试文件代码" aria-hidden="true">#</a> 测试文件代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200608101930159-2001124214.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 打印所有环境变量</span>
Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 打印某个环境变量的值</span>
Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&quot;foor&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h4 id="测试结果" tabindex="-1"><a class="header-anchor" href="#测试结果" aria-hidden="true">#</a> 测试结果</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200608101932404-1865034842.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="优缺点" tabindex="-1"><a class="header-anchor" href="#优缺点" aria-hidden="true">#</a> 优缺点</h4><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>适用于需要源码托管（git）并在所有计算机保持相同的值</td><td>只适用于在所有计算机上应该有相同的值</td></tr></tbody></table><p></p><h3 id="创建-cypress-env-json-文件" tabindex="-1"><a class="header-anchor" href="#创建-cypress-env-json-文件" aria-hidden="true">#</a> 创建 cypress.env.json 文件</h3><h4 id="该文件的描述" tabindex="-1"><a class="header-anchor" href="#该文件的描述" aria-hidden="true">#</a> 该文件的描述</h4><ul><li>可以创建自己的 cypress.env.json 文件，Cypress 将会自动检查它</li><li>并且里面的值会<strong>覆盖</strong> cypress.json 中<strong>重名的环境变量</strong></li><li>它创建在 cypress.json 同级目录下</li></ul><p></p><h4 id="用这个文件有啥用" tabindex="-1"><a class="header-anchor" href="#用这个文件有啥用" aria-hidden="true">#</a> 用这个文件有啥用</h4><p>如果将cypress.env.json 添加到.gitgnore文件中，那么文件中的值对于每个开发人员的计算机都是不同的</p><h4 id="cypress-env-json-文件代码" tabindex="-1"><a class="header-anchor" href="#cypress-env-json-文件代码" aria-hidden="true">#</a> cypress.env.json 文件代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200608110706749-942931715.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="测试文件代码-1" tabindex="-1"><a class="header-anchor" href="#测试文件代码-1" aria-hidden="true">#</a> 测试文件代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200608110631280-45349058.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="测试结果-1" tabindex="-1"><a class="header-anchor" href="#测试结果-1" aria-hidden="true">#</a> 测试结果</h4><p><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200608110640702-3563312.png" alt="" loading="lazy"><br> 在 cypress.json 中也有一个 key 的环境变量，所以在 cypress.env.json 的 key 的值覆盖了它的值</p><h4 id="优缺点-1" tabindex="-1"><a class="header-anchor" href="#优缺点-1" aria-hidden="true">#</a> 优缺点</h4><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>专用文件，只存放环境变量</td><td>需要单独多处理一个新的文件</td></tr><tr><td>可以从其他构建过程中生成此文件</td><td>可能会过度干预 1 或 2 个环境变量</td></tr><tr><td>不同计算机的环境变量可能不同</td><td></td></tr><tr><td>支持嵌套字段，如：{ testUser: { name: &#39;...&#39;, email: &#39;...&#39; } }</td><td></td></tr></tbody></table><p></p><h3 id="cypress" tabindex="-1"><a class="header-anchor" href="#cypress" aria-hidden="true">#</a> CYPRESS_*</h3><h4 id="重点" tabindex="-1"><a class="header-anchor" href="#重点" aria-hidden="true">#</a> 重点</h4><ul><li>计算机中任何以 CYPRESS_ 或 cypress_ 开头的环境变量都会自动被 Cypress 识别出来</li><li>会直接覆盖 cypress.json 和 cypress.env.json 文件中重名的环境变量</li><li>Cypress在添加环境变量时，会自动去掉 CYPRESS_ 前缀</li><li>用户级别环境变量的优先级会高于系统变量哦</li></ul><p></p><h4 id="在系统添加环境变量" tabindex="-1"><a class="header-anchor" href="#在系统添加环境变量" aria-hidden="true">#</a> 在系统添加环境变量</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202010/1896874-20201016101522917-981605218.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="测试文件代码-2" tabindex="-1"><a class="header-anchor" href="#测试文件代码-2" aria-hidden="true">#</a> 测试文件代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202010/1896874-20201016101704201-960251321.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="测试结果-2" tabindex="-1"><a class="header-anchor" href="#测试结果-2" aria-hidden="true">#</a> 测试结果</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202010/1896874-20201016101708679-1423363483.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="env" tabindex="-1"><a class="header-anchor" href="#env" aria-hidden="true">#</a> --env</h3><h4 id="重点-1" tabindex="-1"><a class="header-anchor" href="#重点-1" aria-hidden="true">#</a> 重点</h4><ul><li>可以通过命令行将环境变量作为<strong>命令行参数</strong>传进来</li><li>它的<strong>优先级最高</strong>，会覆盖其他地方设置的重名环境变量</li><li>可以为 cypress open 或 cypress run 添加 --env 参数</li></ul><p></p><h4 id="cmd-命令" tabindex="-1"><a class="header-anchor" href="#cmd-命令" aria-hidden="true">#</a> cmd 命令</h4><p>在 Cypress 安装目录下，cmd敲</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>yarn cypress<span class="token operator">:</span>open <span class="token operator">--</span>env host<span class="token operator">=</span>poloyy<span class="token punctuation">.</span>com<span class="token punctuation">,</span>key<span class="token operator">=</span>命令行参数环境变量
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>yarn cypress<span class="token operator">:</span>run <span class="token operator">--</span>env host<span class="token operator">=</span>poloyy<span class="token punctuation">.</span>com<span class="token punctuation">,</span>key<span class="token operator">=</span>命令行参数环境变量
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h4 id="测试文件代码-3" tabindex="-1"><a class="header-anchor" href="#测试文件代码-3" aria-hidden="true">#</a> 测试文件代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200608132413061-217421131.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="测试结果-3" tabindex="-1"><a class="header-anchor" href="#测试结果-3" aria-hidden="true">#</a> 测试结果</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200608132423572-1205953513.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="优缺点-2" tabindex="-1"><a class="header-anchor" href="#优缺点-2" aria-hidden="true">#</a> 优缺点</h4><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>不需要对文件或配置项进行任何更改</td><td>使用 --env 并不友好</td></tr><tr><td>简单明了的设置环境变量</td><td>不支持嵌套字段</td></tr><tr><td>优先级最高，覆盖其他形式设置的环境变量</td><td></td></tr><tr><td>允许不同机器之间存在动态的值</td><td></td></tr></tbody></table><p></p><h3 id="plugins-中声明环境变量" tabindex="-1"><a class="header-anchor" href="#plugins-中声明环境变量" aria-hidden="true">#</a> plugins 中声明环境变量</h3><h4 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h4><ul><li>可以使用 plugins 通过 Node 代码动态设置它们，而不必在文件中设置环境变量</li><li>plugins 具体如何使用可以看这篇文章：待更新</li></ul><p></p><h4 id="优缺点-3" tabindex="-1"><a class="header-anchor" href="#优缺点-3" aria-hidden="true">#</a> 优缺点</h4><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>最大程度的灵活性</td><td>需要使用Node编写知识</td></tr><tr><td>可以根据需要管理配置</td><td>更具挑战性</td></tr></tbody></table><p></p><h3 id="test-configuration-设置环境变量" tabindex="-1"><a class="header-anchor" href="#test-configuration-设置环境变量" aria-hidden="true">#</a> test configuration 设置环境变量</h3><h4 id="介绍-1" tabindex="-1"><a class="header-anchor" href="#介绍-1" aria-hidden="true">#</a> 介绍</h4><ul><li>可以给测试用例或测试用例集单独设置环境变量</li><li>会覆盖其他方式设置的环境变量</li></ul><p></p><h4 id="测试文件代码-4" tabindex="-1"><a class="header-anchor" href="#测试文件代码-4" aria-hidden="true">#</a> 测试文件代码</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">context</span><span class="token punctuation">(</span><span class="token string">&#39;test configuration 设置环境变量&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;key&#39;</span><span class="token operator">:</span> <span class="token string">&#39;测试配置项&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;host&#39;</span><span class="token operator">:</span> <span class="token string">&#39;www.poloyy.com&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;test configuration 测试用例设置&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">环境变量有</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">key 环境变量的值是</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">host 环境变量的值是</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&quot;host&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;test configuration 测试用例设置2&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;key&#39;</span><span class="token operator">:</span> <span class="token string">&#39;测试用例级别配置项&#39;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&#39;host&#39;</span><span class="token operator">:</span> <span class="token string">&#39;edit.poloyy.com&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">环境变量有</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">key 环境变量的值是</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">host 环境变量的值是</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>Cypress<span class="token punctuation">.</span><span class="token function">env</span><span class="token punctuation">(</span><span class="token string">&quot;host&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h4 id="测试结果-4" tabindex="-1"><a class="header-anchor" href="#测试结果-4" aria-hidden="true">#</a> 测试结果</h4><p><img src="https://img2020.cnblogs.com/blog/1896874/202010/1896874-20201016104323729-495160631.png" alt="" loading="lazy"><br> 测试用例级别设置的环境变量优先级更大</p><h4 id="另外" tabindex="-1"><a class="header-anchor" href="#另外" aria-hidden="true">#</a> 另外</h4><p>更多 test configuration 的使用可以看这篇文章：待更新</p>`,105),u={href:"https://www.cnblogs.com/poloyy/p/13056393.html",target:"_blank",rel:"noopener noreferrer"};function d(h,g){const a=t("ExternalLinkIcon");return e(),p("div",null,[r,n("blockquote",null,[n("p",null,[n("a",u,[i("https://www.cnblogs.com/poloyy/p/13056393.html"),o(a)])])])])}const v=s(l,[["render",d],["__file","Cypress系列（014）--环境变量详解.html.vue"]]);export{v as default};
