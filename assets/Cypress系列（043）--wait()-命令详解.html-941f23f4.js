import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as e,a as n,b as c,d as o,f as i}from"./app-d0fb0332.js";const u={},l=i(`<h2 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h2><p>等待数毫秒或等待别名资源解析，然后再继续执行下一个命令</p><h2 id="语法格式" tabindex="-1"><a class="header-anchor" href="#语法格式" aria-hidden="true">#</a> 语法格式</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span>alias<span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span>aliases<span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span>alias<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span>aliases<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="参数讲解" tabindex="-1"><a class="header-anchor" href="#参数讲解" aria-hidden="true">#</a> 参数讲解</h2><figure><img src="https://img2020.cnblogs.com/blog/1896874/202009/1896874-20200907110424531-593038185.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="正确格式" tabindex="-1"><a class="header-anchor" href="#正确格式" aria-hidden="true">#</a> 正确格式</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token string">&#39;@getProfile&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="wait-命令返回的对象" tabindex="-1"><a class="header-anchor" href="#wait-命令返回的对象" aria-hidden="true">#</a> wait() 命令返回的对象</h2><h4 id="当传了-time-时" tabindex="-1"><a class="header-anchor" href="#当传了-time-时" aria-hidden="true">#</a> 当传了 time 时</h4><p>cy.wait() 产生与上一个命令相同的主题</p><h4 id="当传了-alias-时" tabindex="-1"><a class="header-anchor" href="#当传了-alias-时" aria-hidden="true">#</a> 当传了 alias 时</h4><p>cy.wait() 产生一个对象，其中包含 XHR 的 HTTP 请求和响应属性</p><h2 id="等待一个别名的栗子" tabindex="-1"><a class="header-anchor" href="#等待一个别名的栗子" aria-hidden="true">#</a> 等待一个别名的栗子</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>it<span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token string">&#39;栗子1&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cy<span class="token punctuation">.</span><span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    cy<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;**/login&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">503</span><span class="token punctuation">,</span>
        <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">success</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;Not success&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;login&quot;</span><span class="token punctuation">)</span>
    cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;input[name=username]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>
    cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;input[name=password]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>password<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">{enter}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token comment">// 等待请求的响应</span>
    cy<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token string">&#39;@login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 针对响应进行断言</span>
        <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">503</span><span class="token punctuation">)</span>
        <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>responseBody<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&#39;Not success&#39;</span><span class="token punctuation">)</span>
        <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>responseHeaders<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>have<span class="token punctuation">.</span><span class="token function">property</span><span class="token punctuation">(</span><span class="token string">&#39;x-token&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc-123-foo-bar&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="等待别名数组的栗子" tabindex="-1"><a class="header-anchor" href="#等待别名数组的栗子" aria-hidden="true">#</a> 等待别名数组的栗子</h2><p>当将别名数组传递给 cy.wait() 时，Cypress 将等待<strong>所有请求</strong>在给定的 requestTimeout 和 responseTimeout 内完成</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;users/*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&#39;getUsers&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;activities/*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&#39;getActivities&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;comments/*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&#39;getComments&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">visit</span><span class="token punctuation">(</span><span class="token string">&#39;/dashboard&#39;</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;@getUsers&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;@getActivities&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;@getComments&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">xhrs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// xhrs现在将是匹配的XHR的数组</span>
  <span class="token comment">// xhrs[0] &lt;-- getUsers 的响应</span>
  <span class="token comment">// xhrs[1] &lt;-- getActivities 的响应</span>
  <span class="token comment">// xhrs[2] &lt;-- getComments 的响应</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p>`,22),r={href:"https://www.cnblogs.com/poloyy/p/13625824.html",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const s=t("ExternalLinkIcon");return p(),e("div",null,[l,n("blockquote",null,[n("p",null,[n("a",r,[c("https://www.cnblogs.com/poloyy/p/13625824.html"),o(s)])])])])}const g=a(u,[["render",k],["__file","Cypress系列（043）--wait()-命令详解.html.vue"]]);export{g as default};
