import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as e,c as p,a as n,b as o,d as c,f as i}from"./app-cfbf85c1.js";const l={},u=i(`<h2 id="cypress-下什么是条件测试" tabindex="-1"><a class="header-anchor" href="#cypress-下什么是条件测试" aria-hidden="true">#</a> Cypress 下什么是条件测试</h2><ul><li>判断一个元素是否存在，当它存在时，执行 A 操作；当它不存在时，执行 B 操作</li><li>Cypress 认为条件测试是导致测试不稳定的根本原因</li></ul><p></p><h4 id="条件测试的不稳定性" tabindex="-1"><a class="header-anchor" href="#条件测试的不稳定性" aria-hidden="true">#</a> 条件测试的不稳定性</h4><ul><li>当测试代码中出现条件测试时，说明无法确定操作会导致哪种结果发生</li><li>这显然是有风险的，例如执行 A 操作的代码有错误，导致 A 操作一直没有被触发，则此问题将无法被测试到</li></ul><p></p><h2 id="停用条件测试" tabindex="-1"><a class="header-anchor" href="#停用条件测试" aria-hidden="true">#</a> 停用条件测试</h2><ul><li>Cypress 建议通过<strong>指定前置测试条件</strong>来避免操作引发的不确定行为</li><li>例如当有A、B 策略的需求时，指定测试前置条件使得 A 或 B 一定发生</li><li>前置条件的构造，可以通过修改 DB 直接获取，也可以根据业务使用 API 或 UI 的方式构造</li><li>唯有条件确定时，才能避免使测试进入条件测试的困境</li></ul><p></p><h4 id="测试代码栗子" tabindex="-1"><a class="header-anchor" href="#测试代码栗子" aria-hidden="true">#</a> 测试代码栗子</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 前置条件的构造过程</span>
<span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;确定 A 操作会发生&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;.A_Selector&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;exist&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;确定 A 操作不会发生&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;.A_Selector&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;not.exist&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p>`,12),r={href:"https://www.cnblogs.com/poloyy/p/13739349.html",target:"_blank",rel:"noopener noreferrer"};function d(k,h){const s=t("ExternalLinkIcon");return e(),p("div",null,[u,n("blockquote",null,[n("p",null,[n("a",r,[o("https://www.cnblogs.com/poloyy/p/13739349.html"),c(s)])])])])}const f=a(l,[["render",d],["__file","Cypress系列（058）--停用条件测试.html.vue"]]);export{f as default};
