import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o,c,a as n,b as s,d as t,f as i}from"./app-731a6e06.js";const l={},u=n("h2",{id:"前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),s(" 前言")],-1),r=n("ul",null,[n("li",null,"Cypress 6.0.0 开始不推荐使用 cy.server() 和 cy.route()"),n("li",null,"在将来的版本中，对 cy.server() 和 cy.route() 的支持将移至插件"),n("li",null,"现在优先考虑使用 cy.intercept()")],-1),k=n("p",null,null,-1),d=n("h2",{id:"作用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#作用","aria-hidden":"true"},"#"),s(" 作用")],-1),v=n("li",null,"启动服务器以开始将响应路由到 cy.route()  并更改网络请求的行为",-1),h={href:"https://www.cnblogs.com/poloyy/p/13852941.html",target:"_blank",rel:"noopener noreferrer"},m=i(`<p></p><h2 id="语法格式" tabindex="-1"><a class="header-anchor" href="#语法格式" aria-hidden="true">#</a> 语法格式</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">server</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="options-参数" tabindex="-1"><a class="header-anchor" href="#options-参数" aria-hidden="true">#</a> options 参数</h3><h4 id="作用-1" tabindex="-1"><a class="header-anchor" href="#作用-1" aria-hidden="true">#</a> 作用</h4><ul><li>作为默认值，它们被合并到 cy.route() 中</li><li>作为所有请求的配置行为</li></ul><p></p><h4 id="以下选项被合并为-cy-route-的默认选项" tabindex="-1"><a class="header-anchor" href="#以下选项被合并为-cy-route-的默认选项" aria-hidden="true">#</a> 以下选项被合并为 cy.route() 的默认选项</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202010/1896874-20201021161839546-585950192.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="以下选项控制服务器-将会影响所有请求的行为" tabindex="-1"><a class="header-anchor" href="#以下选项控制服务器-将会影响所有请求的行为" aria-hidden="true">#</a> 以下选项控制服务器，将会影响所有请求的行为</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202010/1896874-20201021111917110-171875457.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="命令执行结果" tabindex="-1"><a class="header-anchor" href="#命令执行结果" aria-hidden="true">#</a> 命令执行结果</h4><ul><li>执行结果是 null</li><li>且后续不能再链接其他命令</li></ul><p></p><h2 id="没有参数的栗子" tabindex="-1"><a class="header-anchor" href="#没有参数的栗子" aria-hidden="true">#</a> 没有参数的栗子</h2><p>// 启动服务器cy.server()</p><ul><li>任何与 cy.route() 不匹配的请求都将传递到服务器，除非设置了 force404，这样请求变成 404 和拿到一个空 response</li><li>与 options.ignore 函数匹配的任何请求都不会被记录或存根（logged、stubbed）</li><li>将在命令日志中看到名为（XHR Stub）或（XHR）的请求</li></ul><p></p><h2 id="带有参数的栗子" tabindex="-1"><a class="header-anchor" href="#带有参数的栗子" aria-hidden="true">#</a> 带有参数的栗子</h2><h4 id="进入演示项目目录下" tabindex="-1"><a class="header-anchor" href="#进入演示项目目录下" aria-hidden="true">#</a> 进入演示项目目录下</h4><p>**注：**演示项目是 cypress 提供的，如何下载可看 Cypress 系列文章的一开始几篇都有写</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cd <span class="token constant">C</span><span class="token operator">:</span>\\Users\\user\\Desktop\\py\\cypress<span class="token operator">-</span>example<span class="token operator">-</span>recipes\\examples\\logging<span class="token operator">-</span>in__xhr<span class="token operator">-</span>web<span class="token operator">-</span>forms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h4 id="启动演示项目" tabindex="-1"><a class="header-anchor" href="#启动演示项目" aria-hidden="true">#</a> 启动演示项目</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h4 id="浏览器访问项目" tabindex="-1"><a class="header-anchor" href="#浏览器访问项目" aria-hidden="true">#</a> 浏览器访问项目</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">localhost:7079</span><span class="token regex-delimiter">/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h4 id="测试代码" tabindex="-1"><a class="header-anchor" href="#测试代码" aria-hidden="true">#</a> 测试代码</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">context</span><span class="token punctuation">(</span><span class="token string">&#39;route 的栗子&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> username <span class="token operator">=</span> <span class="token string">&#39;jane.lane&#39;</span>
    <span class="token keyword">const</span> password <span class="token operator">=</span> <span class="token string">&#39;password123&#39;</span>
    <span class="token function">before</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cy<span class="token punctuation">.</span><span class="token function">visit</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:7079/&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;栗子1&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cy<span class="token punctuation">.</span><span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">503</span><span class="token punctuation">,</span>
            <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
            <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&#39;x-token&#39;</span><span class="token operator">:</span> <span class="token string">&#39;abc-123-foo-bar&#39;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        cy<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;**/login&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">success</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;Not success&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;login&quot;</span><span class="token punctuation">)</span>
        cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;input[name=username]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>
        cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;input[name=password]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>password<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">{enter}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        cy<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token string">&#39;@login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            cy<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
            <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">503</span><span class="token punctuation">)</span>
            <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>responseBody<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&#39;Not success&#39;</span><span class="token punctuation">)</span>
            <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>responseHeaders<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>have<span class="token punctuation">.</span><span class="token function">property</span><span class="token punctuation">(</span><span class="token string">&#39;x-token&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc-123-foo-bar&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h4 id="测试结果" tabindex="-1"><a class="header-anchor" href="#测试结果" aria-hidden="true">#</a> 测试结果</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202010/1896874-20201021210211318-1415502067.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="启动服务器-关闭服务器的栗子" tabindex="-1"><a class="header-anchor" href="#启动服务器-关闭服务器的栗子" aria-hidden="true">#</a> 启动服务器，关闭服务器的栗子</h2><h4 id="测试代码-1" tabindex="-1"><a class="header-anchor" href="#测试代码-1" aria-hidden="true">#</a> 测试代码</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;栗子2&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cy<span class="token punctuation">.</span><span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    cy<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;**/login&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">503</span><span class="token punctuation">,</span>
        <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token string">&quot;success&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;login&quot;</span><span class="token punctuation">)</span>
    cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;input[name=username]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>
    <span class="token comment">//第一次发出请求</span>
    cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;input[name=password]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>password<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">{enter}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    cy<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token string">&#39;@login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">expect</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">503</span><span class="token punctuation">)</span>
        
        <span class="token comment">// 关闭服务器</span>
        cy<span class="token punctuation">.</span><span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">enable</span><span class="token operator">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    cy<span class="token punctuation">.</span><span class="token function">visit</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:7079/&#39;</span><span class="token punctuation">)</span>
    cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;input[name=username]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>
    <span class="token comment">//第二次发出请求</span>
    cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;input[name=password]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>password<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">{enter}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h4 id="测试结果-1" tabindex="-1"><a class="header-anchor" href="#测试结果-1" aria-hidden="true">#</a> 测试结果</h4><p><img src="https://img2020.cnblogs.com/blog/1896874/202010/1896874-20201022100832922-412397822.png" alt="" loading="lazy"><br> 第二个请求虽然被路由监听到了，但是因为服务器关闭了，所以并没有获取路由的 status、response</p><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h2><ul><li>可以在启动 cy.visit() 之前启动服务器 cy.server()</li><li>通常，应用程序在加载时可能会立即发出初始请求（例如，对用户进行身份验证）</li><li>Cypress 可以在 cy.visit() 之前启动服务器并定义路由（  cy.route() ）</li><li>下次访问时，服务器 + 路由将在应用程序加载之前立即应用</li></ul><p></p>`,44),g={href:"https://www.cnblogs.com/poloyy/p/13856700.html",target:"_blank",rel:"noopener noreferrer"};function b(y,f){const a=e("ExternalLinkIcon");return o(),c("div",null,[u,r,k,d,n("ul",null,[v,n("li",null,[s("**前置知识：**熟悉 .route() 命令，"),n("a",h,[s("https://www.cnblogs.com/poloyy/p/13852941.html"),t(a)])])]),m,n("blockquote",null,[n("p",null,[n("a",g,[s("https://www.cnblogs.com/poloyy/p/13856700.html"),t(a)])])])])}const w=p(l,[["render",b],["__file","Cypress系列（070）--server()-命令详解.html.vue"]]);export{w as default};
