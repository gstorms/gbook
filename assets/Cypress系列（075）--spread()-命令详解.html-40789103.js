import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as t,c as p,a,b as c,d as o,f as i}from"./app-3f278ba4.js";const l={},r=i(`<h2 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h2><ul><li>将数组拆分为多个参数</li><li>有点像 py 里面的 *array</li></ul><p></p><h2 id="语法格式" tabindex="-1"><a class="header-anchor" href="#语法格式" aria-hidden="true">#</a> 语法格式</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span><span class="token function">spread</span><span class="token punctuation">(</span>callbackFn<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">spread</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> callbackFn<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h4 id="callbackfn" tabindex="-1"><a class="header-anchor" href="#callbackfn" aria-hidden="true">#</a> callbackFn</h4><ul><li>回调函数</li><li>将数组拆分后作为函数的多个参数</li></ul><p></p><h4 id="options-参数" tabindex="-1"><a class="header-anchor" href="#options-参数" aria-hidden="true">#</a> options 参数</h4><p>**timeout：**命令超时时间</p><h2 id="正确用法" tabindex="-1"><a class="header-anchor" href="#正确用法" aria-hidden="true">#</a> 正确用法</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">spread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h2 id="错误用法" tabindex="-1"><a class="header-anchor" href="#错误用法" aria-hidden="true">#</a> 错误用法</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 不能直接他通过 cy 调用</span>
cy<span class="token punctuation">.</span><span class="token function">spread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// locations() 返回的不是一个数组</span>
cy<span class="token punctuation">.</span><span class="token function">location</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">spread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="命令返回结果" tabindex="-1"><a class="header-anchor" href="#命令返回结果" aria-hidden="true">#</a> 命令返回结果</h2><p>返回回调函数的返回值</p><h2 id="实际栗子" tabindex="-1"><a class="header-anchor" href="#实际栗子" aria-hidden="true">#</a> 实际栗子</h2><h4 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201120112823753-391532514.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="运行结果" tabindex="-1"><a class="header-anchor" href="#运行结果" aria-hidden="true">#</a> 运行结果</h4><p><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201120112826957-1709083028.png" alt="" loading="lazy"><br> 可以看到</p><ul><li>spread 命令不会出现在命令日志中</li><li>spread 命令的回调函数的<strong>参数个数</strong>无论是多了还是少了都不会报错，少了不会获取后面的值，多了则是一个空值</li></ul><p></p>`,26),u={href:"https://www.cnblogs.com/poloyy/p/14007116.html",target:"_blank",rel:"noopener noreferrer"};function d(h,k){const n=e("ExternalLinkIcon");return t(),p("div",null,[r,a("blockquote",null,[a("p",null,[a("a",u,[c("https://www.cnblogs.com/poloyy/p/14007116.html"),o(n)])])])])}const g=s(l,[["render",d],["__file","Cypress系列（075）--spread()-命令详解.html.vue"]]);export{g as default};
