import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as i,c as o,a,b as t,d as r,f as p}from"./app-cfbf85c1.js";const c={},l=p(`<h2 id="cypress-cookies-共有三个命令" tabindex="-1"><a class="header-anchor" href="#cypress-cookies-共有三个命令" aria-hidden="true">#</a> Cypress.Cookies 共有三个命令</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Cypress<span class="token punctuation">.</span>Cookies<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>enable<span class="token punctuation">,</span> options<span class="token punctuation">)</span>

Cypress<span class="token punctuation">.</span>Cookies<span class="token punctuation">.</span><span class="token function">preserveOnce</span><span class="token punctuation">(</span>names<span class="token operator">...</span><span class="token punctuation">)</span>

Cypress<span class="token punctuation">.</span>Cookies<span class="token punctuation">.</span><span class="token function">defaults</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="cypress-cookies-debug-enable-options" tabindex="-1"><a class="header-anchor" href="#cypress-cookies-debug-enable-options" aria-hidden="true">#</a> Cypress.Cookies.debug(enable, options)</h2><h3 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h3><ul><li>是否启用 Cookie 调试功能</li><li>更加易于了解 Cypress 是如何操作 Cookie 的</li></ul><p></p><h3 id="参数讲解" tabindex="-1"><a class="header-anchor" href="#参数讲解" aria-hidden="true">#</a> 参数讲解</h3><h4 id="enable" tabindex="-1"><a class="header-anchor" href="#enable" aria-hidden="true">#</a> enable</h4><ul><li>**true：**启用，默认，启用后在开发者工具（F12）的 Console 中可以看到详细的 Cookie 操作日志</li><li>**false：**不启用，Console 不会显示 Cookie 操作日志</li></ul><p></p><h4 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h4><p>**verbose：**是否详细打印 Cookie 操作日志，默认 true</p><h3 id="栗子一" tabindex="-1"><a class="header-anchor" href="#栗子一" aria-hidden="true">#</a> 栗子一</h3><h4 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123103023038-497912027.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="运行结果-console" tabindex="-1"><a class="header-anchor" href="#运行结果-console" aria-hidden="true">#</a> 运行结果（Console）</h4><p><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123103027266-441778597.png" alt="" loading="lazy"><br> 能看到设置和清除 Cookie 都有详细的操作日志</p><h3 id="栗子二" tabindex="-1"><a class="header-anchor" href="#栗子二" aria-hidden="true">#</a> 栗子二</h3><h4 id="代码-1" tabindex="-1"><a class="header-anchor" href="#代码-1" aria-hidden="true">#</a> 代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123103230366-1230125881.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="运行结果-console-1" tabindex="-1"><a class="header-anchor" href="#运行结果-console-1" aria-hidden="true">#</a> 运行结果（Console）</h4><p><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123103236325-1371863826.png" alt="" loading="lazy"><br> 只显示 Cookie 名称，不会显示 Cookie 对象</p><h3 id="栗子三" tabindex="-1"><a class="header-anchor" href="#栗子三" aria-hidden="true">#</a> 栗子三</h3><h4 id="代码-2" tabindex="-1"><a class="header-anchor" href="#代码-2" aria-hidden="true">#</a> 代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123103728846-679222758.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="运行结果-console-2" tabindex="-1"><a class="header-anchor" href="#运行结果-console-2" aria-hidden="true">#</a> 运行结果（Console）</h4><p><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123103733714-1731022650.png" alt="" loading="lazy"><br> 没有 Cookie 的操作日志</p><h2 id="cypress-cookies-preserveonce-names" tabindex="-1"><a class="header-anchor" href="#cypress-cookies-preserveonce-names" aria-hidden="true">#</a> Cypress.Cookies.preserveOnce(names...)</h2><h3 id="前言知识" tabindex="-1"><a class="header-anchor" href="#前言知识" aria-hidden="true">#</a> 前言知识</h3><p>之前也讲过，Cypress 会在每次测试前<strong>自动清除所有</strong> Cookie，以防止在测试用例之间共享状态</p><h4 id="cypress-为啥要自动清除-cookie" tabindex="-1"><a class="header-anchor" href="#cypress-为啥要自动清除-cookie" aria-hidden="true">#</a> Cypress 为啥要自动清除 Cookie？</h4><ul><li>通过在每次测试之前清除 Cookie，可以确保始终从干净状态开始测试</li><li>从一个干净的状态开始，可以防止测试用例彼此耦合，也可以防止在一项测试中对应用程序中的某些内容进行更改而影响下游的情况</li></ul><p></p><h4 id="实际场景" tabindex="-1"><a class="header-anchor" href="#实际场景" aria-hidden="true">#</a> 实际场景</h4><p>如果不保存 Cookie，则每次测试前都需要登录一次，这将大大浪费不必要的测试时间</p><h4 id="cypress-如何保存-cookie" tabindex="-1"><a class="header-anchor" href="#cypress-如何保存-cookie" aria-hidden="true">#</a> Cypress 如何保存 Cookie</h4><ul><li>Cypress.Cookies.preserveOnce(names...) 命令可以保存 Cookie，使它在多个测试用例间共享</li><li>注意：目前如果使用的是基于 Session 的 Cookie，此命令有效</li></ul><p></p><h3 id="实际使用的模板" tabindex="-1"><a class="header-anchor" href="#实际使用的模板" aria-hidden="true">#</a> 实际使用的模板</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123113645836-1149634181.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="实际栗子" tabindex="-1"><a class="header-anchor" href="#实际栗子" aria-hidden="true">#</a> 实际栗子</h3><h4 id="测试用例代码" tabindex="-1"><a class="header-anchor" href="#测试用例代码" aria-hidden="true">#</a> 测试用例代码</h4><p><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123113905368-1179184260.png" alt="" loading="lazy"><br> 两个测试用例，主要校验是否 Cookie 是否能共享</p><h4 id="commands-js-代码" tabindex="-1"><a class="header-anchor" href="#commands-js-代码" aria-hidden="true">#</a> commands.js 代码</h4><p><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123113930886-653140391.png" alt="" loading="lazy"><br> 自定义了一个 login 方法，主要就是登录操作</p><h4 id="运行结果" tabindex="-1"><a class="header-anchor" href="#运行结果" aria-hidden="true">#</a> 运行结果</h4><p><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123114146902-250134849.png" alt="" loading="lazy"><br> Cookie 成功在多个测试用例之间共享</p><h2 id="cypress-cookies-defaults-options" tabindex="-1"><a class="header-anchor" href="#cypress-cookies-defaults-options" aria-hidden="true">#</a> Cypress.Cookies.defaults(options)</h2><h3 id="作用-1" tabindex="-1"><a class="header-anchor" href="#作用-1" aria-hidden="true">#</a> 作用</h3><ul><li>设置全局默认 Cookie</li><li>可以修改全局默认值并保留一组 Cookie，这些 Cookie 将始终在测试用例之间保留</li><li>只要调用了这个方法，将在其他测试用例中都会生效</li></ul><p></p><h4 id="重点" tabindex="-1"><a class="header-anchor" href="#重点" aria-hidden="true">#</a> 重点</h4><ul><li>在 cypress/support/index.js 中配置此命令是绝佳选择</li><li>因为它会在所有测试文件之前加载</li></ul><p></p><h3 id="options-讲解" tabindex="-1"><a class="header-anchor" href="#options-讲解" aria-hidden="true">#</a> options 讲解</h3><p>只有一个 preserve 参数，接受下面四种数据类型</p><ul><li>String</li><li>Array</li><li>RegExp</li><li>Function</li></ul><p></p><h4 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式" aria-hidden="true">#</a> 使用方式</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 所有名为 cypress-session-cookies 将不会被清除</span>
Cypress<span class="token punctuation">.</span>Cookies<span class="token punctuation">.</span><span class="token function">defaults</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">preserve</span><span class="token operator">:</span> <span class="token string">&#39;cypress-session-cookies&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 所有名为 cypress-session-cookies 或 sessions_id 将不会被清除</span>
<span class="token comment">// 多个 Cookie 可以用数组来存储</span>
Cypress<span class="token punctuation">.</span>Cookies<span class="token punctuation">.</span><span class="token function">defaults</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">preserve</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;sessions_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cypress-session-cookies&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 满足此正则表达式的 Cookie 将不会被清除</span>
Cypress<span class="token punctuation">.</span>Cookies<span class="token punctuation">.</span><span class="token function">defaults</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">preserve</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">session|cookie</span><span class="token regex-delimiter">/</span></span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
Cypress<span class="token punctuation">.</span>Cookies<span class="token punctuation">.</span><span class="token function">defaults</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">preserve</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">cookie</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 可以在这里实现自己的逻辑</span>
    <span class="token comment">// 如果函数返回 true, 那 Cookie 则不会被清除</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一般用前三个就能满足大部分场景了</p><h3 id="实际栗子-1" tabindex="-1"><a class="header-anchor" href="#实际栗子-1" aria-hidden="true">#</a> 实际栗子</h3><h4 id="测试用例代码-1" tabindex="-1"><a class="header-anchor" href="#测试用例代码-1" aria-hidden="true">#</a> 测试用例代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123132248067-1565649606.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="support-index-js-代码" tabindex="-1"><a class="header-anchor" href="#support-index-js-代码" aria-hidden="true">#</a> support/index.js 代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123132253805-1778448418.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>使用正则表达式去匹配</li><li><strong>含义：<strong>cookie 名称</strong>包含</strong> session 或 cookie</li></ul><p></p><h4 id="运行结果-1" tabindex="-1"><a class="header-anchor" href="#运行结果-1" aria-hidden="true">#</a> 运行结果</h4><p><img src="https://img2020.cnblogs.com/blog/1896874/202011/1896874-20201123133153432-1933322118.png" alt="" loading="lazy"><br> Cookie 也共享成功了</p><h4 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h4><ul><li>这种方式感觉更适合在项目中使用</li><li>一般我们都会提前知道需要的 Cookie 是什么，此时就能提前在 support/index.js 中调用此命令去设置 Cookie 了</li></ul><p></p>`,74),d={href:"https://www.cnblogs.com/poloyy/p/14023979.html",target:"_blank",rel:"noopener noreferrer"};function h(u,k){const s=e("ExternalLinkIcon");return i(),o("div",null,[l,a("blockquote",null,[a("p",null,[a("a",d,[t("https://www.cnblogs.com/poloyy/p/14023979.html"),r(s)])])])])}const m=n(c,[["render",h],["__file","Cypress系列（090）--Cypress.Cookies-命令详解以及如何跨测试用例共享-Cookies.html.vue"]]);export{m as default};
