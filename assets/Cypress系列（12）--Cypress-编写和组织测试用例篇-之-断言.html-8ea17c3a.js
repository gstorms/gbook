import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as e,c as p,a as n,b as c,d as i,f as o}from"./app-3f278ba4.js";const l={},u=o(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><ul><li>断言是测试用例的必要组成部分</li><li>没有断言，咱们就不知道测试用例的有效性，到底通过没通过</li><li>Cypress 的断言基于 Chai 断言库，并且增加了对 Sinon-Chai、Chai-jQuery 断言库的支持，其中就包括 BDD 和 TDD 格式的断言</li></ul><p></p><h4 id="bdd-格式的断言" tabindex="-1"><a class="header-anchor" href="#bdd-格式的断言" aria-hidden="true">#</a> BDD 格式的断言</h4><ul><li>expect</li><li>should</li></ul><p></p><h4 id="tdd-格式的断言" tabindex="-1"><a class="header-anchor" href="#tdd-格式的断言" aria-hidden="true">#</a> TDD 格式的断言</h4><p>assert</p><h2 id="常见的断言方式" tabindex="-1"><a class="header-anchor" href="#常见的断言方式" aria-hidden="true">#</a> 常见的断言方式</h2><p>以下列出了常见的元素断言</p><h3 id="长度-length" tabindex="-1"><a class="header-anchor" href="#长度-length" aria-hidden="true">#</a> 长度（Length）</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 重试，直至找到3个匹配的&lt;li.selected&gt;</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;li.selected&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.length&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>重点：</strong> hava.length</p><h3 id="类-class" tabindex="-1"><a class="header-anchor" href="#类-class" aria-hidden="true">#</a> 类（Class）</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 重试，直至这个input不再有disabled的class</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;not.hava.class&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;disabled&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>**重点： not.hava.class **<br>  <br> 值（Value）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 重试，直至这个textarea的值为 poloyy</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;textarea&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.value&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;poloyy&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>**重点： **have.value</p><h3 id="文本内容-text-content" tabindex="-1"><a class="header-anchor" href="#文本内容-text-content" aria-hidden="true">#</a> 文本内容（Text Content）</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 重试，直至这个span不再包含&#39;click me&#39;</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token string">&#39;span.help&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;not.contain&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;click me&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>重点：</strong> not.contain</p><h3 id="针对元素是否可见-visibility" tabindex="-1"><a class="header-anchor" href="#针对元素是否可见-visibility" aria-hidden="true">#</a> 针对元素是否可见（Visibility）</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 重试，直至button可见</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;be.visible&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>重点：</strong> be.visible</p><h3 id="针对元素是否存在-existence" tabindex="-1"><a class="header-anchor" href="#针对元素是否存在-existence" aria-hidden="true">#</a> 针对元素是否存在（Existence）</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 重试，直至 id=loading 元素不再存在</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;#loading&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;not.exist&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>重点：</strong> not.exist</p><h3 id="针对元素状态-state" tabindex="-1"><a class="header-anchor" href="#针对元素状态-state" aria-hidden="true">#</a> 针对元素状态（State）</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 重试，直至radio状态是checked</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;:radio&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;be.checked&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>重点：</strong> be.checked</p><h3 id="针对-css" tabindex="-1"><a class="header-anchor" href="#针对-css" aria-hidden="true">#</a> 针对 CSS</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 重试，直至complete这个类有匹配的css为止</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;.completed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&#39;have.css&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;text-decoration&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;line-through&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>重点：</strong> hava.css</p><h3 id="针对回调函数-callback" tabindex="-1"><a class="header-anchor" href="#针对回调函数-callback" aria-hidden="true">#</a> 针对回调函数（callback）</h3><p>如果内建的断言没有满足你的需求，可以自己写断言函数，然后作为一个<strong>回调以参数的形式</strong>传给 .should()</p><h4 id="假设源html如下" tabindex="-1"><a class="header-anchor" href="#假设源html如下" aria-hidden="true">#</a> 假设源HTML如下</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>main-abc123 heading-xyz987<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Introduction<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h4 id="自己写的断言函数" tabindex="-1"><a class="header-anchor" href="#自己写的断言函数" aria-hidden="true">#</a> 自己写的断言函数</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200604161533420-2069059568.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,40),r={href:"https://www.cnblogs.com/poloyy/p/13044532.html",target:"_blank",rel:"noopener noreferrer"};function d(h,k){const a=t("ExternalLinkIcon");return e(),p("div",null,[u,n("blockquote",null,[n("p",null,[n("a",r,[c("https://www.cnblogs.com/poloyy/p/13044532.html"),i(a)])])])])}const m=s(l,[["render",d],["__file","Cypress系列（12）--Cypress-编写和组织测试用例篇-之-断言.html.vue"]]);export{m as default};
