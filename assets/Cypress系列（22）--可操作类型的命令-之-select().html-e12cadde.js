import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as o,a as n,b as a,d as e,f as i}from"./app-207e7d61.js";const p={},u=i(`<h2 id="select" tabindex="-1"><a class="header-anchor" href="#select" aria-hidden="true">#</a> .select()</h2><p>在 <code>&lt;select&gt;</code> 中选择一个 <code>&lt;option&gt; </code></p><h3 id="语法格式" tabindex="-1"><a class="header-anchor" href="#语法格式" aria-hidden="true">#</a> 语法格式</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 选中指定值的选项</span>
<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token comment">// 选中指定值的多个选项</span>
<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span>
<span class="token comment">// 选中指定值的选项，且带参数</span>
<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
<span class="token comment">// 选中指定值的多个选项，且带参数</span>
<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="参数讲解" tabindex="-1"><a class="header-anchor" href="#参数讲解" aria-hidden="true">#</a> 参数讲解</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200612122932507-306070729.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="正确用法" tabindex="-1"><a class="header-anchor" href="#正确用法" aria-hidden="true">#</a> 正确用法</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 选择 值=user的 option</span>
cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;select&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="错误用法" tabindex="-1"><a class="header-anchor" href="#错误用法" aria-hidden="true">#</a> 错误用法</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 不能直接通过 cy 调用</span>
cy<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&#39;John Adams&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// location 并不是 select 元素</span>
cy<span class="token punctuation">.</span><span class="token function">location</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="前端-html-代码" tabindex="-1"><a class="header-anchor" href="#前端-html-代码" aria-hidden="true">#</a> 前端 html 代码</h2><p>后面的多个 .select() 栗子都以这个 html 页面为基础哦<br><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200612140804481-1702586284.png" alt="" loading="lazy"></p><h2 id="select-value-的栗子" tabindex="-1"><a class="header-anchor" href="#select-value-的栗子" aria-hidden="true">#</a> .select(value) 的栗子</h2><h4 id="测试文件代码" tabindex="-1"><a class="header-anchor" href="#测试文件代码" aria-hidden="true">#</a> 测试文件代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200612140529131-1645827920.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="重点" tabindex="-1"><a class="header-anchor" href="#重点" aria-hidden="true">#</a> 重点</h4><p>.select() 可以传 value 属性（“1”），或者文本内容（“oranges”）</p><h2 id="select-values-的栗子" tabindex="-1"><a class="header-anchor" href="#select-values-的栗子" aria-hidden="true">#</a> .select(values) 的栗子</h2><h4 id="测试文件代码-1" tabindex="-1"><a class="header-anchor" href="#测试文件代码-1" aria-hidden="true">#</a> 测试文件代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200612140626891-1448455151.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>后面再讲 .invoke()</li><li>需要注意，如果要<strong>选多个 option</strong> 的话， <code>&lt;select&gt;</code> 必须这样写 <code>&lt;select multiple&gt;</code></li></ul><p></p><h2 id="select-value-options-的栗子" tabindex="-1"><a class="header-anchor" href="#select-value-options-的栗子" aria-hidden="true">#</a> .select(value, options) 的栗子</h2><h4 id="测试文件代码-2" tabindex="-1"><a class="header-anchor" href="#测试文件代码-2" aria-hidden="true">#</a> 测试文件代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200612140757303-1066591774.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="重点-1" tabindex="-1"><a class="header-anchor" href="#重点-1" aria-hidden="true">#</a> 重点</h4><p>因为第二个 <code>&lt;select&gt;</code> 默认是不可见状态，所以不加 {force:true} 会报错，如下图<br><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200612140859457-1950453148.png" alt="" loading="lazy"></p><ul><li>它的错误提示也很明显指明了解决方案</li><li>use {force : true} to disable error checking**【通过 { force : true } 来禁止错误检查】**</li></ul><p></p><h4 id="再来看看元素不可见时-命令会提示啥" tabindex="-1"><a class="header-anchor" href="#再来看看元素不可见时-命令会提示啥" aria-hidden="true">#</a> 再来看看元素不可见时，命令会提示啥</h4><ul><li>this element is not visible</li><li>简直不要太人性化好吧</li></ul><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200612141115871-1635708029.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="select-values-options-的栗子" tabindex="-1"><a class="header-anchor" href="#select-values-options-的栗子" aria-hidden="true">#</a> .select(values, options) 的栗子</h2><h4 id="测试文件代码-3" tabindex="-1"><a class="header-anchor" href="#测试文件代码-3" aria-hidden="true">#</a> 测试文件代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200612141212330-1548337003.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="特殊场景" tabindex="-1"><a class="header-anchor" href="#特殊场景" aria-hidden="true">#</a> 特殊场景</h2><h4 id="html-代码" tabindex="-1"><a class="header-anchor" href="#html-代码" aria-hidden="true">#</a> html 代码</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">disabled</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sz<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>深圳<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gz<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>广州<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重点是 select 加了 disabled</p><h4 id="测试代码" tabindex="-1"><a class="header-anchor" href="#测试代码" aria-hidden="true">#</a> 测试代码</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;select&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;sz&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">force</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h4 id="测试结果" tabindex="-1"><a class="header-anchor" href="#测试结果" aria-hidden="true">#</a> 测试结果</h4>`,46),r=n("img",{src:"https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200612142311645-1717309490.png",alt:"",loading:"lazy"},null,-1),d=n("br",null,null,-1),h=n("code",null,"<select>",-1),g=n("br",null,null,-1),k=n("br",null,null,-1),m=n("strong",null,"结尾",-1),b=n("br",null,null,-1),v=n("br",null,null,-1),f={href:"https://www.cnblogs.com/poloyy/p/13052972.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.cnblogs.com/poloyy/p/13066025.html",target:"_blank",rel:"noopener noreferrer"};function x(y,j){const s=c("ExternalLinkIcon");return l(),o("div",null,[u,n("p",null,[r,d,a(" 即使加了 {force : true} ，也不会禁止检查 "),h,a(" 是否可以选择 option，如果加了disabled，代表不可选择，所以仍然报错"),g,a("  "),k,m,b,a(" 本文是博主基于对蔡超老师的《Cypress 从入门到精通》阅读理解完后输出的博文，并附上了自己的理解"),v,a(" 对书籍感兴趣的，大家可以参考本篇博客："),n("a",f,[a("https://www.cnblogs.com/poloyy/p/13052972.html"),e(s)]),a("，考虑自身需求进行购买")]),n("blockquote",null,[n("p",null,[n("a",_,[a("https://www.cnblogs.com/poloyy/p/13066025.html"),e(s)])])])])}const z=t(p,[["render",x],["__file","Cypress系列（22）--可操作类型的命令-之-select().html.vue"]]);export{z as default};
