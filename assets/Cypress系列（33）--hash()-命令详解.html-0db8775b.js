import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as t,c as i,a,b as c,d as l,f as o}from"./app-207e7d61.js";const p={},r=o(`<h2 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h2><ul><li>获取页面当前的 url 的哈希值</li><li>等价于 cy.location(&#39;hash&#39;)</li></ul><p></p><h2 id="语法格式" tabindex="-1"><a class="header-anchor" href="#语法格式" aria-hidden="true">#</a> 语法格式</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
cy<span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>**options：**只有 timeout 和 log，不再展开讲了</p><h2 id="正确写法" tabindex="-1"><a class="header-anchor" href="#正确写法" aria-hidden="true">#</a> 正确写法</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cy<span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="实际栗子" tabindex="-1"><a class="header-anchor" href="#实际栗子" aria-hidden="true">#</a> 实际栗子</h2><h4 id="html-代码" tabindex="-1"><a class="header-anchor" href="#html-代码" aria-hidden="true">#</a> html 代码</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>users<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>
            
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h4 id="测试文件代码" tabindex="-1"><a class="header-anchor" href="#测试文件代码" aria-hidden="true">#</a> 测试文件代码</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200617102111059-899809479.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="测试结果" tabindex="-1"><a class="header-anchor" href="#测试结果" aria-hidden="true">#</a> 测试结果</h4><figure><img src="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200617102114324-405565986.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h4><p>感觉这方法应该用的不多，如果是普通的链接，是不会返回哈希值的</p>`,18),d={href:"https://www.cnblogs.com/poloyy/p/13150936.html",target:"_blank",rel:"noopener noreferrer"};function u(h,g){const n=e("ExternalLinkIcon");return t(),i("div",null,[r,a("blockquote",null,[a("p",null,[a("a",d,[c("https://www.cnblogs.com/poloyy/p/13150936.html"),l(n)])])])])}const v=s(p,[["render",u],["__file","Cypress系列（33）--hash()-命令详解.html.vue"]]);export{v as default};
