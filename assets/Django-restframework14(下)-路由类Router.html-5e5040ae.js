import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o,c as i,a as n,b as s,d as t,f as a}from"./app-731a6e06.js";const u={},r=a(`<h1 id="drf14-下-路由类router" tabindex="-1"><a class="header-anchor" href="#drf14-下-路由类router" aria-hidden="true">#</a> DRF14(下)-路由类Router</h1><h2 id="_1-作用" tabindex="-1"><a class="header-anchor" href="#_1-作用" aria-hidden="true">#</a> 1.作用</h2><p>快速为一个‘资源’比较多的视图类声明所有普通路由。</p><h2 id="_2-用法" tabindex="-1"><a class="header-anchor" href="#_2-用法" aria-hidden="true">#</a> 2.用法</h2><h3 id="使用simplerouter" tabindex="-1"><a class="header-anchor" href="#使用simplerouter" aria-hidden="true">#</a> 使用SimpleRouter</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> routers

router <span class="token operator">=</span> routers<span class="token punctuation">.</span>SimpleRouter<span class="token punctuation">(</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span>register<span class="token punctuation">(</span><span class="token string">r&#39;users&#39;</span><span class="token punctuation">,</span> UserViewSet<span class="token punctuation">)</span>
router<span class="token punctuation">.</span>register<span class="token punctuation">(</span><span class="token string">r&#39;accounts&#39;</span><span class="token punctuation">,</span> AccountViewSet<span class="token punctuation">)</span>
urlpatterns <span class="token operator">=</span> router<span class="token punctuation">.</span>urls
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于register()方法有两个必要的参数：</p><ul><li>prefix：系列路由前缀</li><li>viewset：视图集合类<br> 可选参数：</li><li>base_name:用于创建url的基础名字，如果没有设置，就根据queryset值设置，如果没有设置queryset属性，那么就必须设置base_name. 如果没有设置的话就会报错</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token string">&#39;base_name&#39;</span> argument <span class="token keyword">not</span> specified<span class="token punctuation">,</span> <span class="token keyword">and</span> could <span class="token keyword">not</span> automatically determine the name <span class="token keyword">from</span> the viewset<span class="token punctuation">,</span> <span class="token keyword">as</span> it does <span class="token keyword">not</span> have a <span class="token string">&#39;.queryset&#39;</span> attribute<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>自动生成的实例：</p><ul><li>URL pattern: ^users/Name:‘user−list′−URLpattern:users/pk/Name:‘user−list′−URLpattern:users/pk/ Name: ‘user-detail’</li><li>URL pattern: ^accounts/Name:‘account−list′−URLpattern:accounts/pk/Name:‘account−list′−URLpattern:accounts/pk/ Name: ‘account-detail’</li></ul><h3 id="使用include方法" tabindex="-1"><a class="header-anchor" href="#使用include方法" aria-hidden="true">#</a> 使用include方法</h3><ul><li>方法一：</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>router <span class="token operator">=</span> routers<span class="token punctuation">.</span>SimpleRouter<span class="token punctuation">(</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span>register<span class="token punctuation">(</span><span class="token string">r&#39;users&#39;</span><span class="token punctuation">,</span> UserViewSet<span class="token punctuation">)</span>
router<span class="token punctuation">.</span>register<span class="token punctuation">(</span><span class="token string">r&#39;accounts&#39;</span><span class="token punctuation">,</span> AccountViewSet<span class="token punctuation">)</span>

urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^forgot-password/$&#39;</span><span class="token punctuation">,</span> ForgotPasswordFormView<span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

urlpatterns <span class="token operator">+=</span> router<span class="token punctuation">.</span>urls
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>方法二：</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^forgot-password/$&#39;</span><span class="token punctuation">,</span> ForgotPasswordFormView<span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^&#39;</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span>router<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>方法三：</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^forgot-password/$&#39;</span><span class="token punctuation">,</span> ForgotPasswordFormView<span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^api/&#39;</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span>router<span class="token punctuation">.</span>urls<span class="token punctuation">,</span> namespace<span class="token operator">=</span><span class="token string">&#39;api&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意:如果序列化器为超链接类型（hyperlinked serializers），那就需要确保任何view_name都需要反射到这个正确的命名空间上。如对于需要超链接到用户详细信息user-detail的函数，需要设置view_name=’api:user-detail’</p><h3 id="另外的链接和行为" tabindex="-1"><a class="header-anchor" href="#另外的链接和行为" aria-hidden="true">#</a> 另外的链接和行为</h3><p>任何被@detail_route 或者 @list_route装饰的函数都会被设置url路径，例如ViewSet中的方法：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 自定义的权限管理类</span>
<span class="token keyword">from</span> myapp<span class="token punctuation">.</span>permissions <span class="token keyword">import</span> IsAdminOrIsSelf
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>decorators <span class="token keyword">import</span> detail_route

<span class="token keyword">class</span> <span class="token class-name">UserViewSet</span><span class="token punctuation">(</span>ModelViewSet<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token decorator annotation punctuation">@detail_route</span><span class="token punctuation">(</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;post&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> permission_classes<span class="token operator">=</span><span class="token punctuation">[</span>IsAdminOrIsSelf<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">set_password</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> pk<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>生成的路由地址为：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>URL pattern<span class="token punctuation">:</span> <span class="token operator">^</span>users<span class="token operator">/</span><span class="token punctuation">{</span>pk<span class="token punctuation">}</span><span class="token operator">/</span>set_password<span class="token operator">/</span>$ Name<span class="token punctuation">:</span> <span class="token string">&#39;user-set-password&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>你也可以自定义url路径：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> myapp<span class="token punctuation">.</span>permissions <span class="token keyword">import</span> IsAdminOrIsSelf
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>decorators <span class="token keyword">import</span> detail_route

<span class="token keyword">class</span> <span class="token class-name">UserViewSet</span><span class="token punctuation">(</span>ModelViewSet<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token decorator annotation punctuation">@detail_route</span><span class="token punctuation">(</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;post&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> permission_classes<span class="token operator">=</span><span class="token punctuation">[</span>IsAdminOrIsSelf<span class="token punctuation">]</span><span class="token punctuation">,</span> url_path<span class="token operator">=</span><span class="token string">&#39;change-password&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">set_password</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> pk<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时的url路径为：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>URL pattern<span class="token punctuation">:</span> <span class="token operator">^</span>users<span class="token operator">/</span><span class="token punctuation">{</span>pk<span class="token punctuation">}</span><span class="token operator">/</span>change<span class="token operator">-</span>password<span class="token operator">/</span>$ Name<span class="token punctuation">:</span> <span class="token string">&#39;user-change-password&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>你也可以同时使用url_path和url_name参数控制生成的url路径</p><h2 id="_3-路由接口指南" tabindex="-1"><a class="header-anchor" href="#_3-路由接口指南" aria-hidden="true">#</a> 3. 路由接口指南</h2><h3 id="simplerouter" tabindex="-1"><a class="header-anchor" href="#simplerouter" aria-hidden="true">#</a> SimpleRouter</h3>`,31),c=n("table",{methodname:""},[n("thead",null,[n("tr",null,[n("th",null,"URL Style"),n("th",null,"HTTP Method"),n("th",null,"Action"),n("th",null,"URL Name")])]),n("tbody",null,[n("tr",null,[n("td",null,"{prefix}/"),n("td",null,"GET"),n("td",null,"list"),n("td",null,"{basename}-list")]),n("tr",null,[n("td"),n("td",null,"POST"),n("td",null,"create"),n("td")]),n("tr",{methodname:""},[n("td",null,"{prefix}/{methodname}/"),n("td",null,[s("GET, or as specified by "),n("code",null,"methods"),s(" argument")]),n("td",null,[n("code",null,"@list_route"),s(" decorated method")]),n("td",null,"{basename}-")]),n("tr",null,[n("td",null,"{prefix}/{lookup}/"),n("td",null,"GET"),n("td",null,"retrieve"),n("td",null,"{basename}-detail")]),n("tr",null,[n("td"),n("td",null,"PUT"),n("td",null,"update"),n("td")]),n("tr",null,[n("td"),n("td",null,"PATCH"),n("td",null,"partial_update"),n("td")]),n("tr",null,[n("td"),n("td",null,"DELETE"),n("td",null,"destroy"),n("td")]),n("tr",null,[n("td",null,"{prefix}/{lookup}/{methodname}/"),n("td",null,[s("GET, or as specified by "),n("code",null,"methods"),s(" argument")]),n("td",null,[n("code",null,"@detail_route"),s(" decorated method")]),n("td",null,"{basename}-")])])],-1),d=a(`<p>SimpleRouter会默认在url结尾添加一个‘/’，可以通过设置trailing_slash为False，不添加尾斜杠</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>router <span class="token operator">=</span> SimpleRouter<span class="token punctuation">(</span>trailing_slash<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>路由查询值默认包含除了斜杠和period characters之外的任何字符<br> 通过设置lookup_value_regex属性可以限制查找，如将查询字段设置为uuid</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MyModelViewSet</span><span class="token punctuation">(</span>mixins<span class="token punctuation">.</span>RetrieveModelMixin<span class="token punctuation">,</span> viewsets<span class="token punctuation">.</span>GenericViewSet<span class="token punctuation">)</span><span class="token punctuation">:</span>
    lookup_field <span class="token operator">=</span> <span class="token string">&#39;my_model_id&#39;</span>
    lookup_value_regex <span class="token operator">=</span> <span class="token string">&#39;[0-9a-f]{32}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="defaultrouter" tabindex="-1"><a class="header-anchor" href="#defaultrouter" aria-hidden="true">#</a> DefaultRouter</h3>`,5),k=n("table",{methodname:""},[n("thead",null,[n("tr",null,[n("th",null,"URL Style"),n("th",null,"HTTP Method"),n("th",null,"Action"),n("th",null,"URL Name")])]),n("tbody",null,[n("tr",null,[n("td",null,"[.format]"),n("td",null,"GET"),n("td",null,"automatically generated root view"),n("td",null,"api-root")]),n("tr",null,[n("td",null,"{prefix}/[.format]"),n("td",null,"GET"),n("td",null,"list"),n("td",null,"{basename}-list")]),n("tr",null,[n("td"),n("td",null,"POST"),n("td",null,"create"),n("td")]),n("tr",{methodname:""},[n("td",null,"{prefix}/{methodname}/[.format]"),n("td",null,[s("GET, or as specified by "),n("code",null,"methods"),s(" argument")]),n("td",null,[n("code",null,"@list_route"),s(" decorated method")]),n("td",null,"{basename}-")]),n("tr",null,[n("td",null,"{prefix}/{lookup}/[.format]"),n("td",null,"GET"),n("td",null,"retrieve"),n("td",null,"{basename}-detail")]),n("tr",null,[n("td"),n("td",null,"PUT"),n("td",null,"update"),n("td")]),n("tr",null,[n("td"),n("td",null,"PATCH"),n("td",null,"partial_update"),n("td")]),n("tr",null,[n("td"),n("td",null,"DELETE"),n("td",null,"destroy"),n("td")]),n("tr",null,[n("td",null,"{prefix}/{lookup}/{methodname}/[.format]"),n("td",null,[s("GET, or as specified by "),n("code",null,"methods"),s(" argument")]),n("td",null,[n("code",null,"@detail_route"),s(" decorated method")]),n("td",null,"{basename}-")])])],-1),m=a(`<p>也有trailing_slash属性</p><h3 id="自定义路由custom-routers" tabindex="-1"><a class="header-anchor" href="#自定义路由custom-routers" aria-hidden="true">#</a> 自定义路由Custom Routers</h3><p>一般不需要经常实现自定义路由，但是当你需要构造特定的路由系统时，它将非常有用，你可以将你的自定义模式封装成一个路由，以便重复调用，而不用为每一个新视图写一个路由。<br> 自定义路由的简单方法:继承一个已经存在的路由类。.routes属性通常用于作为url模式的模板，用来匹配每一个视图函数，.routes属性值为一系列路由Route命名元组列表构成：</p><ul><li>url</li><li>{prefix}：url前缀，用来标识同一系列的路由</li><li>{lookup}： 查询字段，用来匹配单一实例</li><li>{trailing_slash}： 是否在末尾自动添加’/’</li><li>mapping: HTTP方法-视图函数映射表</li><li>name: url名称，用于重定向</li><li>{basename}： url名称创建的基础</li><li>initkwargs：初始化一个视图实例时附加的参数字典，suffix（后缀参数）一般被用于在生成一个视图名称和链接时标识视图集合类型</li></ul><p>示例：<br> 首先通过继承SimpleRouter，创建一个自定义路由类</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>routers <span class="token keyword">import</span> Route<span class="token punctuation">,</span> DynamicDetailRoute<span class="token punctuation">,</span> SimpleRouter

<span class="token keyword">class</span> <span class="token class-name">CustomReadOnlyRouter</span><span class="token punctuation">(</span>SimpleRouter<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    A router for read-only APIs, which doesn&#39;t use trailing slashes.
    &quot;&quot;&quot;</span>
    routes <span class="token operator">=</span> <span class="token punctuation">[</span>
        Route<span class="token punctuation">(</span>
            url<span class="token operator">=</span><span class="token string">r&#39;^{prefix}$&#39;</span><span class="token punctuation">,</span>
            mapping<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            name<span class="token operator">=</span><span class="token string">&#39;{basename}-list&#39;</span><span class="token punctuation">,</span>
            initkwargs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;suffix&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;List&#39;</span><span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        Route<span class="token punctuation">(</span>
            url<span class="token operator">=</span><span class="token string">r&#39;^{prefix}/{lookup}$&#39;</span><span class="token punctuation">,</span>
            mapping<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;retrieve&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            name<span class="token operator">=</span><span class="token string">&#39;{basename}-detail&#39;</span><span class="token punctuation">,</span>
            initkwargs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;suffix&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Detail&#39;</span><span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        DynamicDetailRoute<span class="token punctuation">(</span>
            url<span class="token operator">=</span><span class="token string">r&#39;^{prefix}/{lookup}/{methodnamehyphen}$&#39;</span><span class="token punctuation">,</span>
            name<span class="token operator">=</span><span class="token string">&#39;{basename}-{methodnamehyphen}&#39;</span><span class="token punctuation">,</span>
            initkwargs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ViewSet为：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">UserViewSet</span><span class="token punctuation">(</span>viewsets<span class="token punctuation">.</span>ReadOnlyModelViewSet<span class="token punctuation">)</span><span class="token punctuation">:</span>
    queryset <span class="token operator">=</span> User<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    serializer_class <span class="token operator">=</span> UserSerializer
    lookup_field <span class="token operator">=</span> <span class="token string">&#39;username&#39;</span>

    <span class="token decorator annotation punctuation">@detail_route</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">group_names</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> pk<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        返回用户参加的所有小组名称列表
        &quot;&quot;&quot;</span>
        user <span class="token operator">=</span> self<span class="token punctuation">.</span>get_object<span class="token punctuation">(</span><span class="token punctuation">)</span>
        groups <span class="token operator">=</span> user<span class="token punctuation">.</span>groups<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> Response<span class="token punctuation">(</span><span class="token punctuation">[</span>group<span class="token punctuation">.</span>name <span class="token keyword">for</span> group <span class="token keyword">in</span> groups<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注册路由：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>router <span class="token operator">=</span> CustomReadOnlyRouter<span class="token punctuation">(</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span>register<span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> UserViewSet<span class="token punctuation">)</span>
urlpatterns <span class="token operator">=</span> router<span class="token punctuation">.</span>urls
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将会创建以下映射：</p>`,11),v=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"URL"),n("th",null,"HTTP Method"),n("th",null,"Action"),n("th",null,"URL Name")])]),n("tbody",null,[n("tr",null,[n("td",null,"/users"),n("td",null,"GET"),n("td",null,"list"),n("td",null,"user-list")]),n("tr",null,[n("td",{username:""},"/users/"),n("td",null,"GET"),n("td",null,"retrieve"),n("td",null,"user-detail")]),n("tr",null,[n("td",null,"/users/{username}/group-names"),n("td",null,"GET"),n("td",null,"group_names"),n("td",null,"user-group-names")])])],-1),b=a(`<h3 id="更加个性化的路由类" tabindex="-1"><a class="header-anchor" href="#更加个性化的路由类" aria-hidden="true">#</a> 更加个性化的路由类</h3><p>如果你想编写一个完全个性化的路由类，可以通过重写BaseRouter和get_urls(self)方法<br> get_urls(self)方法会检查注册的视图集合类，然后返回一个路由模式列表（URL patterns）<br> 注册之前，首先会通过self.registry检查设置的属性（视图集合和base_name）<br> 也可以重写get_default_base_name(self, viewset)或者通过其他方式明确的设置base_name参数</p><h2 id="_4-第三方包" tabindex="-1"><a class="header-anchor" href="#_4-第三方包" aria-hidden="true">#</a> 4.第三方包</h2><ul><li>DRF Nested Routers</li><li>ModelRouter (wq.db.rest)</li></ul><p>提供了一个模型继承类，继承自利用register_model()扩展后的DefaultRouter，非常类似于Django’s admin.site.register，需要的唯一参数rest.router.register_model是一个数         据库模型类，因为可以从模型类中推断出url prefix, serializer, 和viewset</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> wq<span class="token punctuation">.</span>db <span class="token keyword">import</span> rest
<span class="token keyword">from</span> myapp<span class="token punctuation">.</span>models <span class="token keyword">import</span> MyModel

rest<span class="token punctuation">.</span>router<span class="token punctuation">.</span>register_model<span class="token punctuation">(</span>MyModel<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>DRF-extensions<br> 用于创建嵌套的viewsets.</li></ul>`,7),h=n("br",null,null,-1),g=n("br",null,null,-1),_={href:"https://blog.csdn.net/runnoob_1115/article/details/78486954",target:"_blank",rel:"noopener noreferrer"},y=n("br",null,null,-1),f=n("br",null,null,-1),w=n("br",null,null,-1),x={href:"https://blog.csdn.net/runnoob_1115/article/details/78486954",target:"_blank",rel:"noopener noreferrer"},R=n("br",null,null,-1),S=n("br",null,null,-1),T={href:"https://blog.csdn.net/runnoob_1115/article/details/78486954",target:"_blank",rel:"noopener noreferrer"};function U(q,N){const e=l("ExternalLinkIcon");return o(),i("div",null,[r,c,d,k,m,v,b,n("p",null,[s("————————————————"),h,s(" 版权声明：本文为CSDN博主「敲代码的伪文青」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。"),g,s(" 原文链接："),n("a",_,[s("https://blog.csdn.net/runnoob_1115/article/details/78486954"),t(e)]),y,s(" ————————————————"),f,s(" 版权声明：本文为CSDN博主「敲代码的伪文青」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。"),w,s(" 原文链接："),n("a",x,[s("https://blog.csdn.net/runnoob_1115/article/details/78486954"),t(e)])]),n("p",null,[s("————————————————"),R,s(" 版权声明：本文为CSDN博主「敲代码的伪文青」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。"),S,s(" 原文链接："),n("a",T,[s("https://blog.csdn.net/runnoob_1115/article/details/78486954"),t(e)])])])}const L=p(u,[["render",U],["__file","Django-restframework14(下)-路由类Router.html.vue"]]);export{L as default};
