import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c as i,a as n,b as s,d as p,f as c}from"./app-731a6e06.js";const l={},r=c(`<h1 id="drf22-permissions" tabindex="-1"><a class="header-anchor" href="#drf22-permissions" aria-hidden="true">#</a> DRF22-Permissions</h1><p>身份验证或标识本身通常不足以获得访问信息或代码的权限。为此，请求访问的实体必须具有授权。</p><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1 简介</h2><p>permissions和authentication，throttling一起，确定一个请求是否具有访问权限。<br> 权限检查一般在请求执行到的动作之前进行检查。Permission 一般会使用用户的认证信息（request.user和request.auth）来确定接收到的请求是否应该被允许。<br> Permissions被用来授予不同种类的用给在不同的接口的访问权限。<br> 简单的形式就是授予认证用户全部权限，拒绝未认证的用户访问请求。这与IsAuthenticated权限类一致。<br> 不那么严格的方式就是未认证用户具有只读权限（IsAuthenticatedOrReadOnly）。</p><h3 id="_1-确定认证权限" tabindex="-1"><a class="header-anchor" href="#_1-确定认证权限" aria-hidden="true">#</a> 1 确定认证权限</h3><p>权限一般被定义成一系列权力类的列表（permission_classes）。<br> 在运行主体之前，会先检查列表中的每一个权限，如果全都失败，产生一个exceptions.PermissionDenied或者exceptions.NotAuthenticated，主体部分将不会运行。<br> 如果权限检查根据以下2规则返回”403 Forbidden”或”401 Unauthorized” ：</p><ul><li>认证成功，但是权限不够，403 Forbidden response</li><li>认证失败，优先级最高的认证类没有使用WWW-Authenticate响应头，将会返回HTTP 403 Forbidden response</li><li>认证失败，优先级最高的认证类使用了WWW-Authenticate响应头，将返回HTTP 401 Unauthorized response</li></ul><h3 id="_2-对象级权限-object-level-permissions" tabindex="-1"><a class="header-anchor" href="#_2-对象级权限-object-level-permissions" aria-hidden="true">#</a> 2 对象级权限（Object level permissions）</h3><p>对象级权限用于为确定用户是否有权对对象执行操作，该对象一般指模型实例<br> 对象级权限一般在.get_object()方法被调用时运行。和视图函数级权限一样。未经授权也会抛出exceptions.PermissionDenied异常<br> 如果你在编写视图函数时，需要使用对象级权限管理，或者你在重写通用视图的get_object方法，你需要调用.check_object_permissions(request, obj)方法。该方法将会抛出PermissionDenied或者 NotAuthenticated，或者返回拥有的合适权限。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">get_object</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    obj <span class="token operator">=</span> get_object_or_404<span class="token punctuation">(</span>self<span class="token punctuation">.</span>get_queryset<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>check_object_permissions<span class="token punctuation">(</span>self<span class="token punctuation">.</span>request<span class="token punctuation">,</span> obj<span class="token punctuation">)</span>
    <span class="token keyword">return</span> obj
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对象级权限的局限性<br> 出于性能的原因，当返回一个对象列表时，通用视图不会自动将对象级权限应用到queryset中的每个实例。<br> 通常，当您使用对象级权限时，您还需要适当地过滤queryset，以确保用户只对允许查看的实例具有可见性。</p><h3 id="_3-设置权限" tabindex="-1"><a class="header-anchor" href="#_3-设置权限" aria-hidden="true">#</a> 3 设置权限</h3><p>默认的全局设置为：DEFAULT_PERMISSION_CLASSES</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_PERMISSION_CLASSES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
        <span class="token string">&#39;rest_framework.permissions.IsAuthenticated&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有指定，设置为任何人均可以为访问</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token string">&#39;DEFAULT_PERMISSION_CLASSES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
   <span class="token string">&#39;rest_framework.permissions.AllowAny&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以在视图函数或者视图类中设置权限类</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>permissions <span class="token keyword">import</span> IsAuthenticated
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>response <span class="token keyword">import</span> Response
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>views <span class="token keyword">import</span> APIView

<span class="token keyword">class</span> <span class="token class-name">ExampleView</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>
    permission_classes <span class="token operator">=</span> <span class="token punctuation">(</span>IsAuthenticated<span class="token punctuation">,</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        content <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;request was permitted&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>content<span class="token punctuation">)</span>

<span class="token comment"># 视图函数</span>
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>decorators <span class="token keyword">import</span> api_view<span class="token punctuation">,</span> permission_classes
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>permissions <span class="token keyword">import</span> IsAuthenticated
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>response <span class="token keyword">import</span> Response

<span class="token decorator annotation punctuation">@api_view</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@permission_classes</span><span class="token punctuation">(</span><span class="token punctuation">(</span>IsAuthenticated<span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">example_view</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    content <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;request was permitted&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Response<span class="token punctuation">(</span>content<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-接口指南" tabindex="-1"><a class="header-anchor" href="#_2-接口指南" aria-hidden="true">#</a> 2. 接口指南</h2><p>AllowAny:允许任何人访问，和权限设置为空一样<br> IsAuthenticated：允许认证成功<br> IsAdminUser：只允许（user.is_staff=True）的用户访问<br> IsAuthenticatedOrReadOnly：认证用户全部权限，未认证用户只读<br> DjangoModelPermissions<br> 关系到 django.contrib.auth model permissions. 这个权限只能应用在拥有queryset属性的视图中。<br> 只有对用户进行了身份验证，并分配了相关的模型权限，才会授予授权。</p><ul><li>POST要求用户有add权限</li><li>PUT和PATCH要求用户有change权限</li><li>DELETE要求用户有delete权限<br> 支持自定义模型权限，默认行为可以被重写，例如可以为GET请求设置权限。<br> 自定义模型权限（DjangoModelPermissions）时，需要重写然后设置.perms_map属性<br> 在没有设置queryset属性的视图中使用模型权限<br> 如果您使用的是重写了get_queryset()方法的视图，那么视图中可能没有.queryset属性.建议也写上一个queryset对视图进行标记，这样该类就可以确定所需的权限。例如:</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>queryset <span class="token operator">=</span> User<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>none<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>DjangoModelPermissionsOrAnonReadOnly ：未认证用户具有只读权限<br> DjangoObjectPermissions：对象级权限<br> 关系到django的 object permissions framework，其允许模型中的每个对象具有权限。为了使用此类，你还需要一个支持对象级权限的额权限许可后端，比如django-guardian。具体使用和 DjangoModelPermissions 类似。视图必须具有queryset属性或者get_queryset()方法。<br> 如果想支持GET, HEAD和OPTIONS请求，需要添加DjangoObjectPermissionsFilter类来确保返回结果中包含的对象是用户有权操作的。</p><h2 id="_3-自定义权限" tabindex="-1"><a class="header-anchor" href="#_3-自定义权限" aria-hidden="true">#</a> 3. 自定义权限</h2><p>首先继承BasePermission，然后重写.has_permission(self, request, view)和.has_object_permission(self, request, view, obj)两种方法中至少一个。如果对象有权限就返回True,否则False.<br> 如果你需要判断一个请求是读操作还是写操作，你应该检查该方法是否在SAFE_METHODS元组中，该元组包含（’GET’, ‘OPTIONS’, ‘HEAD’）</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token keyword">in</span> permissions<span class="token punctuation">.</span>SAFE_METHODS<span class="token punctuation">:</span>
    <span class="token comment"># Check permissions for read-only request</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token comment"># Check permissions for write request</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：对象级的has_object_permission方法只有在视图级的has_permission检查通过之后才会进行调用。为了使对象级权限检查运行，还需要调用.check_object_permissions(request, obj)方法。如果你使用generic views的话就会默认帮你处理。<br> 自定义权限类如果检查失败，会抛出PermissionDenied异常。可以自定义message属性，用来表示详情。否则的话，默认使用default_detail属性。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> permissions

<span class="token keyword">class</span> <span class="token class-name">CustomerAccessPermission</span><span class="token punctuation">(</span>permissions<span class="token punctuation">.</span>BasePermission<span class="token punctuation">)</span><span class="token punctuation">:</span>
    message <span class="token operator">=</span> <span class="token string">&#39;Adding customers not allowed.&#39;</span>

    <span class="token keyword">def</span> <span class="token function">has_permission</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">:</span>
         <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用实例，检查用户IP是否在黑名单中</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> permissions

<span class="token keyword">class</span> <span class="token class-name">BlacklistPermission</span><span class="token punctuation">(</span>permissions<span class="token punctuation">.</span>BasePermission<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    Global permission check for blacklisted IPs.
    &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">has_permission</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">:</span>
        ip_addr <span class="token operator">=</span> request<span class="token punctuation">.</span>META<span class="token punctuation">[</span><span class="token string">&#39;REMOTE_ADDR&#39;</span><span class="token punctuation">]</span>
        blacklisted <span class="token operator">=</span> Blacklist<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>ip_addr<span class="token operator">=</span>ip_addr<span class="token punctuation">)</span><span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">not</span> blacklisted
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对象级权限</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">IsOwnerOrReadOnly</span><span class="token punctuation">(</span>permissions<span class="token punctuation">.</span>BasePermission<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    Object-level permission to only allow owners of an object to edit it.
    Assumes the model instance has an \`owner\` attribute.
    &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">has_object_permission</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> view<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Read permissions are allowed to any request,</span>
        <span class="token comment"># so we&#39;ll always allow GET, HEAD or OPTIONS requests.</span>
        <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token keyword">in</span> permissions<span class="token punctuation">.</span>SAFE_METHODS<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>

        <span class="token comment"># Instance must have an attribute named \`owner\`.</span>
        <span class="token keyword">return</span> obj<span class="token punctuation">.</span>owner <span class="token operator">==</span> request<span class="token punctuation">.</span>user
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-三方包" tabindex="-1"><a class="header-anchor" href="#_4-三方包" aria-hidden="true">#</a> 4 三方包</h2><ol><li>Composed Permissions：提供复杂而且具有多层的对象权限管理</li><li>REST Condition：使用逻辑判断结合权限认证</li><li>DRY Rest Permissions：DRY Rest权限包提供默认和自定义操作定义不同权限的能力。这个包是为具有权限的应用（app）设计的，这些应用程序是根据应用程序的model中定义的关系而生成的。它还支持通过API的序列化器返回到客户端应用程序的权限检查。此外，它还支持向默认值和自定义列表操作添加权限，以限制每个用户检索的数据。</li><li>Django Rest Framework Roles：为API接口配置多种类型的user</li><li>Django Rest Framework API Key：允许您确保向服务器发出的每个请求都需要一个API密钥头。您可以从django管理界面生成一个。</li></ol>`,34),u=n("br",null,null,-1),d=n("br",null,null,-1),k={href:"https://blog.csdn.net/runnoob_1115/article/details/78497716",target:"_blank",rel:"noopener noreferrer"};function m(v,b){const a=t("ExternalLinkIcon");return o(),i("div",null,[r,n("p",null,[s("————————————————"),u,s(" 版权声明：本文为CSDN博主「敲代码的伪文青」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。"),d,s(" 原文链接："),n("a",k,[s("https://blog.csdn.net/runnoob_1115/article/details/78497716"),p(a)])])])}const y=e(l,[["render",m],["__file","Django-restframework22-Permissions.html.vue"]]);export{y as default};
