import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,a as n,b as s,d as t,f as e}from"./app-cfbf85c1.js";const c={},r=e(`<h1 id="drf23-throttling" tabindex="-1"><a class="header-anchor" href="#drf23-throttling" aria-hidden="true">#</a> DRF23-Throttling</h1><blockquote><p>HTTP/1.1 420让你更冷静</p></blockquote><h2 id="_1-throttling-twitter-api-rate-limiting-response" tabindex="-1"><a class="header-anchor" href="#_1-throttling-twitter-api-rate-limiting-response" aria-hidden="true">#</a> 1 Throttling（Twitter API rate limiting response）</h2><h3 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h3><p>节流（Throttling）类似于权限，因为它决定了是否应该对请求进行授权。节流表示一个临时状态，并用于控制客户端对API的请求率。<br> 与许可一样，可以使用多个节流。对于未经身份验证的请求，您的API可能会有一个限制节流阀，而对于经过身份验证的请求，则会有一个更小的节流阀。<br> 另一个可能需要使用多个节流的场景是，如果您需要对API的不同部分施加不同的约束，因为某些服务特别占用资源。<br> 如果您想要同时强制实施节流率和持续的节流率，那么多节流也可以使用。例如，您可能希望将用户限制为每分钟60次请求，每天1000次请求。<br> 节流不一定只涉及到速率限制的请求。例如，存储服务可能还需要对带宽进行节流，而付费数据服务可能希望对访问的某些记录进行节流。</p><h3 id="_2-如何设置节流类" tabindex="-1"><a class="header-anchor" href="#_2-如何设置节流类" aria-hidden="true">#</a> 2. 如何设置节流类</h3><p>和permissions，authentication一样，throttling也被定义成类的列表<br> 在运行每一个主体部分之前，将会检查每一个 throttle。如果检查失败，抛出exceptions.Throttled，主体部分不在运行。</p><h3 id="_3-设置节流策略" tabindex="-1"><a class="header-anchor" href="#_3-设置节流策略" aria-hidden="true">#</a> 3. 设置节流策略</h3><p>全局默认值使用DEFAULT_THROTTLE_CLASSES和DEFAULT_THROTTLE_RATES设置</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_THROTTLE_CLASSES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
        <span class="token string">&#39;rest_framework.throttling.AnonRateThrottle&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;rest_framework.throttling.UserRateThrottle&#39;</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;DEFAULT_THROTTLE_RATES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;anon&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;100/day&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;user&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1000/day&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于速率的描述包括second, minute, hour或者day，也可以在使用APIView的视图中设置基于类的节流</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>response <span class="token keyword">import</span> Response
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>throttling <span class="token keyword">import</span> UserRateThrottle
<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>views <span class="token keyword">import</span> APIView

<span class="token keyword">class</span> <span class="token class-name">ExampleView</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>
    throttle_classes <span class="token operator">=</span> <span class="token punctuation">(</span>UserRateThrottle<span class="token punctuation">,</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        content <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;request was permitted&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>content<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@api_view</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@throttle_classes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>UserRateThrottle<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">example_view</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    content <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;request was permitted&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Response<span class="token punctuation">(</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-怎样识别客户" tabindex="-1"><a class="header-anchor" href="#_4-怎样识别客户" aria-hidden="true">#</a> 4. 怎样识别客户</h3>`,13),u=n("br",null,null,-1),d={href:"https://imququ.com/post/x-forwarded-for-header-in-http.html",target:"_blank",rel:"noopener noreferrer"},k=n("br",null,null,-1),v=n("br",null,null,-1),m=n("br",null,null,-1),h=e(`<h3 id="_5-设置缓存-cache" tabindex="-1"><a class="header-anchor" href="#_5-设置缓存-cache" aria-hidden="true">#</a> 5. 设置缓存（cache）</h3><p>throttle_classes由django的 cache后端提供。必须设置合适的cache。默认值为LocMemCache。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 修改默认值</span>
<span class="token keyword">class</span> <span class="token class-name">CustomAnonRateThrottle</span><span class="token punctuation">(</span>AnonRateThrottle<span class="token punctuation">)</span><span class="token punctuation">:</span>
    cache <span class="token operator">=</span> get_cache<span class="token punctuation">(</span><span class="token string">&#39;alternate&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置全局默认值（’DEFAULT_THROTTLE_CLASSES’），或者在throttle_classes中的属性设置。</p><h2 id="_2-接口使用指南" tabindex="-1"><a class="header-anchor" href="#_2-接口使用指南" aria-hidden="true">#</a> 2 接口使用指南</h2><ol><li>AnonRateThrottle</li></ol><p>设置匿名用户的访问频率，AnonRateThrottle类中有一个rate属性，可以通过设置中的DEFAULT_THROTTLE_RATES[‘anon’]设置。</p><ol start="2"><li>UserRateThrottle</li></ol><p>认证用户访问频率，通过DEFAULT_THROTTLE_RATES[‘user’]设置，一个接口可以有多个UserRateThrottles，此时就需要继承重写UserRateThrottle的scope属性。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">BurstRateThrottle</span><span class="token punctuation">(</span>UserRateThrottle<span class="token punctuation">)</span><span class="token punctuation">:</span>
    scope <span class="token operator">=</span> <span class="token string">&#39;burst&#39;</span>

<span class="token keyword">class</span> <span class="token class-name">SustainedRateThrottle</span><span class="token punctuation">(</span>UserRateThrottle<span class="token punctuation">)</span><span class="token punctuation">:</span>
    scope <span class="token operator">=</span> <span class="token string">&#39;sustained&#39;</span>

REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_THROTTLE_CLASSES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
        <span class="token string">&#39;example.throttles.BurstRateThrottle&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;example.throttles.SustainedRateThrottle&#39;</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;DEFAULT_THROTTLE_RATES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;burst&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;60/min&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;sustained&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1000/day&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>ScopedRateThrottle<br> 可以用来约束API不同的部分。仅仅用在包含.throttle_scope属性的视图中，通过将用户的ID或者IP与唯一的‘scope’属性链接起来。</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># views中</span>
<span class="token keyword">class</span> <span class="token class-name">ContactListView</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>
    throttle_scope <span class="token operator">=</span> <span class="token string">&#39;contacts&#39;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token keyword">class</span> <span class="token class-name">ContactDetailView</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>
    throttle_scope <span class="token operator">=</span> <span class="token string">&#39;contacts&#39;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token keyword">class</span> <span class="token class-name">UploadView</span><span class="token punctuation">(</span>APIView<span class="token punctuation">)</span><span class="token punctuation">:</span>
    throttle_scope <span class="token operator">=</span> <span class="token string">&#39;uploads&#39;</span>

<span class="token comment"># 设置文件中</span>
REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_THROTTLE_CLASSES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
        <span class="token string">&#39;rest_framework.throttling.ScopedRateThrottle&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;DEFAULT_THROTTLE_RATES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;contacts&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1000/day&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;uploads&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;20/day&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-自定义节流阀" tabindex="-1"><a class="header-anchor" href="#_3-自定义节流阀" aria-hidden="true">#</a> 3 自定义节流阀</h2><ul><li>继承重写BaseThrottle</li><li>实现.allow_request(self, request, view)方法，如果请求允许返回True</li><li>可选：.wait()方法，返回下一次请求需要等待的时间（seconds）或者None.wait()只有在.allow_request()预先返回了False，才会被调用。如果设置了.wait()方法，Retry-After将会被包含在响应头中。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> random

<span class="token keyword">class</span> <span class="token class-name">RandomRateThrottle</span><span class="token punctuation">(</span>throttling<span class="token punctuation">.</span>BaseThrottle<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">allow_request</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),b=n("br",null,null,-1),_=n("br",null,null,-1),T={href:"https://blog.csdn.net/runnoob_1115/article/details/78497732",target:"_blank",rel:"noopener noreferrer"};function g(w,R){const a=o("ExternalLinkIcon");return i(),l("div",null,[r,n("p",null,[s("使用X-Forwarded-For和Remote-Addr（X-Forwarded-For：请求端真实IP）"),u,n("a",d,[s("https://imququ.com/post/x-forwarded-for-header-in-http.html"),t(a)]),k,s(" X-Forwarded-For: client, proxy1, proxy2 (用户真实地址，代理1，代理2)(三级代理，代理3直接连接服务器，所以不显示在XXF中， Remote-Addr=代理3,除了直连IP没有一个可以信任）"),v,s(" HTTP请求头，作为用户的唯一性认证。优先使用X-Forwarded-For，没有再使用Remote-Addr。"),m,s(" 如果您需要严格地识别唯一的客户端IP地址，那么您需要首先配置这个API所支持的应用程序代理的数量（NUM_PROXIES设置）。如果将其设置为非0整数。一旦任何用户代理被移除，用户的真实地址就是X-Forwarded-For中的最后一个IP.如果设置为0。将会一直使用Remote-Addr请求头最为唯一性验证信息。")]),h,n("p",null,[s("————————————————"),b,s(" 版权声明：本文为CSDN博主「敲代码的伪文青」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。"),_,s(" 原文链接："),n("a",T,[s("https://blog.csdn.net/runnoob_1115/article/details/78497732"),t(a)])])])}const A=p(c,[["render",g],["__file","Django-restframework23-Throttling.html.vue"]]);export{A as default};
