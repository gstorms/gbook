import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c as p,a as n,b as s,d as i,f as l}from"./app-3f278ba4.js";const r={},c=n("h1",{id:"drf30-format-suffixes-后缀格式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#drf30-format-suffixes-后缀格式","aria-hidden":"true"},"#"),s(" DRF30-Format-suffixes（后缀格式）")],-1),u=n("h2",{id:"一、format-suffixes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、format-suffixes","aria-hidden":"true"},"#"),s(" 一、Format suffixes")],-1),d={href:"http://example.com/api/users.json%E7%9A%84JSON",target:"_blank",rel:"noopener noreferrer"},m=n("br",null,null,-1),k=l(`<ol><li>format_suffix_patterns</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 将所有urlpatterns,都加上一个后缀</span>
Signature<span class="token punctuation">:</span> format_suffix_patterns<span class="token punctuation">(</span>urlpatterns<span class="token punctuation">,</span> suffix_required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> allowed<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>urlpatterns： 设置的urlpatterns列表</li><li>suffix_required：可选，表示url中的后缀应该是可选的还是必需的，默认为False。</li><li>allowed:可选，可选的后缀元组或者列表</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>urlpatterns <span class="token keyword">import</span> format_suffix_patterns
<span class="token keyword">from</span> blog <span class="token keyword">import</span> views

urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^/$&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>apt_root<span class="token punctuation">)</span><span class="token punctuation">,</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^comments/$&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>comment_list<span class="token punctuation">)</span><span class="token punctuation">,</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^comments/(?P&lt;pk&gt;[0-9]+)/$&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>comment_detail<span class="token punctuation">)</span>
<span class="token punctuation">]</span>

urlpatterns <span class="token operator">=</span> format_suffix_patterns<span class="token punctuation">(</span>urlpatterns<span class="token punctuation">,</span> allowed<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;html&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>使用i18n_patterns<br> 确保i18n_patterns是在最后使用的</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>url patterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    …
<span class="token punctuation">]</span>

urlpatterns <span class="token operator">=</span> i18n_patterns<span class="token punctuation">(</span>
    format_suffix_patterns<span class="token punctuation">(</span>urlpatterns<span class="token punctuation">,</span> allowed<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;html&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、查询参数格式" tabindex="-1"><a class="header-anchor" href="#二、查询参数格式" aria-hidden="true">#</a> 二、查询参数格式</h2><p>格式后缀的另一种选择是在查询参数中包含所请求的格式。REST框架在默认情况下提供了这个选项，并且在可浏览的API中使用它在不同的可用表示之间切换</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>http<span class="token punctuation">:</span><span class="token operator">//</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>organizations<span class="token operator">/</span>?<span class="token builtin">format</span><span class="token operator">=</span>csv<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>format可以通过URL_FORMAT_OVERRIDE修改，设置为None就会禁用此功能。</p><h2 id="三、请求头和格式后缀" tabindex="-1"><a class="header-anchor" href="#三、请求头和格式后缀" aria-hidden="true">#</a> 三、请求头和格式后缀</h2><p>在一些Web社区中，似乎有一种观点认为.format suffixes不是一种RESTful模式，而HTTP Accept标头应该总是被使用。</p>`,12);function f(v,_){const a=t("ExternalLinkIcon");return o(),p("div",null,[c,u,n("p",null,[s("Web api的一种常见模式是在url上使用文件名扩展，以为给定的媒体类型提供端点。例如,"),n("a",d,[s("http://example.com/api/users.json的JSON"),i(a)]),m,s(" 为您的API在URLconf的每个单独条目中添加格式-后缀模式是容易出错和不干的，因此REST框架提供了将这些模式添加到您的URLconf中的快捷方式。")]),k])}const x=e(r,[["render",f],["__file","Django-restframework30-Format-suffixes（后缀格式）.html.vue"]]);export{x as default};
