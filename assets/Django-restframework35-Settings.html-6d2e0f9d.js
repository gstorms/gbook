import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as i,c as l,a,b as n,d as o,f as p}from"./app-731a6e06.js";const r={},c=p(`<h1 id="drf35-settings" tabindex="-1"><a class="header-anchor" href="#drf35-settings" aria-hidden="true">#</a> DRF35-Settings</h1><p>名称空间是一个伟大的想法——让我们做更多！</p><h2 id="一、settings" tabindex="-1"><a class="header-anchor" href="#一、settings" aria-hidden="true">#</a> 一、Settings</h2><p>REST框架的配置在一个名为REST_FRAMEWORK的Django设置中。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_RENDERER_CLASSES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
        <span class="token string">&#39;rest_framework.renderers.JSONRenderer&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;DEFAULT_PARSER_CLASSES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
        <span class="token string">&#39;rest_framework.parsers.JSONParser&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>可接受的设置<br> 查看api_settings对象。</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>settings <span class="token keyword">import</span> api_settings

<span class="token keyword">print</span> api_settings<span class="token punctuation">.</span>DEFAULT_AUTHENTICATION_CLASSES
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、接口指南" tabindex="-1"><a class="header-anchor" href="#二、接口指南" aria-hidden="true">#</a> 二、接口指南</h2><h3 id="_1-api策略设置" tabindex="-1"><a class="header-anchor" href="#_1-api策略设置" aria-hidden="true">#</a> 1. API策略设置</h3><p>接下来的设置控制基本的API策略，被应用到每一个基于APIView或者 @api_view的视图中</p><ol><li>DEFAULT_RENDERER_CLASSES（Response）</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 默认</span>
<span class="token punctuation">(</span>
    <span class="token string">&#39;rest_framework.renderers.JSONRenderer&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;rest_framework.renderers.BrowsableAPIRenderer&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>DEFAULT_PARSER_CLASSES（request.data）</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 默认</span>
<span class="token punctuation">(</span>
    <span class="token string">&#39;rest_framework.parsers.JSONParser&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;rest_framework.parsers.FormParser&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;rest_framework.parsers.MultiPartParser&#39;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>DEFAULT_AUTHENTICATION_CLASSES(request.user或request.auth)</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 默认</span>
<span class="token punctuation">(</span>
    <span class="token string">&#39;rest_framework.authentication.SessionAuthentication&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;rest_framework.authentication.BasicAuthentication&#39;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>DEFAULT_PERMISSION_CLASSES<br> 权限类的列表或元组，它决定了在视图开始时检查的默认权限集。必须由列表中的每个类授予权限。</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 默认</span>
<span class="token punctuation">(</span>
    <span class="token string">&#39;rest_framework.permissions.AllowAny&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>DEFAULT_THROTTLE_CLASSES<br> 一个节流类的列表或元组，它决定了在视图开始时检查的默认的节流装置。</li><li>DEFAULT_CONTENT_NEGOTIATION_CLASS<br> 一个内容协商类，它决定如何为响应选择一个呈现器，给定一个传入请求。</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 默认</span>
<span class="token string">&#39;rest_framework.negotiation.DefaultContentNegotiation&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-通用视图设置" tabindex="-1"><a class="header-anchor" href="#_2-通用视图设置" aria-hidden="true">#</a> 2. 通用视图设置</h3><p>控制基于类的视图的行为</p><ol><li>DEFAULT_PAGINATION_SERIALIZER_CLASS（已被移除）</li></ol><p>分页API不使用序列化器来确定输出格式，您需要在分页类上重写get_paginated_response方法，以指定输出格式是如何被控制的。</p><ol start="2"><li>DEFAULT_FILTER_BACKENDS</li></ol><p>应该用于通用过滤的过滤后端类的列表。如果设置为None，则禁用通用过滤。</p><ol start="3"><li>PAGE_SIZE</li></ol><p>用于分页的默认页面大小。如果设置为None，默认情况下禁用分页。</p><ol start="4"><li>SEARCH_PARAM</li></ol><p>查询参数的名称，它可以用来指定SearchFilter使用的搜索词。默认为search</p><ol start="5"><li>ORDERING_PARAM</li></ol><p>查询参数的名称，它可以用来指定OrderingFilter返回的结果的顺序。默认为ordering</p><h3 id="_3-版本控制" tabindex="-1"><a class="header-anchor" href="#_3-版本控制" aria-hidden="true">#</a> 3. 版本控制</h3><ol><li>DEFAULT_VERSION</li></ol><p>没有版本控制信息的版本，应该用于请求的值。默认为None.</p><ol start="2"><li>ALLOWED_VERSIONS</li></ol><p>如果设置了，这个值将限制版本控制方案返回的版本集，如果在这个集合中没有提供的版本，将会raise一个错误。</p><ol start="3"><li>VERSION_PARAM</li></ol><p>应该用于任何版本控制参数的字符串，例如媒体类型或URL查询参数。默认为’version’</p><h3 id="_4-认证设置" tabindex="-1"><a class="header-anchor" href="#_4-认证设置" aria-hidden="true">#</a> 4. 认证设置</h3><p>以下设置控制未经身份验证的请求的行为。</p><ol><li>UNAUTHENTICATED_USER</li></ol><p>对于未经认证的请求，用于初始化request.user</p><ol start="2"><li>UNAUTHENTICATED_TOKEN</li></ol><p>对于未认证请求，用于初始化request.auth,默认为None</p><h3 id="_5-测试设置" tabindex="-1"><a class="header-anchor" href="#_5-测试设置" aria-hidden="true">#</a> 5. 测试设置</h3><p>接下来的设置用于控制APIRequestFactory和APIClient的行为</p><ol><li>TEST_REQUEST_DEFAULT_FORMAT</li></ol><p>生成测试请求时使用的默认格式，需要与TEST_REQUEST_RENDERER_CLASSES匹配，默认为’multipart’</p><ol start="2"><li>TEST_REQUEST_RENDERER_CLASSES</li></ol><p>在构建测试请求时提供支持的render类。<br> 当构建一个测试请求时，渲染类中的任何格式都可以使用</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>client<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&#39;/users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;jamie&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认为：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">(</span>
    <span class="token string">&#39;rest_framework.renderers.MultiPartRenderer&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;rest_framework.renderers.JSONRenderer&#39;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-模式生成控制" tabindex="-1"><a class="header-anchor" href="#_5-模式生成控制" aria-hidden="true">#</a> 5. 模式生成控制</h3><ol><li>SCHEMA_COERCE_PATH_PK</li></ol><p>如果设置，这将在生成模式路径参数时将URL conf中的’pk’标识符映射到实际的字段名。通常这是“id”。由于“primary key”是一个实现细节，而“标识符”是一个更通用的概念，        因此它提供了更合适的表示形式。</p><ol start="2"><li>SCHEMA_COERCE_METHOD_NAMES</li></ol><p>如果设置，被用来在生成模式时，将内部viwset方法名映射到外部操作名，这允许我们创建一个比内部使用的代码名更合适的外部呈现名字。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 默认</span>
<span class="token punctuation">{</span><span class="token string">&#39;retrieve&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;read&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;destroy&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;delete&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-内容协议控制" tabindex="-1"><a class="header-anchor" href="#_6-内容协议控制" aria-hidden="true">#</a> 6. 内容协议控制</h3><ol><li>URL_FORMAT_OVERRIDE<br> url中通过使用format=…，用于重写请求头中Accept的参数名字，设置为None将禁用此查询参数，默认为‘format’</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>http<span class="token punctuation">:</span><span class="token operator">//</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>organizations<span class="token operator">/</span>?<span class="token builtin">format</span><span class="token operator">=</span>csv
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>FORMAT_SUFFIX_KWARG<br> url路劲的后缀参数名字， 默认为‘’format’’，当使用format_suffix_patterns给 URL patterns添加后缀时使用。</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>http<span class="token punctuation">:</span><span class="token operator">//</span>example<span class="token punctuation">.</span>com<span class="token operator">/</span>organizations<span class="token punctuation">.</span>csv<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_7-日期时间格式" tabindex="-1"><a class="header-anchor" href="#_7-日期时间格式" aria-hidden="true">#</a> 7. 日期时间格式</h3><p>用于确定日期和时间解析和渲染格式</p><ol><li>DATETIME_FORMAT</li></ol><p>一个默认字符串用于渲染DateTimeField序列化字段的输出。如果设置为None,DateTimeField序列化字段将会返回python的datetime对象，datetime对象的编码方式的由渲染        器决定<br> 可能是None, ‘iso-8601’或者一个python的格式化时间字符串，默认为’iso-8601’</p><ol start="2"><li>DATETIME_INPUT_FORMATS</li></ol><p>格式字符串的列表，用于默认解析DateTimeField序列化字段，可能包括’iso-8601’或者python的时间格式化字符串，默认为[‘iso-8601’]</p><ol start="3"><li>DATE_FORMAT</li></ol><p>渲染DateField字段的默认字符串格式，如果设置为None，将返回python的date对象，编码方式由渲染器决定，可能是None, ‘iso-8601’或者python的时间格式化字符串，默        认为’iso-8601’</p><ol start="4"><li>DATE_INPUT_FORMATS</li></ol><p>格式字符串的列表，用于默认解析DateField序列化字段，可能包括’iso-8601’或者python的时间格式化字符串，默认为[‘iso-8601’]</p><ol start="5"><li>TIME_FORMAT</li></ol><p>默认情况下使用的格式字符串，用于呈现TimeField序列化器字段的输出。如果没有，那么TimeField序列化器字段将返回Python时间对象，并且时间编码将由渲染器决定。<br> 可能是None，‘iso-8601’或者python的时间格式化字符串，默认为[‘iso-8601’]</p><ol start="6"><li>TIME_INPUT_FORMATS</li></ol><p>默认的格式字符串列表，用于将输入解析到TimeField序列化器字段。可能是一个列表，包括字符串’iso-8601’或Python strftime格式字符串。默认为[‘iso-8601’]</p><h3 id="_8-编码" tabindex="-1"><a class="header-anchor" href="#_8-编码" aria-hidden="true">#</a> 8. 编码</h3><p>UNICODE_JSON(RFC 4627)<br> 当设置为True时，JSON响应将允许包含unicode字符。默认为True.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span><span class="token string">&quot;unicode black star&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;★&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当设置为False时，JSON响应将转化全部非ascii字符</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span><span class="token string">&quot;unicode black star&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;\\u2605&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>COMPACT_JSON<br> 默认为True，当设置为True，JSON响应对象将会返回一个紧凑的响应对象，在’:’ 和 ‘,’后面没有空格</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span><span class="token string">&quot;is_admin&quot;</span><span class="token punctuation">:</span>false<span class="token punctuation">,</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;jane@example&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置为False时，则为</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span><span class="token string">&quot;is_admin&quot;</span><span class="token punctuation">:</span> false<span class="token punctuation">,</span> <span class="token string">&quot;email&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;jane@example&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>COERCE_DECIMAL_TO_STRING<br> 默认为True,在不支持本机小数类型的API表示中返回小数对象时，通常最好将该值作为字符串返回。这避免了二进制浮点实现中出现的精度损失。当设置为True时，序列化器DecimalField将返回字符串而不是十进制对象。当设置为False时，序列化器将返回Decimal对象，默认的JSON编码器将返回为浮点数。</p><h3 id="_9-视图名字和描述" tabindex="-1"><a class="header-anchor" href="#_9-视图名字和描述" aria-hidden="true">#</a> 9. 视图名字和描述</h3><p>用于返回OPTIONS请求，响应对象时使用</p><ol><li>VIEW_NAME_FUNCTION</li></ol><p>一个字符串表示在生成视图名称时应该使用的函数。默认为’rest_framework.views.get_view_name’</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>view_name<span class="token punctuation">(</span>cls<span class="token punctuation">,</span> suffix<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>cls：视图类，通常命名函数在生成描述名时，需要通过访问cls.name检查类名。</p></li><li><p>suffix：viewset中区分单个视图时使用的可选后缀</p><ul><li>VIEW_DESCRIPTION_FUNCTION</li></ul></li></ul><p>一个表示在生成视图描述时应该使用的函数的字符串。<br> 该设置可以更改为支持markup样式，而不是默认的markdown。例如，您可以使用它来支持视图中的rst markup，这是在可浏览的API中输出的。<br> 默认为：’rest_framework.views.get_view_description’</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>view_description<span class="token punctuation">(</span>cls<span class="token punctuation">,</span> html<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>cls: 生成描述时，需要访问cls.doc。</li><li>html： True在使用可浏览API中输出，使用False时， 创建OPTIONS响应时输出</li></ul><h3 id="_10-html中下拉框中选项数量限制" tabindex="-1"><a class="header-anchor" href="#_10-html中下拉框中选项数量限制" aria-hidden="true">#</a> 10. HTML中下拉框中选项数量限制</h3><ol><li>HTML_SELECT_CUTOFF</li></ol><p>最大数量，必须是一个整数，默认为1000。</p><ol start="2"><li>HTML_SELECT_CUTOFF_TEXT</li></ol><p>超过最大数量后的显示文本，默认为”More than {count} items…”</p><h3 id="_11-其他设置" tabindex="-1"><a class="header-anchor" href="#_11-其他设置" aria-hidden="true">#</a> 11. 其他设置</h3><ol><li>EXCEPTION_HANDLER</li></ol><p>一个字符串表示在返回一个给定异常的响应时应该使用的函数。如果函数返回None，则将抛出500错误。<br> 这个设置可以用来更改错误响应对象，例如从{“detail”: “Failure…”}改变为{“errors”: [{“message”: “Failure…”, “code”: “”} …]}.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 也可以是一个函数</span>
exception_handler<span class="token punctuation">(</span>exc<span class="token punctuation">,</span> context<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>默认为’rest_framework.views.exception_handler’</p><ol start="2"><li>NON_FIELD_ERRORS_KEY</li></ol><p>一个字符串表示应该用于序列化错误的关键字，这些错误不涉及到特定的字段，而是一般的错误。<br> 默认为：’non_field_errors’</p><ul><li>URL_FIELD_NAME</li></ul><p>一个字符串表示HyperlinkedModelSerializer生成的URL字段的键，默认为url.</p><ul><li>NUM_PROXIES</li></ul><p>代理的最大数量，默认为None</p>`,114),d=a("br",null,null,-1),u=a("br",null,null,-1),m={href:"https://blog.csdn.net/runnoob_1115/article/details/78510460",target:"_blank",rel:"noopener noreferrer"};function v(h,_){const s=t("ExternalLinkIcon");return i(),l("div",null,[c,a("p",null,[n("————————————————"),d,n(" 版权声明：本文为CSDN博主「敲代码的伪文青」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。"),u,n(" 原文链接："),a("a",m,[n("https://blog.csdn.net/runnoob_1115/article/details/78510460"),o(s)])])])}const b=e(r,[["render",v],["__file","Django-restframework35-Settings.html.vue"]]);export{b as default};
