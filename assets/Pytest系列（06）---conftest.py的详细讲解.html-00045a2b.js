import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c,a as n,b as s,d as e,f as t}from"./app-d0fb0332.js";const l={},r={id:"什么是conftest-py",tabindex:"-1"},u=n("a",{class:"header-anchor",href:"#什么是conftest-py","aria-hidden":"true"},"#",-1),d={href:"http://xn--conftest-ik0mv2bp03o.py",target:"_blank",rel:"noopener noreferrer"},k=t('<p>可以理解成一个专门存放fixture的配置文件</p><h2 id="实际开发场景" tabindex="-1"><a class="header-anchor" href="#实际开发场景" aria-hidden="true">#</a> 实际开发场景</h2><p>多个测试用例文件（test_*.py）的所有用例都需要<strong>用登录功能来作为前置操作</strong>，那就不能把登录功能写到某个用例文件中去了</p><h2 id="如何解决上述场景问题" tabindex="-1"><a class="header-anchor" href="#如何解决上述场景问题" aria-hidden="true">#</a> 如何解决上述场景问题？</h2><p>conftest.py的出现，就是为了解决上述问题，单独管理一些全局的fixture</p><h2 id="conftest-py配置fixture注意事项" tabindex="-1"><a class="header-anchor" href="#conftest-py配置fixture注意事项" aria-hidden="true">#</a> conftest.py配置fixture注意事项</h2>',6),h=n("li",null,"pytest会默认读取conftest.py里面的所有fixture",-1),v={href:"http://conftest.py",target:"_blank",rel:"noopener noreferrer"},b=n("li",null,"conftest.py只对同一个package下的所有测试用例生效",-1),f={href:"http://xn--conftest-c49lv3eovy6jaq94ilceh38ay38clqbk65h.py",target:"_blank",rel:"noopener noreferrer"},m={href:"http://xn--conftest-z09lrna9a19s8w3abjsvs6cjq4cfgvh.py",target:"_blank",rel:"noopener noreferrer"},y={href:"http://conftest.py",target:"_blank",rel:"noopener noreferrer"},_=t(`<p></p><h1 id="实际项目中的小案例" tabindex="-1"><a class="header-anchor" href="#实际项目中的小案例" aria-hidden="true">#</a> 实际项目中的小案例</h1><p>这是一个目录<br><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200408224205809-596157978.png" alt="" loading="lazy"></p><h2 id="_06conftest目录下" tabindex="-1"><a class="header-anchor" href="#_06conftest目录下" aria-hidden="true">#</a> 06conftest目录下</h2><h3 id="conftest-py代码" tabindex="-1"><a class="header-anchor" href="#conftest-py代码" aria-hidden="true">#</a> conftest.py代码</h3><h3 id="最顶层的conftest-一般写全局的fixture-在web-ui自动化中-可能会初始化driver" tabindex="-1"><a class="header-anchor" href="#最顶层的conftest-一般写全局的fixture-在web-ui自动化中-可能会初始化driver" aria-hidden="true">#</a> 最顶层的conftest，一般写全局的fixture，在Web UI自动化中，可能会初始化driver</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python</span>
<span class="token comment"># -*- coding: utf-8 -*-</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;
__title__  =
__Time__   = 2020-04-08 21:22
__Author__ = 小菠萝测试笔记
__Blog__   = https://www.cnblogs.com/poloyy/
&quot;&quot;&quot;</span>
<span class="token keyword">import</span> pytest

<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>fixture</span><span class="token punctuation">(</span>scope<span class="token operator">=</span><span class="token string">&quot;session&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;====登录功能，返回账号，token===&quot;</span><span class="token punctuation">)</span>
    name <span class="token operator">=</span> <span class="token string">&quot;testyy&quot;</span>
    token <span class="token operator">=</span> <span class="token string">&quot;npoi213bn4&quot;</span>
    <span class="token keyword">yield</span> name<span class="token punctuation">,</span> token
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;====退出登录！！！====&quot;</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>fixture</span><span class="token punctuation">(</span>autouse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">get_info</span><span class="token punctuation">(</span>login<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">,</span> token <span class="token operator">=</span> login
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;== 每个用例都调用的外层fixture：打印用户token： </span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string"> ==&quot;</span></span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="test-1-py代码" tabindex="-1"><a class="header-anchor" href="#test-1-py代码" aria-hidden="true">#</a> test_1.py代码</h3><h3 id="同级目录下的第一条测试用例" tabindex="-1"><a class="header-anchor" href="#同级目录下的第一条测试用例" aria-hidden="true">#</a> 同级目录下的第一条测试用例</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">test_get_info</span><span class="token punctuation">(</span>login<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">,</span> token <span class="token operator">=</span> login
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;***基础用例：获取用户个人信息***&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;用户名:</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">, token:</span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="_06-run-py代码" tabindex="-1"><a class="header-anchor" href="#_06-run-py代码" aria-hidden="true">#</a> 06_run.py代码</h3><h3 id="运行06conftest目录下所有测试用例" tabindex="-1"><a class="header-anchor" href="#运行06conftest目录下所有测试用例" aria-hidden="true">#</a> 运行06conftest目录下所有测试用例</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pytest

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    pytest<span class="token punctuation">.</span>main<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;-s&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;../06conftest/&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="test-51job目录下" tabindex="-1"><a class="header-anchor" href="#test-51job目录下" aria-hidden="true">#</a> test_51job目录下</h2><h3 id="conftest-py代码-1" tabindex="-1"><a class="header-anchor" href="#conftest-py代码-1" aria-hidden="true">#</a> conftest.py代码</h3><h3 id="配置一些针对51job这个网站的测试用例独有的fixture-譬如-打开51job网站" tabindex="-1"><a class="header-anchor" href="#配置一些针对51job这个网站的测试用例独有的fixture-譬如-打开51job网站" aria-hidden="true">#</a> 配置一些针对51job这个网站的测试用例独有的fixture，譬如：打开51job网站</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pytest

<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>fixture</span><span class="token punctuation">(</span>scope<span class="token operator">=</span><span class="token string">&quot;module&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">open_51</span><span class="token punctuation">(</span>login<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">,</span> token <span class="token operator">=</span> login
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;###用户 </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string"> 打开51job网站###&quot;</span></span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="test-case1-py代码" tabindex="-1"><a class="header-anchor" href="#test-case1-py代码" aria-hidden="true">#</a> test_case1.py代码</h3><h3 id="某个功能模块下的测试用例" tabindex="-1"><a class="header-anchor" href="#某个功能模块下的测试用例" aria-hidden="true">#</a> 某个功能模块下的测试用例</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">test_case2_01</span><span class="token punctuation">(</span>open_51<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;51job，列出所有职位用例&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">test_case2_02</span><span class="token punctuation">(</span>open_51<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;51job，找出所有python岗位&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="test-toutiao目录下" tabindex="-1"><a class="header-anchor" href="#test-toutiao目录下" aria-hidden="true">#</a> test_toutiao目录下</h2><h3 id="test-case1-py代码-1" tabindex="-1"><a class="header-anchor" href="#test-case1-py代码-1" aria-hidden="true">#</a> test_case1.py代码</h3><p>包没有__init__.py文件也没有conftest.py文件</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">test_no_fixture</span><span class="token punctuation">(</span>login<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;==没有__init__测试用例，我进入头条了==&quot;</span><span class="token punctuation">,</span> login<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="test-weibo目录下" tabindex="-1"><a class="header-anchor" href="#test-weibo目录下" aria-hidden="true">#</a> test_weibo目录下</h2><h3 id="conftest-py代码-2" tabindex="-1"><a class="header-anchor" href="#conftest-py代码-2" aria-hidden="true">#</a> conftest.py代码</h3><h3 id="配置一些针对weibo这个网站的测试用例独有的fixture-譬如-打开weibo网站" tabindex="-1"><a class="header-anchor" href="#配置一些针对weibo这个网站的测试用例独有的fixture-譬如-打开weibo网站" aria-hidden="true">#</a> 配置一些针对weibo这个网站的测试用例独有的fixture，譬如：打开weibo网站</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pytest

<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>fixture</span><span class="token punctuation">(</span>scope<span class="token operator">=</span><span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">open_weibo</span><span class="token punctuation">(</span>login<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">,</span> token <span class="token operator">=</span> login
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;&amp;&amp;&amp; 用户 </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string"> 返回微博首页 &amp;&amp;&amp;&quot;</span></span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="test-case1-py代码-2" tabindex="-1"><a class="header-anchor" href="#test-case1-py代码-2" aria-hidden="true">#</a> test_case1.py代码</h3><h3 id="某个功能模块下的测试用例-1" tabindex="-1"><a class="header-anchor" href="#某个功能模块下的测试用例-1" aria-hidden="true">#</a> 某个功能模块下的测试用例</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">TestWeibo</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">test_case1_01</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> open_weibo<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;查看微博热搜&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">test_case1_02</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> open_weibo<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;查看微博范冰冰&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="运行06-run-py的结果" tabindex="-1"><a class="header-anchor" href="#运行06-run-py的结果" aria-hidden="true">#</a> 运行06_run.py的结果</h2><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200408224906333-993246421.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,41),g={href:"https://www.cnblogs.com/poloyy/p/12663601.html",target:"_blank",rel:"noopener noreferrer"};function x(w,q){const a=p("ExternalLinkIcon");return i(),c("div",null,[n("h2",r,[u,s(),n("a",d,[s("什么是conftest.py"),e(a)])]),k,n("ul",null,[h,n("li",null,[n("a",v,[s("conftest.py"),e(a)]),s(" 文件名称是固定的，不能改动")]),b,n("li",null,[n("a",f,[s("不同目录可以有自己的conftest.py"),e(a)]),s("，"),n("a",m,[s("一个项目中可以有多个conftest.py"),e(a)])]),n("li",null,[s("测试用例文件中不需要手动import "),n("a",y,[s("conftest.py"),e(a)]),s("，pytest会自动查找")])]),_,n("blockquote",null,[n("p",null,[s("转载："),n("a",g,[s("https://www.cnblogs.com/poloyy/p/12663601.html"),e(a)])])])])}const N=o(l,[["render",x],["__file","Pytest系列（06）---conftest.py的详细讲解.html.vue"]]);export{N as default};
