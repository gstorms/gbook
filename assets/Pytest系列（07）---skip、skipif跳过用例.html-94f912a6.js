import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as e,c as o,a as n,b as s,d as i,f as c}from"./app-d0fb0332.js";const l={},r=c(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><ul><li>pytest.mark.skip  可以标记无法在某些平台上运行的测试功能，戒者您希望失败的测试功能</li><li>希望满足某些条件才执行某些测试用例，否则pytest会跳过运行该测试用例</li><li>实际常见场景：跳过非Windows平台上的仅Windows测试，或者跳过依赖于当前不可用的外部资源（例如数据库）的测试</li></ul><p></p><h2 id="pytest-mark-skip" tabindex="-1"><a class="header-anchor" href="#pytest-mark-skip" aria-hidden="true">#</a> @pytest.mark.skip</h2><p>跳过执行测试用例，有可选参数reason：跳过的原因，会在执行结果中打印</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python</span>
<span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
__title__  = 
__Time__   = 2020/4/9 13:49
__Author__ = 小菠萝测试笔记
__Blog__   = https://www.cnblogs.com/poloyy/
&quot;&quot;&quot;</span>
<span class="token keyword">import</span> pytest


<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>fixture</span><span class="token punctuation">(</span>autouse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;====登录====&quot;</span><span class="token punctuation">)</span>
   

<span class="token keyword">def</span> <span class="token function">test_case01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我是测试用例11111&quot;</span><span class="token punctuation">)</span>
    
    
<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>skip</span><span class="token punctuation">(</span>reason<span class="token operator">=</span><span class="token string">&quot;不执行该用例！！因为没写好！！&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">test_case02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我是测试用例22222&quot;</span><span class="token punctuation">)</span>
    
    
<span class="token keyword">class</span> <span class="token class-name">Test1</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">test_1</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;%% 我是类测试用例1111 %%&quot;</span><span class="token punctuation">)</span>
        
    <span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>skip</span><span class="token punctuation">(</span>reason<span class="token operator">=</span><span class="token string">&quot;不想执行&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">test_2</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;%% 我是类测试用例2222 %%&quot;</span><span class="token punctuation">)</span>
        
        
<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>skip</span><span class="token punctuation">(</span>reason<span class="token operator">=</span><span class="token string">&quot;类也可以跳过不执行&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">TestSkip</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">test_1</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;%% 不会执行 %%&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行结果" tabindex="-1"><a class="header-anchor" href="#执行结果" aria-hidden="true">#</a> 执行结果</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200409140037005-2099522412.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h3><ul><li>@pytest.mark.skip 可以加在函数上，类上，类方法上</li><li>如果加在类上面，类里面的所有测试用例都不会执行</li><li>以上小案例都是针对：整个测试用例方法跳过执行，<strong>如果想在测试用例执行期间跳过不继续往下执行呢？</strong></li></ul><p></p><h2 id="pytest-skip-函数基础使用" tabindex="-1"><a class="header-anchor" href="#pytest-skip-函数基础使用" aria-hidden="true">#</a> pytest.skip()函数基础使用</h2><p>**作用：**在测试用例执行期间强制跳过不再执行剩余内容<br> **类似：**在Python的循环里面，满足某些条件则break 跳出循环</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">test_function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    n <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;这是我第</span><span class="token interpolation"><span class="token punctuation">{</span>n<span class="token punctuation">}</span></span><span class="token string">条用例&quot;</span></span><span class="token punctuation">)</span>
        n <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span>
            pytest<span class="token punctuation">.</span>skip<span class="token punctuation">(</span><span class="token string">&quot;我跑五次了不跑了&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行结果-1" tabindex="-1"><a class="header-anchor" href="#执行结果-1" aria-hidden="true">#</a> 执行结果</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200409140933987-1689454456.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="pytest-skip-msg-allow-module-level-false" tabindex="-1"><a class="header-anchor" href="#pytest-skip-msg-allow-module-level-false" aria-hidden="true">#</a> pytest.skip(msg=&quot;&quot;,allow_module_level=False)</h2><p>当 allow_module_level=True 时，可以设置在模块级别跳过整个模块</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python</span>
<span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
__title__  = 
__Time__   = 2020/4/9 13:49
__Author__ = 小菠萝测试笔记
__Blog__   = https://www.cnblogs.com/poloyy/
&quot;&quot;&quot;</span>
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> pytest
<span class="token keyword">if</span> sys<span class="token punctuation">.</span>platform<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;win&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    pytest<span class="token punctuation">.</span>skip<span class="token punctuation">(</span><span class="token string">&quot;skipping windows-only tests&quot;</span><span class="token punctuation">,</span> allow_module_level<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>fixture</span><span class="token punctuation">(</span>autouse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;====登录====&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">test_case01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我是测试用例11111&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行结果-2" tabindex="-1"><a class="header-anchor" href="#执行结果-2" aria-hidden="true">#</a> 执行结果</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>collecting <span class="token punctuation">..</span>. 
Skipped: skipping windows-only tests
collected <span class="token number">0</span> items / <span class="token number">1</span> skipped
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> <span class="token number">1</span> skipped <span class="token keyword">in</span> <span class="token number">0</span>.15s <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="pytest-mark-skipif-condition-reason" tabindex="-1"><a class="header-anchor" href="#pytest-mark-skipif-condition-reason" aria-hidden="true">#</a> @pytest.mark.skipif(condition, reason=&quot;&quot;)</h2><p>**作用：**希望有条件地跳过某些测试用例<br> **注意：**condition需要返回True才会跳过</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>skipif</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>platform <span class="token operator">==</span> <span class="token string">&#39;win32&#39;</span><span class="token punctuation">,</span> reason<span class="token operator">=</span><span class="token string">&quot;does not run on windows&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">TestSkipIf</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">test_function</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;不能在window上运行&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行结果-3" tabindex="-1"><a class="header-anchor" href="#执行结果-3" aria-hidden="true">#</a> 执行结果</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>collecting <span class="token punctuation">..</span>. collected <span class="token number">1</span> item
07skip_sipif.py::TestSkipIf::test_function SKIPPED                       <span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span>
Skipped: does not run on windows
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> <span class="token number">1</span> skipped <span class="token keyword">in</span> <span class="token number">0</span>.04s <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="跳过标记" tabindex="-1"><a class="header-anchor" href="#跳过标记" aria-hidden="true">#</a> 跳过标记</h2><ul><li>可以将 pytest.mark.skip 和 pytest.mark.skipif 赋值给一个标记变量</li><li>在不同模块之间共享这个标记变量</li><li>若有多个模块的测试用例需要用到相同的 skip 或 skipif ，可以用一个单独的文件去管理这些通用标记，然后适用于整个测试用例集</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 标记</span>
skipmark <span class="token operator">=</span> pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>skip<span class="token punctuation">(</span>reason<span class="token operator">=</span><span class="token string">&quot;不能在window上运行=====&quot;</span><span class="token punctuation">)</span>
skipifmark <span class="token operator">=</span> pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>skipif<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>platform <span class="token operator">==</span> <span class="token string">&#39;win32&#39;</span><span class="token punctuation">,</span> reason<span class="token operator">=</span><span class="token string">&quot;不能在window上运行啦啦啦=====&quot;</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@skipmark</span>
<span class="token keyword">class</span> <span class="token class-name">TestSkip_Mark</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token decorator annotation punctuation">@skipifmark</span>
    <span class="token keyword">def</span> <span class="token function">test_function</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;测试标记&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">test_def</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;测试标记&quot;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@skipmark</span>
<span class="token keyword">def</span> <span class="token function">test_skip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;测试标记&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行结果-4" tabindex="-1"><a class="header-anchor" href="#执行结果-4" aria-hidden="true">#</a> 执行结果</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>collecting <span class="token punctuation">..</span>. collected <span class="token number">3</span> items
07skip_sipif.py::TestSkip_Mark::test_function SKIPPED                    <span class="token punctuation">[</span> <span class="token number">33</span>%<span class="token punctuation">]</span>
Skipped: 不能在window上运行啦啦啦<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
07skip_sipif.py::TestSkip_Mark::test_def SKIPPED                         <span class="token punctuation">[</span> <span class="token number">66</span>%<span class="token punctuation">]</span>
Skipped: 不能在window上运行<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
07skip_sipif.py::test_skip SKIPPED                                       <span class="token punctuation">[</span><span class="token number">100</span>%<span class="token punctuation">]</span>
Skipped: 不能在window上运行<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> <span class="token number">3</span> skipped <span class="token keyword">in</span> <span class="token number">0</span>.04s <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h2 id="pytest-importorskip-modname-str-minversion-optional-str-none-reason-optional-str-none" tabindex="-1"><a class="header-anchor" href="#pytest-importorskip-modname-str-minversion-optional-str-none-reason-optional-str-none" aria-hidden="true">#</a> pytest.importorskip( modname: str, minversion: Optional[str] = None, reason: Optional[str] = None )</h2><p>**作用：**如果缺少某些导入，则跳过模块中的所有测试<br><strong>参数列表</strong></p><ul><li>modname：模块名</li><li>minversion：版本号</li><li>reasone：跳过原因，默认不给也行</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pexpect <span class="token operator">=</span> pytest<span class="token punctuation">.</span>importorskip<span class="token punctuation">(</span><span class="token string">&quot;pexpect&quot;</span><span class="token punctuation">,</span> minversion<span class="token operator">=</span><span class="token string">&quot;0.3&quot;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@pexpect</span>
<span class="token keyword">def</span> <span class="token function">test_import</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行结果一-如果找不到module" tabindex="-1"><a class="header-anchor" href="#执行结果一-如果找不到module" aria-hidden="true">#</a> 执行结果一：如果找不到module</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Skipped<span class="token punctuation">:</span> could <span class="token keyword">not</span> <span class="token keyword">import</span> <span class="token string">&#39;pexpect&#39;</span><span class="token punctuation">:</span> No module named <span class="token string">&#39;pexpect&#39;</span>
collected <span class="token number">0</span> items <span class="token operator">/</span> <span class="token number">1</span> skipped
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="执行结果一-如果版本对应不上" tabindex="-1"><a class="header-anchor" href="#执行结果一-如果版本对应不上" aria-hidden="true">#</a> 执行结果一：如果版本对应不上</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Skipped<span class="token punctuation">:</span> module <span class="token string">&#39;sys&#39;</span> has __version__ <span class="token boolean">None</span><span class="token punctuation">,</span> required <span class="token keyword">is</span><span class="token punctuation">:</span> <span class="token string">&#39;0.3&#39;</span>
collected <span class="token number">0</span> items <span class="token operator">/</span> <span class="token number">1</span> skipped
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,43),u={href:"https://www.cnblogs.com/poloyy/p/12666682.html",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const a=t("ExternalLinkIcon");return e(),o("div",null,[r,n("blockquote",null,[n("p",null,[s("转载："),n("a",u,[s("https://www.cnblogs.com/poloyy/p/12666682.html"),i(a)])])])])}const h=p(l,[["render",k],["__file","Pytest系列（07）---skip、skipif跳过用例.html.vue"]]);export{h as default};
