import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as i,c as o,a as n,b as a,d as p,f as c}from"./app-207e7d61.js";const l={},r=c(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><ul><li>pytest 可以支持自定义标记，自定义标记可以把一个 web 项目划分多个模块，然后指定模块名称执行</li><li>譬如我可以标明哪些用例是window下执行的，哪些用例是mac下执行的，在运行代码时候指定mark即可</li></ul><p></p><h2 id="上代码" tabindex="-1"><a class="header-anchor" href="#上代码" aria-hidden="true">#</a> 上代码</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python</span>
<span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
__title__  = 
__Time__   = 2020/4/9 19:32
__Author__ = 小菠萝测试笔记
__Blog__   = https://www.cnblogs.com/poloyy/
&quot;&quot;&quot;</span>
<span class="token keyword">import</span> pytest
<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>weibo</span>
<span class="token keyword">def</span> <span class="token function">test_weibo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;测试微博&quot;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>toutiao</span>
<span class="token keyword">def</span> <span class="token function">test_toutiao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;测试头条&quot;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>toutiao</span>
<span class="token keyword">def</span> <span class="token function">test_toutiao1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;再次测试头条&quot;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>xinlang</span>
<span class="token keyword">class</span> <span class="token class-name">TestClass</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">test_method</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;测试新浪&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">testnoMark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;没有标记测试&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="cmd敲运行命令" tabindex="-1"><a class="header-anchor" href="#cmd敲运行命令" aria-hidden="true">#</a> cmd敲运行命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pytest <span class="token parameter variable">-s</span> <span class="token parameter variable">-m</span> weibo 08_mark.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h3 id="执行结果" tabindex="-1"><a class="header-anchor" href="#执行结果" aria-hidden="true">#</a> 执行结果</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200409213339765-380395952.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p></p><h3 id="如何避免warnings" tabindex="-1"><a class="header-anchor" href="#如何避免warnings" aria-hidden="true">#</a> 如何避免warnings</h3><ul><li>创建一个pytest.ini文件**（后续详解）**</li><li>加上自定义mark，如下图</li><li>**注意：**pytest.ini需要和运行的测试用例同一个目录，或在根目录下作用于全局</li></ul><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200409213514482-434242000.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="如果不想标记weibo的用例-我们直接取反即可" tabindex="-1"><a class="header-anchor" href="#如果不想标记weibo的用例-我们直接取反即可" aria-hidden="true">#</a> 如果不想标记weibo的用例，我们直接取反即可</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pytest <span class="token parameter variable">-s</span> <span class="token parameter variable">-m</span> <span class="token string">&quot;not weibo&quot;</span> 08_mark.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200410132234930-1457001816.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="如果想执行多个自定义标记的用例" tabindex="-1"><a class="header-anchor" href="#如果想执行多个自定义标记的用例" aria-hidden="true">#</a> 如果想执行多个自定义标记的用例</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pytest <span class="token parameter variable">-s</span> <span class="token parameter variable">-m</span> <span class="token string">&quot;toutiao or weibo&quot;</span> 08_mark.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200410132231668-571418711.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,21),u={href:"https://www.cnblogs.com/poloyy/p/12669068.html",target:"_blank",rel:"noopener noreferrer"};function d(k,m){const s=t("ExternalLinkIcon");return i(),o("div",null,[r,n("blockquote",null,[n("p",null,[a("转载："),n("a",u,[a("https://www.cnblogs.com/poloyy/p/12669068.html"),p(s)])])])])}const g=e(l,[["render",d],["__file","Pytest系列（08）---使用自定义标记mark.html.vue"]]);export{g as default};
