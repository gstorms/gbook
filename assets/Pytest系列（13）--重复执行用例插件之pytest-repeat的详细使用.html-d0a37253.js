import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as i,a,b as s,d as l,f as o}from"./app-3f278ba4.js";const c={},r=o(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><ul><li>平常在做功能测试的时候，经常会遇到某个模块不稳定，偶然会出现一些bug，对于这种问题我们会针对此用例反复执行多次，最终复现出问题来</li><li>自动化运行用例时候，也会出现偶然的bug，可以针对单个用例，或者针对某个模块的用例重复执行多次</li></ul><h2 id="环境前提" tabindex="-1"><a class="header-anchor" href="#环境前提" aria-hidden="true">#</a> 环境前提</h2><ul><li>Python 2.7、3.4+或PyPy</li><li>py.test 2.8或更高版本</li></ul><p></p><h2 id="安装插件" tabindex="-1"><a class="header-anchor" href="#安装插件" aria-hidden="true">#</a> 安装插件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip3 <span class="token function">install</span> pytest-repeat <span class="token parameter variable">-i</span> http://pypi.douban.com/simple/ --trusted-host pypi.douban.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h2 id="快速入门" tabindex="-1"><a class="header-anchor" href="#快速入门" aria-hidden="true">#</a> 快速入门</h2><p>结合之前讲到的失败重跑、输出html报告插件来敲命令行<br> 两种方式皆可，等号或空格</p><ul><li>count=2</li><li>count 2</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pytest <span class="token parameter variable">--html</span><span class="token operator">=</span>report.html --self-contained-html  <span class="token parameter variable">-s</span> <span class="token parameter variable">--reruns</span><span class="token operator">=</span><span class="token number">5</span> <span class="token parameter variable">--count</span><span class="token operator">=</span><span class="token number">2</span> 10fixture_request.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h2 id="重复测试直到失败-重点" tabindex="-1"><a class="header-anchor" href="#重复测试直到失败-重点" aria-hidden="true">#</a> 重复测试直到失败（重点！）</h2><ul><li>如果需要验证偶现问题，可以一次又一次地运行相同的测试直到失败，这个插件将很有用</li><li>可以将pytest的 -x 选项与pytest-repeat结合使用，以强制测试运行程序在第一次失败时停止</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>py.test <span class="token parameter variable">--count</span><span class="token operator">=</span><span class="token number">1000</span> <span class="token parameter variable">-x</span> test_file.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h3 id="小栗子" tabindex="-1"><a class="header-anchor" href="#小栗子" aria-hidden="true">#</a> 小栗子</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">test_example</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">import</span> random
    flag <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
    <span class="token keyword">assert</span> flag
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="执行命令" tabindex="-1"><a class="header-anchor" href="#执行命令" aria-hidden="true">#</a> 执行命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pytest <span class="token parameter variable">-s</span> <span class="token parameter variable">--count</span> <span class="token number">5</span> <span class="token parameter variable">-x</span> 13repeat.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h3 id="执行结果" tabindex="-1"><a class="header-anchor" href="#执行结果" aria-hidden="true">#</a> 执行结果</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200413135848048-1986596726.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="pytest-mark-repeat-count" tabindex="-1"><a class="header-anchor" href="#pytest-mark-repeat-count" aria-hidden="true">#</a> @pytest.mark.repeat(count)</h2><p>如果要在代码中将某些测试用例标记为执行重复多次，可以使用 @pytest.mark.repeat(count)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>repeat</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">test_repeat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;测试用例执行&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="执行命令-1" tabindex="-1"><a class="header-anchor" href="#执行命令-1" aria-hidden="true">#</a> 执行命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pytest <span class="token parameter variable">-s</span> 13repeat.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p></p><h3 id="执行结果-1" tabindex="-1"><a class="header-anchor" href="#执行结果-1" aria-hidden="true">#</a> 执行结果</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200413142259708-1248397004.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="repeat-scope" tabindex="-1"><a class="header-anchor" href="#repeat-scope" aria-hidden="true">#</a> --repeat-scope</h2><p>命令行参数<br> **作用：**可以覆盖默认的测试用例执行顺序，类似fixture的scope参数</p><ul><li>function：默认，范围针对每个用例重复执行，再执行下一个用例</li><li>class：以class为用例集合单位，重复执行class里面的用例，再执行下一个</li><li>module：以模块为单位，重复执行模块里面的用例，再执行下一个</li><li>session：重复整个测试会话，即所有测试用例的执行一次，然后再执行第二次</li></ul><p></p><h3 id="案例一-class" tabindex="-1"><a class="header-anchor" href="#案例一-class" aria-hidden="true">#</a> 案例一：class</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Test_repeat</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">test_repeat3</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;测试用例执行333&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">Test_repeat2</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">test_repeat3</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;测试用例执行444&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行命令-2" tabindex="-1"><a class="header-anchor" href="#执行命令-2" aria-hidden="true">#</a> 执行命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pytest <span class="token parameter variable">-s</span> <span class="token parameter variable">--count</span><span class="token operator">=</span><span class="token number">2</span> --repeat-scope<span class="token operator">=</span>class 13repeat.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="执行结果-2" tabindex="-1"><a class="header-anchor" href="#执行结果-2" aria-hidden="true">#</a> 执行结果</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200413143418525-1712642726.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="案例二-module" tabindex="-1"><a class="header-anchor" href="#案例二-module" aria-hidden="true">#</a> 案例二：module</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">test_repeat1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;测试用例执行111&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">test_repeat2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;测试用例执行222&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">Test_repeat</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">test_repeat3</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;测试用例执行333&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行命令-3" tabindex="-1"><a class="header-anchor" href="#执行命令-3" aria-hidden="true">#</a> 执行命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pytest <span class="token parameter variable">-s</span> <span class="token parameter variable">--count</span><span class="token operator">=</span><span class="token number">2</span> --repeat-scope<span class="token operator">=</span>module 13repeat.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="执行结果-3" tabindex="-1"><a class="header-anchor" href="#执行结果-3" aria-hidden="true">#</a> 执行结果</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200413143422428-1300950331.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="兼容性问题" tabindex="-1"><a class="header-anchor" href="#兼容性问题" aria-hidden="true">#</a> 兼容性问题</h2><p>pytest-repeat不能与unittest.TestCase测试类一起使用。无论--count设置多少，这些测试始终仅运行一次，并显示警告</p>`,52),d={href:"https://www.cnblogs.com/poloyy/p/12691240.html",target:"_blank",rel:"noopener noreferrer"},u=a("p",null,null,-1);function h(k,m){const n=t("ExternalLinkIcon");return p(),i("div",null,[r,a("blockquote",null,[a("p",null,[s("转载："),a("a",d,[s("https://www.cnblogs.com/poloyy/p/12691240.html"),l(n)])])]),u])}const g=e(c,[["render",h],["__file","Pytest系列（13）--重复执行用例插件之pytest-repeat的详细使用.html.vue"]]);export{g as default};
