import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as p,c as o,a as n,b as s,d as i,f as l}from"./app-d0fb0332.js";const c={},u=l(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>上一篇文章介绍了两种allure的特性</p><ul><li>**@allure.step() 装饰器：**可以设置测试步骤，让测试用例的执行过程更加详细</li><li>**allure.attach() 函数：**可以设置需要显示在allure报告的附件，包含了多种类型，可以通过allure.attachment_type查看支持的类型</li></ul><p>这一篇幅，我们主要来讲解另外两个特性，可以增加报告的可读性哦！</p><ul><li>@allure.description()</li><li>@allure.title()</li></ul><p>它们用法极其相近，只是作用不一样而已</p><h2 id="allure-description" tabindex="-1"><a class="header-anchor" href="#allure-description" aria-hidden="true">#</a> @allure.description()</h2><h3 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> <strong>作用</strong></h3><p>可以添加足够详细的测试用例描述，以便于管理层查看哦哈哈哈</p><h3 id="语法格式-有三种" tabindex="-1"><a class="header-anchor" href="#语法格式-有三种" aria-hidden="true">#</a> 语法格式，有三种</h3><ol><li>@allure.description(str）</li><li>在测试用例函数声明下方添加 &quot;&quot;&quot; &quot;&quot;&quot;</li><li>@allure.description_html(str）：相当于传一个HTML代码组成的字符串，类似 allure.attach() 中传HTML</li></ol><p>**注意：**方式一方式二的效果和作用是一致的， 哪个方便哪个来</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python</span>
<span class="token comment"># -*- coding: utf-8 -*-</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;
__title__  =
__Time__   = 2020-04-18 15:24
__Author__ = 小菠萝测试笔记
__Blog__   = https://www.cnblogs.com/poloyy/
&quot;&quot;&quot;</span>

<span class="token keyword">import</span> allure

<span class="token keyword">import</span> allure

<span class="token comment"># 方式一</span>
<span class="token decorator annotation punctuation">@allure<span class="token punctuation">.</span>description</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
这是一个@allure.description装饰器
没有特别的用处
&quot;&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">test_description_from_decorator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">assert</span> <span class="token number">42</span> <span class="token operator">==</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">*</span> <span class="token number">7</span><span class="token punctuation">)</span>

<span class="token comment"># 方式二</span>
<span class="token keyword">def</span> <span class="token function">test_unicode_in_docstring_description</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    当然，在方法声明的下一行这样子写，也算一种添加description的方式哦
    &quot;&quot;&quot;</span>
    <span class="token keyword">assert</span> <span class="token number">42</span> <span class="token operator">==</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">*</span> <span class="token number">7</span><span class="token punctuation">)</span>

<span class="token comment"># 方式三</span>
<span class="token decorator annotation punctuation">@allure<span class="token punctuation">.</span>description_html</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
&lt;h1&gt;Test with some complicated html description&lt;/h1&gt;
&lt;table style=&quot;width:100%&quot;&gt;
  &lt;tr&gt;
    &lt;th&gt;Firstname&lt;/th&gt;
    &lt;th&gt;Lastname&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr align=&quot;center&quot;&gt;
    &lt;td&gt;William&lt;/td&gt;
    &lt;td&gt;Smith&lt;/td&gt;
&lt;/table&gt;
&quot;&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">test_html_description</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">assert</span> <span class="token boolean">True</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方式一的allure报告<br><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200418154011153-1321880660.png" alt="" loading="lazy"></p><h3 id="方式二的allure报告" tabindex="-1"><a class="header-anchor" href="#方式二的allure报告" aria-hidden="true">#</a> 方式二的allure报告</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200418154044384-2117386341.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="方式三的allure报告" tabindex="-1"><a class="header-anchor" href="#方式三的allure报告" aria-hidden="true">#</a> 方式三的allure报告</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200418154041997-557868599.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="allure-title" tabindex="-1"><a class="header-anchor" href="#allure-title" aria-hidden="true">#</a> @allure.title()</h2><h3 id="作用-1" tabindex="-1"><a class="header-anchor" href="#作用-1" aria-hidden="true">#</a> 作用</h3><ul><li>使得测试用例的标题更具有可读性，毕竟我们可以写成中文</li><li>支持占位符传递关键字参数哦（动态标题，结合 @pytest.mark.parametrize 使用）</li></ul><p></p><h3 id="具体栗子一" tabindex="-1"><a class="header-anchor" href="#具体栗子一" aria-hidden="true">#</a> 具体栗子一</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python</span>
<span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
__title__  =
__Time__   = 2020-04-18 16:09
__Author__ = 小菠萝测试笔记
__Blog__   = https://www.cnblogs.com/poloyy/
&quot;&quot;&quot;</span>
<span class="token keyword">import</span> pytest<span class="token punctuation">,</span> allure
<span class="token decorator annotation punctuation">@allure<span class="token punctuation">.</span>title</span><span class="token punctuation">(</span><span class="token string">&quot;前置操作：登录&quot;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>fixture</span>
<span class="token keyword">def</span> <span class="token function">test_loginss</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    params <span class="token operator">=</span> request<span class="token punctuation">.</span>param
    name <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">]</span>
    pwd <span class="token operator">=</span> params<span class="token punctuation">[</span><span class="token string">&quot;pwd&quot;</span><span class="token punctuation">]</span>
    allure<span class="token punctuation">.</span>attach<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;这是测试用例传的参数</span><span class="token interpolation"><span class="token punctuation">{</span>params<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> pwd<span class="token punctuation">,</span> params<span class="token punctuation">)</span>
    <span class="token keyword">yield</span> name<span class="token punctuation">,</span> pwd
<span class="token decorator annotation punctuation">@allure<span class="token punctuation">.</span>title</span><span class="token punctuation">(</span><span class="token string">&quot;成功登录，测试数据是：{test_loginss}&quot;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>parametrize</span><span class="token punctuation">(</span><span class="token string">&quot;test_loginss&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;name1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pwd&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;pwd1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;name2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pwd&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;pwd2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> indirect<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">test_success_login</span><span class="token punctuation">(</span>test_loginss<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">,</span> pwd <span class="token operator">=</span> test_loginss
    allure<span class="token punctuation">.</span>attach<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;账号</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">,密码</span><span class="token interpolation"><span class="token punctuation">{</span>pwd<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="运行结果-查看allure报告" tabindex="-1"><a class="header-anchor" href="#运行结果-查看allure报告" aria-hidden="true">#</a> 运行结果，查看allure报告</h3><p>这是一次综合多个之前学到的方法来完成的栗子，已经具体标出来啦！<br><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200418163324281-2106601763.png" alt="" loading="lazy"></p><h3 id="具体栗子二" tabindex="-1"><a class="header-anchor" href="#具体栗子二" aria-hidden="true">#</a> 具体栗子二</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@allure<span class="token punctuation">.</span>title</span><span class="token punctuation">(</span><span class="token string">&quot;多个参数{name},{phone},{age}&quot;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@pytest<span class="token punctuation">.</span>mark<span class="token punctuation">.</span>parametrize</span><span class="token punctuation">(</span><span class="token string">&quot;name,phone,age&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">test_test_test</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> phone<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> phone<span class="token punctuation">,</span> age<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="运行结果-查看allure报告-1" tabindex="-1"><a class="header-anchor" href="#运行结果-查看allure报告-1" aria-hidden="true">#</a> 运行结果，查看allure报告</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200418164434431-948219776.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>如果没有添加 @allure.title() 的话，测试用例的标题默认就是函数名，这样的可读性不高，毕竟咱们是中国人，显示中文title还是很有必要的~所以墙裂建议大伙儿加上啦！</p>`,34),r={href:"https://www.cnblogs.com/poloyy/p/12726657.html",target:"_blank",rel:"noopener noreferrer"};function d(k,m){const a=e("ExternalLinkIcon");return p(),o("div",null,[u,n("blockquote",null,[n("p",null,[s("转载："),n("a",r,[s("https://www.cnblogs.com/poloyy/p/12726657.html"),i(a)])])])])}const h=t(c,[["render",d],["__file","Pytest系列（21）--allure的特性，@allure.description()、@allure.title()的详细使用.html.vue"]]);export{h as default};
