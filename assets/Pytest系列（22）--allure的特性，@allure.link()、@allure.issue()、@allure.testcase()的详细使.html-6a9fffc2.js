import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as l,c as p,a as n,b as a,d as o,f as i}from"./app-207e7d61.js";const c={},u=i(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>上一篇文章介绍了两种allure的特性</p><ul><li>@allure.description() ：添加测试用例描述，一共三种方式哦！</li><li>@allure.title()：指定测试用例标题，默认是函数名哦！</li></ul><p>这一篇幅，我们主要来讲解最后三个常见特性，主要是为了将allure报告和测试管理系统集成，可以更快速的跳转到公司内部地址</p><ul><li>@allure.link()</li><li>@allure.issue()</li><li>@allure.testcase()</li></ul><p></p><h2 id="先看看三个装饰器源码" tabindex="-1"><a class="header-anchor" href="#先看看三个装饰器源码" aria-hidden="true">#</a> 先看看三个装饰器源码</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">link</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> link_type<span class="token operator">=</span>LinkType<span class="token punctuation">.</span>LINK<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> safely<span class="token punctuation">(</span>plugin_manager<span class="token punctuation">.</span>hook<span class="token punctuation">.</span>decorate_as_link<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> link_type<span class="token operator">=</span>link_type<span class="token punctuation">,</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">issue</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> link<span class="token punctuation">(</span>url<span class="token punctuation">,</span> link_type<span class="token operator">=</span>LinkType<span class="token punctuation">.</span>ISSUE<span class="token punctuation">,</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">testcase</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> link<span class="token punctuation">(</span>url<span class="token punctuation">,</span> link_type<span class="token operator">=</span>LinkType<span class="token punctuation">.</span>TEST_CASE<span class="token punctuation">,</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h3><ul><li>issue()和testcase()其实调用的也是link()，<strong>只是link_type不一样</strong></li><li>必传参数 url：跳转的链接</li><li>可选参数 name：显示在allure报告的名字，如果不传就是显示完整的链接；<strong>建议传！！不然可读性不高</strong></li><li>可以理解成：三个方法是一样的，我们都提供跳转链接和名字，只是链接的type不一样，最终显示出来的<strong>样式不一样而已【type不一样，样式不一样】</strong></li><li>如果你喜欢，只用@allure.link()也可以</li><li>而出现三个装饰器的原因是为了更好地将<strong>链接分类【访问连接、Bug链接、测试用例链接】</strong></li></ul><p><strong>看完源码和知识点，其实我们就没必要针对三个方法都展开来讲了，直接上代码，看报告的样式区别！</strong></p><h2 id="代码栗子" tabindex="-1"><a class="header-anchor" href="#代码栗子" aria-hidden="true">#</a> <strong>代码栗子</strong></h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python</span>
<span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
__title__  =
__Time__   = 2020-04-18 17:01
__Author__ = 小菠萝测试笔记
__Blog__   = https://www.cnblogs.com/poloyy/
&quot;&quot;&quot;</span>
<span class="token keyword">import</span> allure
TEST_CASE_LINK <span class="token operator">=</span> <span class="token string">&#39;https://github.com/qameta/allure-integrations/issues/8#issuecomment-268313637&#39;</span>
<span class="token decorator annotation punctuation">@allure<span class="token punctuation">.</span>link</span><span class="token punctuation">(</span><span class="token string">&#39;https://www.youtube.com/watch?v=4YYzUTYZRMU&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">test_with_link</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
<span class="token decorator annotation punctuation">@allure<span class="token punctuation">.</span>link</span><span class="token punctuation">(</span><span class="token string">&#39;https://www.youtube.com/watch?v=Su5p2TqZxKU&#39;</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;点击我看一看youtube吧&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">test_with_named_link</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
<span class="token decorator annotation punctuation">@allure<span class="token punctuation">.</span>issue</span><span class="token punctuation">(</span><span class="token string">&#39;140&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bug issue链接&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">test_with_issue_link</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
<span class="token decorator annotation punctuation">@allure<span class="token punctuation">.</span>testcase</span><span class="token punctuation">(</span>TEST_CASE_LINK<span class="token punctuation">,</span> <span class="token string">&#39;测试用例地址&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">test_with_testcase_link</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p></p><h3 id="运行结果-查看allure报告" tabindex="-1"><a class="header-anchor" href="#运行结果-查看allure报告" aria-hidden="true">#</a> 运行结果，查看allure报告</h3><p></p><h3 id="allure-link-不传name参数时的样式" tabindex="-1"><a class="header-anchor" href="#allure-link-不传name参数时的样式" aria-hidden="true">#</a> @allure.link()不传name参数时的样式</h3><p>**不传name的话，如果链接很长，可读性就比较差啦！ **<br><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200418172039534-32664525.png" alt="" loading="lazy"></p><h3 id="allure-link-传了name参数时的样式" tabindex="-1"><a class="header-anchor" href="#allure-link-传了name参数时的样式" aria-hidden="true">#</a> @allure.link()传了name参数时的样式</h3><figure><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200418172043072-1700939340.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="allure-testcase-的样式" tabindex="-1"><a class="header-anchor" href="#allure-testcase-的样式" aria-hidden="true">#</a> @allure.testcase()的样式</h3><p><strong>其实跟link()没有太大区别.....</strong><br><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200418172045421-315980894.png" alt="" loading="lazy"></p><h3 id="allure-issue-的样式" tabindex="-1"><a class="header-anchor" href="#allure-issue-的样式" aria-hidden="true">#</a> @allure.issue()的样式</h3><p><strong>多了个虫子哈哈哈哈</strong><br><img src="https://img2020.cnblogs.com/blog/1896874/202004/1896874-20200418172037397-61372367.png" alt="" loading="lazy"></p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li>为了减少程序的阅读复杂性，其实可以统一用@allure.link()</li><li>传name，写好链接描述，就知道这个链接是干嘛的啦，反正三个装饰器的作用都是一样的，就是样式略微不同.....</li></ul><p></p>`,27),r={href:"https://www.cnblogs.com/poloyy/p/12726946.html",target:"_blank",rel:"noopener noreferrer"};function d(k,h){const s=t("ExternalLinkIcon");return l(),p("div",null,[u,n("blockquote",null,[n("p",null,[a("转载："),n("a",r,[a("https://www.cnblogs.com/poloyy/p/12726946.html"),o(s)])])])])}const g=e(c,[["render",d],["__file","Pytest系列（22）--allure的特性，@allure.link()、@allure.issue()、@allure.testcase()的详细使.html.vue"]]);export{g as default};
