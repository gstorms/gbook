import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as a,c as _,a as e,b as l,d as r,f as s}from"./app-731a6e06.js";const d={},c=s('<h1 id="webelement操作" tabindex="-1"><a class="header-anchor" href="#webelement操作" aria-hidden="true">#</a> WebElement操作</h1><h3 id="一、webelement的属性" tabindex="-1"><a class="header-anchor" href="#一、webelement的属性" aria-hidden="true">#</a> 一、WebElement的属性</h3><ul><li>tag_name --- 元素的tagName属性</li><li>text --- 元素的文本内容</li><li>location_once_scrolled_into_view --- 滚动直到指定的元素在视图中</li><li>size --- 元素的大小</li><li>location --- 元素在画布中的位置</li><li>rect --- 元素的大小和位置</li><li>screenshot_as_base64 --- 元素显示图像的二进制数据的base64编码字符串</li><li>screenshot_as_png --- 元素显示图像的PNG格式二进制数据</li><li>parent --- 元素的父元素对象</li><li>id --- 元素在Selenium中的内部ID，并非在DOM中的id属性。</li></ul><h3 id="二、webelement的属性和状态操作" tabindex="-1"><a class="header-anchor" href="#二、webelement的属性和状态操作" aria-hidden="true">#</a> 二、WebElement的属性和状态操作</h3><ul><li>get_property --- 获得元素指定名称的属性。(property是DOM中的属性，像是JavaScript里的对象，只要是某类型的对象就自动具备这些属性成员。)</li><li>get_attribute --- 获得元素指定名称的特性。(attribute是HTML标签上的特性，它的值只能够是字符串，由用户额外设定的特性名称和特性值。)</li><li>is_selected --- 获得元素的选中状态，特指Select类型的元素，比如checkbox和radio。</li><li>is_enabled --- 获得元素的使能状态</li><li>is_displayed --- 元素是否对用户可见</li><li>value_of_css_property --- 元素的CSS属性中指定名称的属性值</li></ul><h3 id="三、webelement的行为" tabindex="-1"><a class="header-anchor" href="#三、webelement的行为" aria-hidden="true">#</a> 三、WebElement的行为</h3><ul><li>click --- 点击元素</li><li>submit --- 提交表格</li><li>clear --- 清除文本输入</li><li>send_keys --- 模拟键盘向元素输入内容</li><li>screenshot --- 元素的显示图像保持为PNG格式文件</li></ul><h3 id="四、webelement的子元素查找" tabindex="-1"><a class="header-anchor" href="#四、webelement的子元素查找" aria-hidden="true">#</a> 四、WebElement的子元素查找</h3><h4 id="_1-一次查找一个子元素" tabindex="-1"><a class="header-anchor" href="#_1-一次查找一个子元素" aria-hidden="true">#</a> 1.一次查找一个子元素</h4><ul><li>find_element_by_id</li><li>find_element_by_name</li><li>find_element_by_link_text</li><li>find_element_by_partial_link_text</li><li>find_element_by_tag_name</li><li>find_element_by_xpath</li><li>find_element_by_class_name</li><li>find_element_by_css_selector</li></ul><h4 id="_2-一次查找多个子元素" tabindex="-1"><a class="header-anchor" href="#_2-一次查找多个子元素" aria-hidden="true">#</a> 2.一次查找多个子元素</h4><ul><li>find_elements_by_id</li><li>find_elements_by_name</li><li>find_elements_by_link_text</li><li>find_elements_by_partial_link_text</li><li>find_elements_by_tag_name</li><li>find_elements_by_xpath</li><li>find_elements_by_class_name</li><li>find_elements_by_css_selector</li></ul><h4 id="_3-通用查找" tabindex="-1"><a class="header-anchor" href="#_3-通用查找" aria-hidden="true">#</a> 3.通用查找</h4><ul><li>find_element --- 通过指定策略类型和目标值来查找子元素，返回WebElement元素。</li><li>find_elements --- 通过指定策略类型和目标值来查找子元素，返回WebElement元素的列表。</li></ul>',14),o={href:"https://www.cnblogs.com/ringboow/p/11120243.html",target:"_blank",rel:"noopener noreferrer"};function h(m,b){const i=t("ExternalLinkIcon");return a(),_("div",null,[c,e("blockquote",null,[e("p",null,[l("参考"),e("a",o,[l("https://www.cnblogs.com/ringboow/p/11120243.html"),r(i)])])])])}const p=n(d,[["render",h],["__file","WebElement操作.html.vue"]]);export{p as default};
