import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as a,c as s,a as e,b as t,d as c,f as l}from"./app-3f278ba4.js";const r={},o=l('<p>Playwright performs a range of actionability checks on the elements before making actions to ensure these actions<br> behave as expected. It auto-waits for all the relevant checks to pass and only then performs the requested action. If the required checks do not pass within the given <code>timeout</code>, action fails with the <code>TimeoutError</code>.</p><p>For example, for [<code>method: Page.click</code>], Playwright will ensure that:</p><ul><li>element is <a href="#attached" title="Attached">Attached</a> to the DOM</li><li>element is <a href="#visible" title="Visible">Visible</a></li><li>element is <a href="#stable" title="Stable">Stable</a>, as in not animating or completed animation</li><li>element <a href="#receives-events" title="Receives Events">Receives Events</a>, as in not obscured by other elements</li><li>element is <a href="#enabled" title="Enabled">Enabled</a></li></ul><p>Here is the complete list of actionability checks performed for each action:</p><table><thead><tr><th style="text-align:left;">Action</th><th style="text-align:center;"><a href="#attached" title="Attached">Attached</a></th><th style="text-align:center;"><a href="#visible" title="Visible">Visible</a></th><th style="text-align:center;"><a href="#stable" title="Stable">Stable</a></th><th style="text-align:center;"><a href="#receives-events" title="Receives Events">Receives Events</a></th><th style="text-align:center;"><a href="#enabled" title="Enabled">Enabled</a></th><th style="text-align:center;"><a href="#editable" title="Editable">Editable</a></th></tr></thead><tbody><tr><td style="text-align:left;">check</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">click</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">dblclick</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">setChecked</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">tap</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">uncheck</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">hover</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">scrollIntoViewIfNeeded</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">screenshot</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">fill</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:left;">selectText</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">dispatchEvent</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">focus</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">getAttribute</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">innerText</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">innerHTML</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">press</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">setInputFiles</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">selectOption</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">textContent</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:left;">type</td><td style="text-align:center;">Yes</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr></tbody></table><br><h2 id="forcing-actions" tabindex="-1"><a class="header-anchor" href="#forcing-actions" aria-hidden="true">#</a> Forcing actions</h2><p>Some actions like [<code>method: Page.click</code>] support <code>force</code> option that disables non-essential actionability checks,<br> for example passing truthy <code>force</code> to [<code>method: Page.click</code>] method will not check that the target element actually<br> receives click events.</p><h2 id="assertions" tabindex="-1"><a class="header-anchor" href="#assertions" aria-hidden="true">#</a> Assertions</h2><p>You can check the actionability state of the element using one of the following methods as well. This is typically<br> not necessary, but it helps writing assertive tests that ensure that after certain actions, elements reach<br> actionable state:</p><ul><li>[<code>method: ElementHandle.isChecked</code>]</li><li>[<code>method: ElementHandle.isDisabled</code>]</li><li>[<code>method: ElementHandle.isEditable</code>]</li><li>[<code>method: ElementHandle.isEnabled</code>]</li><li>[<code>method: ElementHandle.isHidden</code>]</li><li>[<code>method: ElementHandle.isVisible</code>]</li><li>[<code>method: Page.isChecked</code>]</li><li>[<code>method: Page.isDisabled</code>]</li><li>[<code>method: Page.isEditable</code>]</li><li>[<code>method: Page.isEnabled</code>]</li><li>[<code>method: Page.isHidden</code>]</li><li>[<code>method: Page.isVisible</code>]</li><li>[<code>method: Locator.isChecked</code>]</li><li>[<code>method: Locator.isDisabled</code>]</li><li>[<code>method: Locator.isEditable</code>]</li><li>[<code>method: Locator.isEnabled</code>]</li><li>[<code>method: Locator.isHidden</code>]</li><li>[<code>method: Locator.isVisible</code>]</li></ul><br><h2 id="attached" tabindex="-1"><a class="header-anchor" href="#attached" aria-hidden="true">#</a> Attached</h2>',13),h={href:"https://developer.mozilla.org/en-US/docs/Web/API/Node/isConnected",target:"_blank",rel:"noopener noreferrer"},g=l('<h2 id="visible" tabindex="-1"><a class="header-anchor" href="#visible" aria-hidden="true">#</a> Visible</h2><p>Element is considered visible when it has non-empty bounding box and does not have <code>visibility:hidden</code> computed style. Note that elements of zero size or with <code>display:none</code> are not considered visible.</p><h2 id="stable" tabindex="-1"><a class="header-anchor" href="#stable" aria-hidden="true">#</a> Stable</h2><p>Element is considered stable when it has maintained the same bounding box for at least two consecutive animation frames.</p><h2 id="enabled" tabindex="-1"><a class="header-anchor" href="#enabled" aria-hidden="true">#</a> Enabled</h2><p>Element is considered enabled unless it is a <code>&lt;button&gt;</code>, <code>&lt;select&gt;</code>, <code>&lt;input&gt;</code> or <code>&lt;textarea&gt;</code> with a <code>disabled</code> property.</p><h2 id="editable" tabindex="-1"><a class="header-anchor" href="#editable" aria-hidden="true">#</a> Editable</h2><p>Element is considered editable when it is <a href="#enabled" title="Enabled">enabled</a> and does not have <code>readonly</code> property set.</p><h2 id="receives-events" tabindex="-1"><a class="header-anchor" href="#receives-events" aria-hidden="true">#</a> Receives Events</h2><p>Element is considered receiving pointer events when it is the hit target of the pointer event at the action point. For example, when clicking at the point <code>(10;10)</code>, Playwright checks whether some other element (usually an overlay) will instead capture the click at <code>(10;10)</code>.</p><p>For example, consider a scenario where Playwright will click <code>Sign Up</code> button regardless of when the [<code>method: Page.click</code>] call was made:</p><ul><li>page is checking that user name is unique and <code>Sign Up</code> button is disabled;</li><li>after checking with the server, the disabled <code>Sign Up</code> button is replaced with another one that is now enabled.</li></ul>',12);function y(x,b){const d=i("ExternalLinkIcon");return a(),s("div",null,[o,e("p",null,[t("Element is considered attached when it is "),e("a",h,[t("connected"),c(d)]),t(" to a Document or a ShadowRoot.")]),g])}const p=n(r,[["render",y],["__file","actionability.html.vue"]]);export{p as default};
