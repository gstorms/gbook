import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c as i,a as n,b as s,d as t,f as c}from"./app-3f278ba4.js";const l={},u=n("h1",{id:"class-android",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#class-android","aria-hidden":"true"},"#"),s(" class: Android")],-1),r=n("ul",null,[n("li",null,"since: v1.9"),n("li",null,"langs: js")],-1),d=n("p",null,[s("Playwright has "),n("strong",null,"experimental"),s(" support for Android automation. This includes Chrome for Android and Android WebView.")],-1),k=n("p",null,[n("em",null,"Requirements")],-1),v=n("li",null,"Android device or AVD Emulator.",-1),h={href:"https://developer.android.com/studio/command-line/adb",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"adb devices",-1),b={href:"https://play.google.com/store/apps/details?id=com.android.chrome",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"Chrome 87",-1),g=n("li",null,[s('"Enable command line on non-rooted devices" enabled in '),n("code",null,"chrome://flags"),s(".")],-1),f=c(`<p><em>Known limitations</em></p><ul><li>Raw USB operation is not yet supported, so you need ADB.</li><li>Device needs to be awake to produce screenshots. Enabling &quot;Stay awake&quot; developer mode will help.</li><li>We didn&#39;t run all the tests against the device, so not everything works.</li></ul><p><em>How to run</em></p><p>An example of the Android automation script would be:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">_android</span><span class="token operator">:</span> android <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Connect to the device.</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>device<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> android<span class="token punctuation">.</span><span class="token function">devices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Model: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>device<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Serial: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>device<span class="token punctuation">.</span><span class="token function">serial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Take screenshot of the whole device.</span>
  <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;device.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">{</span>
    <span class="token comment">// --------------------- WebView -----------------------</span>

    <span class="token comment">// Launch an application with WebView.</span>
    <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">shell</span><span class="token punctuation">(</span><span class="token string">&#39;am force-stop org.chromium.webview_shell&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">shell</span><span class="token punctuation">(</span><span class="token string">&#39;am start org.chromium.webview_shell/.WebViewBrowserActivity&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Get the WebView.</span>
    <span class="token keyword">const</span> webview <span class="token operator">=</span> <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">webView</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">pkg</span><span class="token operator">:</span> <span class="token string">&#39;org.chromium.webview_shell&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Fill the input box.</span>
    <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">res</span><span class="token operator">:</span> <span class="token string">&#39;org.chromium.webview_shell:id/url_field&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;github.com/microsoft/playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">press</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">res</span><span class="token operator">:</span> <span class="token string">&#39;org.chromium.webview_shell:id/url_field&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;Enter&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Work with WebView&#39;s page as usual.</span>
    <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> webview<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForNavigation</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*microsoft\\/playwright.*</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token comment">// --------------------- Browser -----------------------</span>

    <span class="token comment">// Launch Chrome browser.</span>
    <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">shell</span><span class="token punctuation">(</span><span class="token string">&#39;am force-stop com.android.chrome&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">launchBrowser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Use BrowserContext as usual.</span>
    <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://webkit.org/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;page.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Close the device.</span>
  <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that since you don&#39;t need Playwright to install web browsers when testing Android, you can omit browser download via setting the following environment variable when installing Playwright:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD</span><span class="token operator">=</span><span class="token number">1</span> <span class="token function">npm</span> i <span class="token parameter variable">-D</span> playwright
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="async-method-android-connect" tabindex="-1"><a class="header-anchor" href="#async-method-android-connect" aria-hidden="true">#</a> async method: Android.connect</h2><ul><li>since: v1.28</li></ul><ul><li>returns: &lt;[AndroidDevice]&gt;</li></ul><p>This methods attaches Playwright to an existing Android device.<br> Use [<code>method: Android.launchServer</code>] to launch a new Android server instance.</p><h3 id="param-android-connect-wsendpoint" tabindex="-1"><a class="header-anchor" href="#param-android-connect-wsendpoint" aria-hidden="true">#</a> param: Android.connect.wsEndpoint</h3><ul><li>since: v1.28</li></ul><ul><li><code>wsEndpoint</code> &lt;[string]&gt;</li></ul><p>A browser websocket endpoint to connect to.</p><h3 id="option-android-connect-headers" tabindex="-1"><a class="header-anchor" href="#option-android-connect-headers" aria-hidden="true">#</a> option: Android.connect.headers</h3><ul><li>since: v1.28</li></ul><ul><li><code>headers</code> &lt;[Object]&lt;[string], [string]&gt;&gt;</li></ul><p>Additional HTTP headers to be sent with web socket connect request. Optional.</p><h3 id="option-android-connect-slowmo" tabindex="-1"><a class="header-anchor" href="#option-android-connect-slowmo" aria-hidden="true">#</a> option: Android.connect.slowMo</h3><ul><li>since: v1.28</li></ul><ul><li><code>slowMo</code> &lt;[float]&gt;</li></ul><p>Slows down Playwright operations by the specified amount of milliseconds. Useful so that you<br> can see what is going on. Defaults to <code>0</code>.</p><h3 id="option-android-connect-timeout" tabindex="-1"><a class="header-anchor" href="#option-android-connect-timeout" aria-hidden="true">#</a> option: Android.connect.timeout</h3><ul><li>since: v1.28</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>Maximum time in milliseconds to wait for the connection to be established. Defaults to<br><code>30000</code> (30 seconds). Pass <code>0</code> to disable timeout.</p><h2 id="async-method-android-devices" tabindex="-1"><a class="header-anchor" href="#async-method-android-devices" aria-hidden="true">#</a> async method: Android.devices</h2><ul><li>since: v1.9</li></ul><ul><li>returns: &lt;[Array]&lt;[AndroidDevice]&gt;&gt;</li></ul><p>Returns the list of detected Android devices.</p><h3 id="option-android-devices-host" tabindex="-1"><a class="header-anchor" href="#option-android-devices-host" aria-hidden="true">#</a> option: Android.devices.host</h3><ul><li>since: v1.22</li></ul><ul><li><code>host</code> &lt;[string]&gt;</li></ul><p>Optional host to establish ADB server connection. Default to <code>127.0.0.1</code>.</p><h3 id="option-android-devices-port" tabindex="-1"><a class="header-anchor" href="#option-android-devices-port" aria-hidden="true">#</a> option: Android.devices.port</h3><ul><li>since: v1.20</li></ul><ul><li><code>port</code> &lt;[int]&gt;</li></ul><p>Optional port to establish ADB server connection. Default to <code>5037</code>.</p><h3 id="option-android-devices-omitdriverinstall" tabindex="-1"><a class="header-anchor" href="#option-android-devices-omitdriverinstall" aria-hidden="true">#</a> option: Android.devices.omitDriverInstall</h3><ul><li>since: v1.21</li></ul><ul><li><code>omitDriverInstall</code> &lt;[boolean]&gt;</li></ul><p>Prevents automatic playwright driver installation on attach. Assumes that the drivers have been installed already.</p><h2 id="async-method-android-launchserver" tabindex="-1"><a class="header-anchor" href="#async-method-android-launchserver" aria-hidden="true">#</a> async method: Android.launchServer</h2><ul><li>since: v1.28</li><li>langs: js</li></ul><ul><li>returns: &lt;[BrowserServer]&gt;</li></ul><p>Launches Playwright Android server that clients can connect to. See the following example:</p><p><strong>Usage</strong></p><p>Server Side:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> _android <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browserServer <span class="token operator">=</span> <span class="token keyword">await</span> _android<span class="token punctuation">.</span><span class="token function">launchServer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// If you have multiple devices connected and want to use a specific one.</span>
    <span class="token comment">// deviceSerialNumber: &#39;&lt;deviceSerialNumber&gt;&#39;,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> wsEndpoint <span class="token operator">=</span> browserServer<span class="token punctuation">.</span><span class="token function">wsEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>wsEndpoint<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Client Side:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> _android <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> device <span class="token operator">=</span> <span class="token keyword">await</span> _android<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;wsEndpoint&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>device<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>device<span class="token punctuation">.</span><span class="token function">serial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">shell</span><span class="token punctuation">(</span><span class="token string">&#39;am force-stop com.android.chrome&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">launchBrowser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://webkit.org/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;page-chrome-1.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-android-launchserver-adbhost" tabindex="-1"><a class="header-anchor" href="#option-android-launchserver-adbhost" aria-hidden="true">#</a> option: Android.launchServer.adbHost</h3><ul><li>since: v1.28</li></ul><ul><li><code>adbHost</code> &lt;[string]&gt;</li></ul><p>Optional host to establish ADB server connection. Default to <code>127.0.0.1</code>.</p><h3 id="option-android-launchserver-adbport" tabindex="-1"><a class="header-anchor" href="#option-android-launchserver-adbport" aria-hidden="true">#</a> option: Android.launchServer.adbPort</h3><ul><li>since: v1.28</li></ul><ul><li><code>adbPort</code> &lt;[int]&gt;</li></ul><p>Optional port to establish ADB server connection. Default to <code>5037</code>.</p><h3 id="option-android-launchserver-omitdriverinstall" tabindex="-1"><a class="header-anchor" href="#option-android-launchserver-omitdriverinstall" aria-hidden="true">#</a> option: Android.launchServer.omitDriverInstall</h3><ul><li>since: v1.28</li></ul><ul><li><code>omitDriverInstall</code> &lt;[boolean]&gt;</li></ul><p>Prevents automatic playwright driver installation on attach. Assumes that the drivers have been installed already.</p><h3 id="option-android-launchserver-deviceserialnumber" tabindex="-1"><a class="header-anchor" href="#option-android-launchserver-deviceserialnumber" aria-hidden="true">#</a> option: Android.launchServer.deviceSerialNumber</h3><ul><li>since: v1.28</li></ul><ul><li><code>deviceSerialNumber</code> &lt;[string]&gt;</li></ul><p>Optional device serial number to launch the browser on. If not specified, it will<br> throw if multiple devices are connected.</p><h3 id="option-android-launchserver-port" tabindex="-1"><a class="header-anchor" href="#option-android-launchserver-port" aria-hidden="true">#</a> option: Android.launchServer.port</h3><ul><li>since: v1.28</li></ul><ul><li><code>port</code> &lt;[int]&gt;</li></ul><p>Port to use for the web socket. Defaults to 0 that picks any available port.</p><h3 id="option-android-launchserver-wspath" tabindex="-1"><a class="header-anchor" href="#option-android-launchserver-wspath" aria-hidden="true">#</a> option: Android.launchServer.wsPath</h3><ul><li>since: v1.28</li></ul><ul><li><code>wsPath</code> &lt;[string]&gt;</li></ul><p>Path at which to serve the Android Server. For security, this defaults to an<br> unguessable string.</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>Any process or web page (including those running in Playwright) with knowledge<br> of the <code>wsPath</code> can take control of the OS user. For this reason, you should<br> use an unguessable token when using this option.</p></div><h2 id="method-android-setdefaulttimeout" tabindex="-1"><a class="header-anchor" href="#method-android-setdefaulttimeout" aria-hidden="true">#</a> method: Android.setDefaultTimeout</h2><ul><li>since: v1.9</li></ul><p>This setting will change the default maximum time for all the methods accepting [<code>param: timeout</code>] option.</p><h3 id="param-android-setdefaulttimeout-timeout" tabindex="-1"><a class="header-anchor" href="#param-android-setdefaulttimeout-timeout" aria-hidden="true">#</a> param: Android.setDefaultTimeout.timeout</h3><ul><li>since: v1.9</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>Maximum time in milliseconds</p>`,84);function y(_,A){const a=o("ExternalLinkIcon");return p(),i("div",null,[u,r,d,k,n("ul",null,[v,n("li",null,[n("a",h,[s("ADB daemon"),t(a)]),s(" running and authenticated with your device. Typically running "),m,s(" is all you need to do.")]),n("li",null,[n("a",b,[w,t(a)]),s(" or newer installed on the device")]),g]),f])}const D=e(l,[["render",y],["__file","class-android.html.vue"]]);export{D as default};
