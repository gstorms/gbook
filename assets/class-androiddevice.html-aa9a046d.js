import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as t,c as n,a as e,b as i,d as l,f as d}from"./app-207e7d61.js";const c={},s=d('<h1 id="class-androiddevice" tabindex="-1"><a class="header-anchor" href="#class-androiddevice" aria-hidden="true">#</a> class: AndroidDevice</h1><ul><li>since: v1.9</li><li>langs: js</li></ul><p>[AndroidDevice] represents a connected device, either real hardware or emulated. Devices can be obtained using [<code>method: Android.devices</code>].</p><h2 id="event-androiddevice-close" tabindex="-1"><a class="header-anchor" href="#event-androiddevice-close" aria-hidden="true">#</a> event: AndroidDevice.close</h2><ul><li>since: v1.28</li></ul><ul><li>argument: &lt;[AndroidDevice]&gt;</li></ul><p>Emitted when the device connection gets closed.</p><h2 id="event-androiddevice-webview" tabindex="-1"><a class="header-anchor" href="#event-androiddevice-webview" aria-hidden="true">#</a> event: AndroidDevice.webView</h2><ul><li>since: v1.9</li></ul><ul><li>argument: &lt;[AndroidWebView]&gt;</li></ul><p>Emitted when a new WebView instance is detected.</p><h2 id="async-method-androiddevice-close" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-close" aria-hidden="true">#</a> async method: AndroidDevice.close</h2><ul><li>since: v1.9</li></ul><p>Disconnects from the device.</p><h2 id="async-method-androiddevice-drag" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-drag" aria-hidden="true">#</a> async method: AndroidDevice.drag</h2><ul><li>since: v1.9</li></ul><p>Drags the widget defined by [<code>param: selector</code>] towards [<code>param: dest</code>] point.</p><h3 id="param-androiddevice-drag-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-drag-selector" aria-hidden="true">#</a> param: AndroidDevice.drag.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[AndroidSelector]&gt;</li></ul><p>Selector to drag.</p><h3 id="param-androiddevice-drag-dest" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-drag-dest" aria-hidden="true">#</a> param: AndroidDevice.drag.dest</h3><ul><li>since: v1.9</li></ul><ul><li><code>dest</code> &lt;[Object]&gt; <ul><li><code>x</code> &lt;[float]&gt;</li><li><code>y</code> &lt;[float]&gt;</li></ul></li></ul><p>Point to drag to.</p><h3 id="option-androiddevice-drag-speed" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-drag-speed" aria-hidden="true">#</a> option: AndroidDevice.drag.speed</h3><ul><li>since: v1.9</li></ul><ul><li><code>speed</code> &lt;[float]&gt;</li></ul><p>Optional speed of the drag in pixels per second.</p><h3 id="option-androiddevice-drag-timeout-android-timeout" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-drag-timeout-android-timeout" aria-hidden="true">#</a> option: AndroidDevice.drag.timeout = %%-android-timeout-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-androiddevice-fill" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-fill" aria-hidden="true">#</a> async method: AndroidDevice.fill</h2><ul><li>since: v1.9</li></ul><p>Fills the specific [<code>param: selector</code>] input box with [<code>param: text</code>].</p><h3 id="param-androiddevice-fill-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-fill-selector" aria-hidden="true">#</a> param: AndroidDevice.fill.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[AndroidSelector]&gt;</li></ul><p>Selector to fill.</p><h3 id="param-androiddevice-fill-text" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-fill-text" aria-hidden="true">#</a> param: AndroidDevice.fill.text</h3><ul><li>since: v1.9</li></ul><ul><li><code>text</code> &lt;[string]&gt;</li></ul><p>Text to be filled in the input box.</p><h3 id="option-androiddevice-fill-timeout-android-timeout" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-fill-timeout-android-timeout" aria-hidden="true">#</a> option: AndroidDevice.fill.timeout = %%-android-timeout-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-androiddevice-fling" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-fling" aria-hidden="true">#</a> async method: AndroidDevice.fling</h2><ul><li>since: v1.9</li></ul><p>Flings the widget defined by [<code>param: selector</code>] in the specified [<code>param: direction</code>].</p><h3 id="param-androiddevice-fling-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-fling-selector" aria-hidden="true">#</a> param: AndroidDevice.fling.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[AndroidSelector]&gt;</li></ul><p>Selector to fling.</p><h3 id="param-androiddevice-fling-direction" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-fling-direction" aria-hidden="true">#</a> param: AndroidDevice.fling.direction</h3><ul><li>since: v1.9</li></ul><ul><li><code>direction</code> &lt;[AndroidFlingDirection]&lt;&quot;down&quot;|&quot;up&quot;|&quot;left&quot;|&quot;right&quot;&gt;&gt;</li></ul><p>Fling direction.</p><h3 id="option-androiddevice-fling-speed" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-fling-speed" aria-hidden="true">#</a> option: AndroidDevice.fling.speed</h3><ul><li>since: v1.9</li></ul><ul><li><code>speed</code> &lt;[float]&gt;</li></ul><p>Optional speed of the fling in pixels per second.</p><h3 id="option-androiddevice-fling-timeout-android-timeout" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-fling-timeout-android-timeout" aria-hidden="true">#</a> option: AndroidDevice.fling.timeout = %%-android-timeout-%%</h3><ul><li>since: v1.9</li></ul>',61),h={id:"async-method-androiddevice-info",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#async-method-androiddevice-info","aria-hidden":"true"},"#",-1),u={href:"http://AndroidDevice.info",target:"_blank",rel:"noopener noreferrer"},v=d('<ul><li>since: v1.9</li></ul><ul><li>returns: &lt;[AndroidElementInfo]&gt;</li></ul><p>Returns information about a widget defined by [<code>param: selector</code>].</p><h3 id="param-androiddevice-info-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-info-selector" aria-hidden="true">#</a> param: AndroidDevice.info.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[AndroidSelector]&gt;</li></ul><p>Selector to return information about.</p><h2 id="property-androiddevice-input" tabindex="-1"><a class="header-anchor" href="#property-androiddevice-input" aria-hidden="true">#</a> property: AndroidDevice.input</h2><ul><li>since: v1.9</li></ul><ul><li>type: &lt;[AndroidInput]&gt;</li></ul><h2 id="async-method-androiddevice-installapk" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-installapk" aria-hidden="true">#</a> async method: AndroidDevice.installApk</h2><ul><li>since: v1.9</li></ul><p>Installs an apk on the device.</p><h3 id="param-androiddevice-installapk-file" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-installapk-file" aria-hidden="true">#</a> param: AndroidDevice.installApk.file</h3><ul><li>since: v1.9</li></ul><ul><li><code>file</code> &lt;[string]|[Buffer]&gt;</li></ul><p>Either a path to the apk file, or apk file content.</p><h3 id="option-androiddevice-installapk-args" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-installapk-args" aria-hidden="true">#</a> option: AndroidDevice.installApk.args</h3><ul><li>since: v1.9</li></ul><ul><li><code>args</code> &lt;[Array]&lt;[string]&gt;&gt;</li></ul><p>Optional arguments to pass to the <code>shell:cmd package install</code> call. Defaults to <code>-r -t -S</code>.</p><h2 id="async-method-androiddevice-launchbrowser" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-launchbrowser" aria-hidden="true">#</a> async method: AndroidDevice.launchBrowser</h2><ul><li>since: v1.9</li></ul><ul><li>returns: &lt;[BrowserContext]&gt;</li></ul><p>Launches Chrome browser on the device, and returns its persistent context.</p><h3 id="option-androiddevice-launchbrowser-pkg" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-launchbrowser-pkg" aria-hidden="true">#</a> option: AndroidDevice.launchBrowser.pkg</h3><ul><li>since: v1.9</li></ul><ul><li><code>command</code> &lt;[string]&gt;</li></ul><p>Optional package name to launch instead of default Chrome for Android.</p><h3 id="option-androiddevice-launchbrowser-inline-shared-context-params-list-v1-8" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-launchbrowser-inline-shared-context-params-list-v1-8" aria-hidden="true">#</a> option: AndroidDevice.launchBrowser.-inline- = %%-shared-context-params-list-v1.8-%%</h3><ul><li>since: v1.9</li></ul><h3 id="option-androiddevice-launchbrowser-proxy-browser-option-proxy" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-launchbrowser-proxy-browser-option-proxy" aria-hidden="true">#</a> option: AndroidDevice.launchBrowser.proxy = %%-browser-option-proxy-%%</h3><ul><li>since: v1.29</li></ul><h3 id="option-androiddevice-launchbrowser-args-browser-option-args" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-launchbrowser-args-browser-option-args" aria-hidden="true">#</a> option: AndroidDevice.launchBrowser.args = %%-browser-option-args-%%</h3><ul><li>since: v1.29</li></ul><h2 id="async-method-androiddevice-longtap" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-longtap" aria-hidden="true">#</a> async method: AndroidDevice.longTap</h2><ul><li>since: v1.9</li></ul><p>Performs a long tap on the widget defined by [<code>param: selector</code>].</p><h3 id="param-androiddevice-longtap-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-longtap-selector" aria-hidden="true">#</a> param: AndroidDevice.longTap.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[AndroidSelector]&gt;</li></ul><p>Selector to tap on.</p><h3 id="option-androiddevice-longtap-timeout-android-timeout" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-longtap-timeout-android-timeout" aria-hidden="true">#</a> option: AndroidDevice.longTap.timeout = %%-android-timeout-%%</h3><ul><li>since: v1.9</li></ul><h2 id="method-androiddevice-model" tabindex="-1"><a class="header-anchor" href="#method-androiddevice-model" aria-hidden="true">#</a> method: AndroidDevice.model</h2><ul><li>since: v1.9</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Device model.</p><h2 id="async-method-androiddevice-open" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-open" aria-hidden="true">#</a> async method: AndroidDevice.open</h2><ul><li>since: v1.9</li></ul><ul><li>returns: &lt;[AndroidSocket]&gt;</li></ul><p>Launches a process in the shell on the device and returns a socket to communicate with the launched process.</p><h3 id="param-androiddevice-open-command" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-open-command" aria-hidden="true">#</a> param: AndroidDevice.open.command</h3><ul><li>since: v1.9</li></ul><ul><li><code>command</code> &lt;[string]&gt; Shell command to execute.</li></ul><h2 id="async-method-androiddevice-pinchclose" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-pinchclose" aria-hidden="true">#</a> async method: AndroidDevice.pinchClose</h2><ul><li>since: v1.9</li></ul><p>Pinches the widget defined by [<code>param: selector</code>] in the closing direction.</p><h3 id="param-androiddevice-pinchclose-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-pinchclose-selector" aria-hidden="true">#</a> param: AndroidDevice.pinchClose.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[AndroidSelector]&gt;</li></ul><p>Selector to pinch close.</p><h3 id="param-androiddevice-pinchclose-percent" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-pinchclose-percent" aria-hidden="true">#</a> param: AndroidDevice.pinchClose.percent</h3><ul><li>since: v1.9</li></ul><ul><li><code>percent</code> &lt;[float]&gt;</li></ul><p>The size of the pinch as a percentage of the widget&#39;s size.</p><h3 id="option-androiddevice-pinchclose-speed" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-pinchclose-speed" aria-hidden="true">#</a> option: AndroidDevice.pinchClose.speed</h3><ul><li>since: v1.9</li></ul><ul><li><code>speed</code> &lt;[float]&gt;</li></ul><p>Optional speed of the pinch in pixels per second.</p><h3 id="option-androiddevice-pinchclose-timeout-android-timeout" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-pinchclose-timeout-android-timeout" aria-hidden="true">#</a> option: AndroidDevice.pinchClose.timeout = %%-android-timeout-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-androiddevice-pinchopen" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-pinchopen" aria-hidden="true">#</a> async method: AndroidDevice.pinchOpen</h2><ul><li>since: v1.9</li></ul><p>Pinches the widget defined by [<code>param: selector</code>] in the open direction.</p><h3 id="param-androiddevice-pinchopen-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-pinchopen-selector" aria-hidden="true">#</a> param: AndroidDevice.pinchOpen.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[AndroidSelector]&gt;</li></ul><p>Selector to pinch open.</p><h3 id="param-androiddevice-pinchopen-percent" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-pinchopen-percent" aria-hidden="true">#</a> param: AndroidDevice.pinchOpen.percent</h3><ul><li>since: v1.9</li></ul><ul><li><code>percent</code> &lt;[float]&gt;</li></ul><p>The size of the pinch as a percentage of the widget&#39;s size.</p><h3 id="option-androiddevice-pinchopen-speed" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-pinchopen-speed" aria-hidden="true">#</a> option: AndroidDevice.pinchOpen.speed</h3><ul><li>since: v1.9</li></ul><ul><li><code>speed</code> &lt;[float]&gt;</li></ul><p>Optional speed of the pinch in pixels per second.</p><h3 id="option-androiddevice-pinchopen-timeout-android-timeout" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-pinchopen-timeout-android-timeout" aria-hidden="true">#</a> option: AndroidDevice.pinchOpen.timeout = %%-android-timeout-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-androiddevice-press" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-press" aria-hidden="true">#</a> async method: AndroidDevice.press</h2><ul><li>since: v1.9</li></ul><p>Presses the specific [<code>param: key</code>] in the widget defined by [<code>param: selector</code>].</p><h3 id="param-androiddevice-press-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-press-selector" aria-hidden="true">#</a> param: AndroidDevice.press.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[AndroidSelector]&gt;</li></ul><p>Selector to press the key in.</p><h3 id="param-androiddevice-press-key" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-press-key" aria-hidden="true">#</a> param: AndroidDevice.press.key</h3><ul><li>since: v1.9</li></ul><ul><li><code>key</code> &lt;[AndroidKey]&gt;</li></ul><p>The key to press.</p><h3 id="option-androiddevice-press-timeout-android-timeout" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-press-timeout-android-timeout" aria-hidden="true">#</a> option: AndroidDevice.press.timeout = %%-android-timeout-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-androiddevice-push" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-push" aria-hidden="true">#</a> async method: AndroidDevice.push</h2><ul><li>since: v1.9</li></ul><p>Copies a file to the device.</p><h3 id="param-androiddevice-push-file" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-push-file" aria-hidden="true">#</a> param: AndroidDevice.push.file</h3><ul><li>since: v1.9</li></ul><ul><li><code>file</code> &lt;[string]|[Buffer]&gt;</li></ul><p>Either a path to the file, or file content.</p><h3 id="param-androiddevice-push-path" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-push-path" aria-hidden="true">#</a> param: AndroidDevice.push.path</h3><ul><li>since: v1.9</li></ul><ul><li><code>path</code> &lt;[string]&gt;</li></ul><p>Path to the file on the device.</p><h3 id="option-androiddevice-push-mode" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-push-mode" aria-hidden="true">#</a> option: AndroidDevice.push.mode</h3><ul><li>since: v1.9</li></ul><ul><li><code>mode</code> &lt;[int]&gt;</li></ul><p>Optional file mode, defaults to <code>644</code> (<code>rw-r--r--</code>).</p><h2 id="async-method-androiddevice-screenshot" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-screenshot" aria-hidden="true">#</a> async method: AndroidDevice.screenshot</h2><ul><li>since: v1.9</li></ul><ul><li>returns: &lt;[Buffer]&gt;</li></ul><p>Returns the buffer with the captured screenshot of the device.</p><h3 id="option-androiddevice-screenshot-path" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-screenshot-path" aria-hidden="true">#</a> option: AndroidDevice.screenshot.path</h3><ul><li>since: v1.9</li></ul><ul><li><code>path</code> &lt;[path]&gt;</li></ul><p>The file path to save the image to. If [<code>option: path</code>] is a<br> relative path, then it is resolved relative to the current working directory. If no path is provided, the image won&#39;t be<br> saved to the disk.</p><h2 id="async-method-androiddevice-scroll" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-scroll" aria-hidden="true">#</a> async method: AndroidDevice.scroll</h2><ul><li>since: v1.9</li></ul><p>Scrolls the widget defined by [<code>param: selector</code>] in the specified [<code>param: direction</code>].</p><h3 id="param-androiddevice-scroll-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-scroll-selector" aria-hidden="true">#</a> param: AndroidDevice.scroll.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[AndroidSelector]&gt;</li></ul><p>Selector to scroll.</p><h3 id="param-androiddevice-scroll-direction" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-scroll-direction" aria-hidden="true">#</a> param: AndroidDevice.scroll.direction</h3><ul><li>since: v1.9</li></ul><ul><li><code>direction</code> &lt;[AndroidScrollDirection]&lt;&quot;down&quot;|&quot;up&quot;|&quot;left&quot;|&quot;right&quot;&gt;&gt;</li></ul><p>Scroll direction.</p><h3 id="param-androiddevice-scroll-percent" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-scroll-percent" aria-hidden="true">#</a> param: AndroidDevice.scroll.percent</h3><ul><li>since: v1.9</li></ul><ul><li><code>percent</code> &lt;[float]&gt;</li></ul><p>Distance to scroll as a percentage of the widget&#39;s size.</p><h3 id="option-androiddevice-scroll-speed" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-scroll-speed" aria-hidden="true">#</a> option: AndroidDevice.scroll.speed</h3><ul><li>since: v1.9</li></ul><ul><li><code>speed</code> &lt;[float]&gt;</li></ul><p>Optional speed of the scroll in pixels per second.</p><h3 id="option-androiddevice-scroll-timeout-android-timeout" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-scroll-timeout-android-timeout" aria-hidden="true">#</a> option: AndroidDevice.scroll.timeout = %%-android-timeout-%%</h3><ul><li>since: v1.9</li></ul><h2 id="method-androiddevice-serial" tabindex="-1"><a class="header-anchor" href="#method-androiddevice-serial" aria-hidden="true">#</a> method: AndroidDevice.serial</h2><ul><li>since: v1.9</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Device serial number.</p><h2 id="method-androiddevice-setdefaulttimeout" tabindex="-1"><a class="header-anchor" href="#method-androiddevice-setdefaulttimeout" aria-hidden="true">#</a> method: AndroidDevice.setDefaultTimeout</h2><ul><li>since: v1.9</li></ul><p>This setting will change the default maximum time for all the methods accepting [<code>param: timeout</code>] option.</p><h3 id="param-androiddevice-setdefaulttimeout-timeout" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-setdefaulttimeout-timeout" aria-hidden="true">#</a> param: AndroidDevice.setDefaultTimeout.timeout</h3><ul><li>since: v1.9</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>Maximum time in milliseconds</p><h2 id="async-method-androiddevice-shell" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-shell" aria-hidden="true">#</a> async method: AndroidDevice.shell</h2><ul><li>since: v1.9</li></ul><ul><li>returns: &lt;[Buffer]&gt;</li></ul><p>Executes a shell command on the device and returns its output.</p><h3 id="param-androiddevice-shell-command" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-shell-command" aria-hidden="true">#</a> param: AndroidDevice.shell.command</h3><ul><li>since: v1.9</li></ul><ul><li><code>command</code> &lt;[string]&gt;</li></ul><p>Shell command to execute.</p><h2 id="async-method-androiddevice-swipe" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-swipe" aria-hidden="true">#</a> async method: AndroidDevice.swipe</h2><ul><li>since: v1.9</li></ul><p>Swipes the widget defined by [<code>param: selector</code>] in the specified [<code>param: direction</code>].</p><h3 id="param-androiddevice-swipe-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-swipe-selector" aria-hidden="true">#</a> param: AndroidDevice.swipe.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[AndroidSelector]&gt;</li></ul><p>Selector to swipe.</p><h3 id="param-androiddevice-swipe-direction" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-swipe-direction" aria-hidden="true">#</a> param: AndroidDevice.swipe.direction</h3><ul><li>since: v1.9</li></ul><ul><li><code>direction</code> &lt;[AndroidSwipeDirection]&lt;&quot;down&quot;|&quot;up&quot;|&quot;left&quot;|&quot;right&quot;&gt;&gt;</li></ul><p>Swipe direction.</p><h3 id="param-androiddevice-swipe-percent" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-swipe-percent" aria-hidden="true">#</a> param: AndroidDevice.swipe.percent</h3><ul><li>since: v1.9</li></ul><ul><li><code>percent</code> &lt;[float]&gt;</li></ul><p>Distance to swipe as a percentage of the widget&#39;s size.</p><h3 id="option-androiddevice-swipe-speed" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-swipe-speed" aria-hidden="true">#</a> option: AndroidDevice.swipe.speed</h3><ul><li>since: v1.9</li></ul><ul><li><code>speed</code> &lt;[float]&gt;</li></ul><p>Optional speed of the swipe in pixels per second.</p><h3 id="option-androiddevice-swipe-timeout-android-timeout" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-swipe-timeout-android-timeout" aria-hidden="true">#</a> option: AndroidDevice.swipe.timeout = %%-android-timeout-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-androiddevice-tap" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-tap" aria-hidden="true">#</a> async method: AndroidDevice.tap</h2><ul><li>since: v1.9</li></ul><p>Taps on the widget defined by [<code>param: selector</code>].</p><h3 id="param-androiddevice-tap-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-tap-selector" aria-hidden="true">#</a> param: AndroidDevice.tap.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[AndroidSelector]&gt;</li></ul><p>Selector to tap on.</p><h3 id="option-androiddevice-tap-duration" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-tap-duration" aria-hidden="true">#</a> option: AndroidDevice.tap.duration</h3><ul><li>since: v1.9</li></ul><ul><li><code>duration</code> &lt;[float]&gt;</li></ul><p>Optional duration of the tap in milliseconds.</p><h3 id="option-androiddevice-tap-timeout-android-timeout" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-tap-timeout-android-timeout" aria-hidden="true">#</a> option: AndroidDevice.tap.timeout = %%-android-timeout-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-androiddevice-wait" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-wait" aria-hidden="true">#</a> async method: AndroidDevice.wait</h2><ul><li>since: v1.9</li></ul><p>Waits for the specific [<code>param: selector</code>] to either appear or disappear, depending on the [<code>option: state</code>].</p><h3 id="param-androiddevice-wait-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-wait-selector" aria-hidden="true">#</a> param: AndroidDevice.wait.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[AndroidSelector]&gt;</li></ul><p>Selector to wait for.</p><h3 id="option-androiddevice-wait-state" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-wait-state" aria-hidden="true">#</a> option: AndroidDevice.wait.state</h3><ul><li>since: v1.9</li></ul><ul><li><code>state</code> &lt;[AndroidDeviceState]&lt;&quot;gone&quot;&gt;&gt;</li></ul><p>Optional state. Can be either:</p><ul><li>default - wait for element to be present.</li><li><code>&#39;gone&#39;</code> - wait for element to not be present.</li></ul><h3 id="option-androiddevice-wait-timeout-android-timeout" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-wait-timeout-android-timeout" aria-hidden="true">#</a> option: AndroidDevice.wait.timeout = %%-android-timeout-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-androiddevice-waitforevent" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-waitforevent" aria-hidden="true">#</a> async method: AndroidDevice.waitForEvent</h2><ul><li>since: v1.9</li></ul><ul><li>returns: &lt;[any]&gt;</li></ul><p>Waits for event to fire and passes its value into the predicate function. Returns when the predicate returns truthy value.</p><h3 id="param-androiddevice-waitforevent-event-wait-for-event-event" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-waitforevent-event-wait-for-event-event" aria-hidden="true">#</a> param: AndroidDevice.waitForEvent.event = %%-wait-for-event-event-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-androiddevice-waitforevent-optionsorpredicate" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-waitforevent-optionsorpredicate" aria-hidden="true">#</a> param: AndroidDevice.waitForEvent.optionsOrPredicate</h3><ul><li>since: v1.9</li></ul><ul><li><code>optionsOrPredicate</code> ?&lt;[function]|[Object]&gt; <ul><li><code>predicate</code> &lt;[function]&gt; receives the event data and resolves to truthy value when the waiting should resolve.</li><li><code>timeout</code> ?&lt;[float]&gt; maximum time to wait for in milliseconds. Defaults to <code>30000</code> (30 seconds). Pass <code>0</code> to<br> disable timeout. The default value can be changed by using the [<code>method: AndroidDevice.setDefaultTimeout</code>].</li></ul></li></ul><p>Either a predicate that receives an event or an options object. Optional.</p><h2 id="async-method-androiddevice-webview" tabindex="-1"><a class="header-anchor" href="#async-method-androiddevice-webview" aria-hidden="true">#</a> async method: AndroidDevice.webView</h2><ul><li>since: v1.9</li></ul><ul><li>returns: &lt;[AndroidWebView]&gt;</li></ul><p>This method waits until [AndroidWebView] matching the [<code>option: selector</code>] is opened and returns it. If there is already an open [AndroidWebView] matching the [<code>option: selector</code>], returns immediately.</p><h3 id="param-androiddevice-webview-selector" tabindex="-1"><a class="header-anchor" href="#param-androiddevice-webview-selector" aria-hidden="true">#</a> param: AndroidDevice.webView.selector</h3><ul><li>since: v1.9</li></ul><ul><li><code>selector</code> &lt;[Object]&gt; <ul><li><code>pkg</code> ?&lt;[string]&gt; Optional Package identifier.</li><li><code>socketName</code> ?&lt;[string]&gt; Optional webview socket name.</li></ul></li></ul><h3 id="option-androiddevice-webview-timeout-android-timeout" tabindex="-1"><a class="header-anchor" href="#option-androiddevice-webview-timeout-android-timeout" aria-hidden="true">#</a> option: AndroidDevice.webView.timeout = %%-android-timeout-%%</h3><ul><li>since: v1.9</li></ul><h2 id="method-androiddevice-webviews" tabindex="-1"><a class="header-anchor" href="#method-androiddevice-webviews" aria-hidden="true">#</a> method: AndroidDevice.webViews</h2><ul><li>since: v1.9</li></ul><ul><li>returns: &lt;[Array]&lt;[AndroidWebView]&gt;&gt;</li></ul><p>Currently open WebViews.</p>',236);function m(f,g){const a=r("ExternalLinkIcon");return t(),n("div",null,[s,e("h2",h,[p,i(" async method: "),e("a",u,[i("AndroidDevice.info"),l(a)])]),v])}const x=o(c,[["render",m],["__file","class-androiddevice.html.vue"]]);export{x as default};
