import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c,a as s,b as n,d as t,f as e}from"./app-207e7d61.js";const r={},l=e(`<h1 id="class-apirequestcontext" tabindex="-1"><a class="header-anchor" href="#class-apirequestcontext" aria-hidden="true">#</a> class: APIRequestContext</h1><ul><li>since: v1.16</li></ul><p>This API is used for the Web API testing. You can use it to trigger API endpoints, configure micro-services, prepare<br> environment or the service to your e2e test.</p><p>Each Playwright browser context has associated with it [APIRequestContext] instance which shares cookie storage with<br> the browser context and can be accessed via [<code>property: BrowserContext.request</code>] or [<code>property: Page.request</code>].<br> It is also possible to create a new APIRequestContext instance manually by calling [<code>method: APIRequest.newContext</code>].</p><p><strong>Cookie management</strong></p><p>[APIRequestContext] returned by [<code>property: BrowserContext.request</code>] and [<code>property: Page.request</code>] shares cookie<br> storage with the corresponding [BrowserContext]. Each API request will have <code>Cookie</code> header populated with the<br> values from the browser context. If the API response contains <code>Set-Cookie</code> header it will automatically update<br> [BrowserContext] cookies and requests made from the page will pick them up. This means that if you log in using<br> this API, your e2e test will be logged in and vice versa.</p><p>If you want API requests to not interfere with the browser cookies you should create a new [APIRequestContext] by<br> calling [<code>method: APIRequest.newContext</code>]. Such <code>APIRequestContext</code> object will have its own isolated cookie<br> storage.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright<span class="token punctuation">,</span> Playwright

REPO <span class="token operator">=</span> <span class="token string">&quot;test-repo-1&quot;</span>
USER <span class="token operator">=</span> <span class="token string">&quot;github-username&quot;</span>
API_TOKEN <span class="token operator">=</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">&quot;GITHUB_API_TOKEN&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">:</span> Playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># This will launch a new browser, create a context and page. When making HTTP</span>
    <span class="token comment"># requests with the internal APIRequestContext (e.g. \`context.request\` or \`page.request\`)</span>
    <span class="token comment"># it will automatically set the cookies to the browser page and vice versa.</span>
    browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>base_url<span class="token operator">=</span><span class="token string">&quot;https://api.github.com&quot;</span><span class="token punctuation">)</span>
    api_request_context <span class="token operator">=</span> context<span class="token punctuation">.</span>request
    page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># Alternatively you can create a APIRequestContext manually without having a browser context attached:</span>
    <span class="token comment"># api_request_context = await playwright.request.new_context(base_url=&quot;https://api.github.com&quot;)</span>

    <span class="token comment"># Create a repository.</span>
    response <span class="token operator">=</span> <span class="token keyword">await</span> api_request_context<span class="token punctuation">.</span>post<span class="token punctuation">(</span>
        <span class="token string">&quot;/user/repos&quot;</span><span class="token punctuation">,</span>
        headers<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token string">&quot;Accept&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/vnd.github.v3+json&quot;</span><span class="token punctuation">,</span>
            <span class="token comment"># Add GitHub personal access token.</span>
            <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;token </span><span class="token interpolation"><span class="token punctuation">{</span>API_TOKEN<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> REPO<span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>ok
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> REPO

    <span class="token comment"># Delete a repository.</span>
    response <span class="token operator">=</span> <span class="token keyword">await</span> api_request_context<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>
        <span class="token string-interpolation"><span class="token string">f&quot;/repos/</span><span class="token interpolation"><span class="token punctuation">{</span>USER<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>REPO<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
        headers<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token string">&quot;Accept&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/vnd.github.v3+json&quot;</span><span class="token punctuation">,</span>
            <span class="token comment"># Add GitHub personal access token.</span>
            <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;token </span><span class="token interpolation"><span class="token punctuation">{</span>API_TOKEN<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>ok
    <span class="token keyword">assert</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span>body<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;{&quot;status&quot;: &quot;ok&quot;}&#39;</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

REPO <span class="token operator">=</span> <span class="token string">&quot;test-repo-1&quot;</span>
USER <span class="token operator">=</span> <span class="token string">&quot;github-username&quot;</span>
API_TOKEN <span class="token operator">=</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">&quot;GITHUB_API_TOKEN&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> p<span class="token punctuation">:</span>
    <span class="token comment"># This will launch a new browser, create a context and page. When making HTTP</span>
    <span class="token comment"># requests with the internal APIRequestContext (e.g. \`context.request\` or \`page.request\`)</span>
    <span class="token comment"># it will automatically set the cookies to the browser page and vice versa.</span>
    browser <span class="token operator">=</span> p<span class="token punctuation">.</span>chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>base_url<span class="token operator">=</span><span class="token string">&quot;https://api.github.com&quot;</span><span class="token punctuation">)</span>
    api_request_context <span class="token operator">=</span> context<span class="token punctuation">.</span>request
    page <span class="token operator">=</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># Alternatively you can create a APIRequestContext manually without having a browser context attached:</span>
    <span class="token comment"># api_request_context = p.request.new_context(base_url=&quot;https://api.github.com&quot;)</span>


    <span class="token comment"># Create a repository.</span>
    response <span class="token operator">=</span> api_request_context<span class="token punctuation">.</span>post<span class="token punctuation">(</span>
        <span class="token string">&quot;/user/repos&quot;</span><span class="token punctuation">,</span>
        headers<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token string">&quot;Accept&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/vnd.github.v3+json&quot;</span><span class="token punctuation">,</span>
            <span class="token comment"># Add GitHub personal access token.</span>
            <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;token </span><span class="token interpolation"><span class="token punctuation">{</span>API_TOKEN<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> REPO<span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>ok
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> REPO

    <span class="token comment"># Delete a repository.</span>
    response <span class="token operator">=</span> api_request_context<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>
        <span class="token string-interpolation"><span class="token string">f&quot;/repos/</span><span class="token interpolation"><span class="token punctuation">{</span>USER<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>REPO<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
        headers<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token string">&quot;Accept&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/vnd.github.v3+json&quot;</span><span class="token punctuation">,</span>
            <span class="token comment"># Add GitHub personal access token.</span>
            <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;token </span><span class="token interpolation"><span class="token punctuation">{</span>API_TOKEN<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>ok
    <span class="token keyword">assert</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span>body<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;{&quot;status&quot;: &quot;ok&quot;}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="method-apirequestcontext-createformdata" tabindex="-1"><a class="header-anchor" href="#method-apirequestcontext-createformdata" aria-hidden="true">#</a> method: APIRequestContext.createFormData</h2><ul><li>since: v1.23</li><li>langs: csharp</li></ul><ul><li>returns: &lt;[FormData]&gt;</li></ul><p>Creates a new [FormData] instance which is used for providing form and multipart data when making HTTP requests.</p><h2 id="async-method-apirequestcontext-delete" tabindex="-1"><a class="header-anchor" href="#async-method-apirequestcontext-delete" aria-hidden="true">#</a> async method: APIRequestContext.delete</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[APIResponse]&gt;</li></ul>`,16),u={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE",target:"_blank",rel:"noopener noreferrer"},d=s("br",null,null,-1),h=s("br",null,null,-1),k=e(`<h3 id="param-apirequestcontext-delete-url-fetch-param-url" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-delete-url-fetch-param-url" aria-hidden="true">#</a> param: APIRequestContext.delete.url = %%-fetch-param-url-%%</h3><ul><li>since: v1.16</li></ul><h3 id="param-apirequestcontext-delete-params-java-csharp-fetch-params" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-delete-params-java-csharp-fetch-params" aria-hidden="true">#</a> param: APIRequestContext.delete.params = %%-java-csharp-fetch-params-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-apirequestcontext-delete-params-js-python-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-delete-params-js-python-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.delete.params = %%-js-python-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-delete-params-csharp-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-delete-params-csharp-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.delete.params = %%-csharp-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-delete-headers-js-python-csharp-fetch-option-headers" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-delete-headers-js-python-csharp-fetch-option-headers" aria-hidden="true">#</a> option: APIRequestContext.delete.headers = %%-js-python-csharp-fetch-option-headers-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-delete-data-js-python-csharp-fetch-option-data" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-delete-data-js-python-csharp-fetch-option-data" aria-hidden="true">#</a> option: APIRequestContext.delete.data = %%-js-python-csharp-fetch-option-data-%%</h3><ul><li>since: v1.17</li></ul><h3 id="option-apirequestcontext-delete-form-js-python-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-delete-form-js-python-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.delete.form = %%-js-python-fetch-option-form-%%</h3><ul><li>since: v1.17</li></ul><h3 id="option-apirequestcontext-delete-form-csharp-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-delete-form-csharp-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.delete.form = %%-csharp-fetch-option-form-%%</h3><ul><li>since: v1.17</li></ul><h3 id="option-apirequestcontext-delete-multipart-js-python-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-delete-multipart-js-python-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.delete.multipart = %%-js-python-fetch-option-multipart-%%</h3><ul><li>since: v1.17</li></ul><h3 id="option-apirequestcontext-delete-multipart-csharp-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-delete-multipart-csharp-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.delete.multipart = %%-csharp-fetch-option-multipart-%%</h3><ul><li>since: v1.17</li></ul><h3 id="option-apirequestcontext-delete-timeout-js-python-csharp-fetch-option-timeout" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-delete-timeout-js-python-csharp-fetch-option-timeout" aria-hidden="true">#</a> option: APIRequestContext.delete.timeout = %%-js-python-csharp-fetch-option-timeout-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-delete-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-delete-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" aria-hidden="true">#</a> option: APIRequestContext.delete.failOnStatusCode = %%-js-python-csharp-fetch-option-failonstatuscode-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-delete-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-delete-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" aria-hidden="true">#</a> option: APIRequestContext.delete.ignoreHTTPSErrors = %%-js-python-csharp-fetch-option-ignorehttpserrors-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-delete-maxredirects-js-python-csharp-fetch-option-maxredirects" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-delete-maxredirects-js-python-csharp-fetch-option-maxredirects" aria-hidden="true">#</a> option: APIRequestContext.delete.maxRedirects = %%-js-python-csharp-fetch-option-maxredirects-%%</h3><ul><li>since: v1.26</li></ul><h2 id="async-method-apirequestcontext-dispose" tabindex="-1"><a class="header-anchor" href="#async-method-apirequestcontext-dispose" aria-hidden="true">#</a> async method: APIRequestContext.dispose</h2><ul><li>since: v1.16</li></ul><p>All responses returned by [<code>method: APIRequestContext.get</code>] and similar methods are stored in the memory, so that you can later call [<code>method: APIResponse.body</code>]. This method<br> discards all stored responses, and makes [<code>method: APIResponse.body</code>] throw &quot;Response disposed&quot; error.</p><h2 id="async-method-apirequestcontext-fetch" tabindex="-1"><a class="header-anchor" href="#async-method-apirequestcontext-fetch" aria-hidden="true">#</a> async method: APIRequestContext.fetch</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[APIResponse]&gt;</li></ul><p>Sends HTTP(S) request and returns its response. The method will populate request cookies from the context and update<br> context cookies from the response. The method will automatically follow redirects. JSON objects can be passed directly to the request.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/api/createBook&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Book Title&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;John Doe&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Book Title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/createBook&quot;</span><span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMethod</span><span class="token punctuation">(</span><span class="token string">&quot;post&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Book Title&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;body&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
api_request_context<span class="token punctuation">.</span>fetch<span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/createBook&quot;</span><span class="token punctuation">,</span> method<span class="token operator">=</span><span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Book Title&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;John Doe&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Request<span class="token punctuation">.</span><span class="token function">FetchAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/createBook&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Method <span class="token operator">=</span> <span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span> DataObject <span class="token operator">=</span> data <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The common way to send file(s) in the body of a request is to encode it as form fields with <code>multipart/form-data</code> encoding. You can achieve that with Playwright API like this:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Open file as a stream and pass it to the request:</span>
<span class="token keyword">const</span> stream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;team.csv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/api/uploadTeamList&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">multipart</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">fileField</span><span class="token operator">:</span> stream
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Or you can pass the file content directly as an object:</span>
<span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/api/uploadScript&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">multipart</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">fileField</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;f.js&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">mimeType</span><span class="token operator">:</span> <span class="token string">&#39;text/javascript&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">buffer</span><span class="token operator">:</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;console.log(2022);&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Pass file path to the form data constructor:</span>
<span class="token class-name">Path</span> file <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;team.csv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">APIResponse</span> response <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/uploadTeamList&quot;</span><span class="token punctuation">,</span>
  <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMethod</span><span class="token punctuation">(</span><span class="token string">&quot;post&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMultipart</span><span class="token punctuation">(</span>
    <span class="token class-name">FormData</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;fileField&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Or you can pass the file content directly as FilePayload object:</span>
<span class="token class-name">FilePayload</span> filePayload <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilePayload</span><span class="token punctuation">(</span><span class="token string">&quot;f.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/javascript&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;console.log(2022);&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">APIResponse</span> response <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/uploadTeamList&quot;</span><span class="token punctuation">,</span>
  <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMethod</span><span class="token punctuation">(</span><span class="token string">&quot;post&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMultipart</span><span class="token punctuation">(</span>
    <span class="token class-name">FormData</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;fileField&quot;</span><span class="token punctuation">,</span> filePayload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>api_request_context<span class="token punctuation">.</span>fetch<span class="token punctuation">(</span>
  <span class="token string">&quot;https://example.com/api/uploadScrip&#39;&quot;</span><span class="token punctuation">,</span>
  method<span class="token operator">=</span><span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span>
  multipart<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token string">&quot;fileField&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;f.js&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;mimeType&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;text/javascript&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;buffer&quot;</span><span class="token punctuation">:</span> <span class="token string">b&quot;console.log(2022);&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FilePayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Name <span class="token operator">=</span> <span class="token string">&quot;f.js&quot;</span><span class="token punctuation">,</span>
    MimeType <span class="token operator">=</span> <span class="token string">&quot;text/javascript&quot;</span><span class="token punctuation">,</span>
    Buffer <span class="token operator">=</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span><span class="token string">&quot;console.log(2022);&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> multipart <span class="token operator">=</span> Context<span class="token punctuation">.</span>APIRequest<span class="token punctuation">.</span><span class="token function">CreateFormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
multipart<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;fileField&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Request<span class="token punctuation">.</span><span class="token function">FetchAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/uploadScript&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Method <span class="token operator">=</span> <span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span> Multipart <span class="token operator">=</span> multipart <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-apirequestcontext-fetch-urlorrequest" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-fetch-urlorrequest" aria-hidden="true">#</a> param: APIRequestContext.fetch.urlOrRequest</h3><ul><li>since: v1.16</li></ul><ul><li><code>urlOrRequest</code> &lt;[string]|[Request]&gt;</li></ul><p>Target URL or Request to get all parameters from.</p><h3 id="param-apirequestcontext-fetch-params-java-csharp-fetch-params" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-fetch-params-java-csharp-fetch-params" aria-hidden="true">#</a> param: APIRequestContext.fetch.params = %%-java-csharp-fetch-params-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-apirequestcontext-fetch-params-js-python-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-params-js-python-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.fetch.params = %%-js-python-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-fetch-params-csharp-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-params-csharp-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.fetch.params = %%-csharp-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-fetch-method" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-method" aria-hidden="true">#</a> option: APIRequestContext.fetch.method</h3><ul><li>since: v1.16</li><li>langs: js, python, csharp</li></ul><ul><li><code>method</code> &lt;[string]&gt;</li></ul>`,58),m={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT",target:"_blank",rel:"noopener noreferrer"},v=s("br",null,null,-1),f={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST",target:"_blank",rel:"noopener noreferrer"},q=e('<h3 id="option-apirequestcontext-fetch-headers-js-python-csharp-fetch-option-headers" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-headers-js-python-csharp-fetch-option-headers" aria-hidden="true">#</a> option: APIRequestContext.fetch.headers = %%-js-python-csharp-fetch-option-headers-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-fetch-data-js-python-csharp-fetch-option-data" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-data-js-python-csharp-fetch-option-data" aria-hidden="true">#</a> option: APIRequestContext.fetch.data = %%-js-python-csharp-fetch-option-data-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-fetch-form-js-python-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-form-js-python-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.fetch.form = %%-js-python-fetch-option-form-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-fetch-form-csharp-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-form-csharp-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.fetch.form = %%-csharp-fetch-option-form-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-fetch-multipart-js-python-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-multipart-js-python-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.fetch.multipart = %%-js-python-fetch-option-multipart-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-fetch-multipart-csharp-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-multipart-csharp-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.fetch.multipart = %%-csharp-fetch-option-multipart-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-fetch-timeout-js-python-csharp-fetch-option-timeout" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-timeout-js-python-csharp-fetch-option-timeout" aria-hidden="true">#</a> option: APIRequestContext.fetch.timeout = %%-js-python-csharp-fetch-option-timeout-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-fetch-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" aria-hidden="true">#</a> option: APIRequestContext.fetch.failOnStatusCode = %%-js-python-csharp-fetch-option-failonstatuscode-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-fetch-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" aria-hidden="true">#</a> option: APIRequestContext.fetch.ignoreHTTPSErrors = %%-js-python-csharp-fetch-option-ignorehttpserrors-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-fetch-maxredirects-js-python-csharp-fetch-option-maxredirects" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-fetch-maxredirects-js-python-csharp-fetch-option-maxredirects" aria-hidden="true">#</a> option: APIRequestContext.fetch.maxRedirects = %%-js-python-csharp-fetch-option-maxredirects-%%</h3><ul><li>since: v1.26</li></ul><h2 id="async-method-apirequestcontext-get" tabindex="-1"><a class="header-anchor" href="#async-method-apirequestcontext-get" aria-hidden="true">#</a> async method: APIRequestContext.get</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[APIResponse]&gt;</li></ul>',23),x={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET",target:"_blank",rel:"noopener noreferrer"},b=s("br",null,null,-1),g=s("br",null,null,-1),y=e(`<p><strong>Usage</strong></p><p>Request parameters can be configured with <code>params</code> option, they will be serialized into the URL search parameters:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/api/getText&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;isbn&#39;</span><span class="token operator">:</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;page&#39;</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>request<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/getText&quot;</span><span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setQueryParam</span><span class="token punctuation">(</span><span class="token string">&quot;isbn&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1234&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setQueryParam</span><span class="token punctuation">(</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>query_params <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;isbn&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1234&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;page&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;23&quot;</span>
<span class="token punctuation">}</span>
api_request_context<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/getText&quot;</span><span class="token punctuation">,</span> params<span class="token operator">=</span>query_params<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">var</span> <span class="token keyword">params</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;isbn&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1234&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;page&quot;</span><span class="token punctuation">,</span> <span class="token number">23</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/getText&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Params <span class="token operator">=</span> <span class="token keyword">params</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-apirequestcontext-get-url-fetch-param-url" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-get-url-fetch-param-url" aria-hidden="true">#</a> param: APIRequestContext.get.url = %%-fetch-param-url-%%</h3><ul><li>since: v1.16</li></ul><h3 id="param-apirequestcontext-get-params-java-csharp-fetch-params" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-get-params-java-csharp-fetch-params" aria-hidden="true">#</a> param: APIRequestContext.get.params = %%-java-csharp-fetch-params-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-apirequestcontext-get-params-js-python-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-get-params-js-python-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.get.params = %%-js-python-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-get-params-csharp-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-get-params-csharp-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.get.params = %%-csharp-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-get-headers-js-python-csharp-fetch-option-headers" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-get-headers-js-python-csharp-fetch-option-headers" aria-hidden="true">#</a> option: APIRequestContext.get.headers = %%-js-python-csharp-fetch-option-headers-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-get-data-js-python-csharp-fetch-option-data" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-get-data-js-python-csharp-fetch-option-data" aria-hidden="true">#</a> option: APIRequestContext.get.data = %%-js-python-csharp-fetch-option-data-%%</h3><ul><li>since: v1.26</li></ul><h3 id="option-apirequestcontext-get-form-js-python-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-get-form-js-python-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.get.form = %%-js-python-fetch-option-form-%%</h3><ul><li>since: v1.26</li></ul><h3 id="option-apirequestcontext-get-form-csharp-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-get-form-csharp-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.get.form = %%-csharp-fetch-option-form-%%</h3><ul><li>since: v1.26</li></ul><h3 id="option-apirequestcontext-get-multipart-js-python-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-get-multipart-js-python-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.get.multipart = %%-js-python-fetch-option-multipart-%%</h3><ul><li>since: v1.26</li></ul><h3 id="option-apirequestcontext-get-multipart-csharp-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-get-multipart-csharp-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.get.multipart = %%-csharp-fetch-option-multipart-%%</h3><ul><li>since: v1.26</li></ul><h3 id="option-apirequestcontext-get-timeout-js-python-csharp-fetch-option-timeout" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-get-timeout-js-python-csharp-fetch-option-timeout" aria-hidden="true">#</a> option: APIRequestContext.get.timeout = %%-js-python-csharp-fetch-option-timeout-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-get-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-get-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" aria-hidden="true">#</a> option: APIRequestContext.get.failOnStatusCode = %%-js-python-csharp-fetch-option-failonstatuscode-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-get-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-get-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" aria-hidden="true">#</a> option: APIRequestContext.get.ignoreHTTPSErrors = %%-js-python-csharp-fetch-option-ignorehttpserrors-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-get-maxredirects-js-python-csharp-fetch-option-maxredirects" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-get-maxredirects-js-python-csharp-fetch-option-maxredirects" aria-hidden="true">#</a> option: APIRequestContext.get.maxRedirects = %%-js-python-csharp-fetch-option-maxredirects-%%</h3><ul><li>since: v1.26</li></ul><h2 id="async-method-apirequestcontext-head" tabindex="-1"><a class="header-anchor" href="#async-method-apirequestcontext-head" aria-hidden="true">#</a> async method: APIRequestContext.head</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[APIResponse]&gt;</li></ul>`,37),j={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD",target:"_blank",rel:"noopener noreferrer"},P=s("br",null,null,-1),w=s("br",null,null,-1),A=e('<h3 id="param-apirequestcontext-head-url-fetch-param-url" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-head-url-fetch-param-url" aria-hidden="true">#</a> param: APIRequestContext.head.url = %%-fetch-param-url-%%</h3><ul><li>since: v1.16</li></ul><h3 id="param-apirequestcontext-head-params-java-csharp-fetch-params" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-head-params-java-csharp-fetch-params" aria-hidden="true">#</a> param: APIRequestContext.head.params = %%-java-csharp-fetch-params-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-apirequestcontext-head-params-js-python-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-head-params-js-python-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.head.params = %%-js-python-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-head-params-csharp-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-head-params-csharp-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.head.params = %%-csharp-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-head-headers-js-python-csharp-fetch-option-headers" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-head-headers-js-python-csharp-fetch-option-headers" aria-hidden="true">#</a> option: APIRequestContext.head.headers = %%-js-python-csharp-fetch-option-headers-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-head-data-js-python-csharp-fetch-option-data" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-head-data-js-python-csharp-fetch-option-data" aria-hidden="true">#</a> option: APIRequestContext.head.data = %%-js-python-csharp-fetch-option-data-%%</h3><ul><li>since: v1.26</li></ul><h3 id="option-apirequestcontext-head-form-js-python-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-head-form-js-python-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.head.form = %%-js-python-fetch-option-form-%%</h3><ul><li>since: v1.26</li></ul><h3 id="option-apirequestcontext-head-form-csharp-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-head-form-csharp-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.head.form = %%-csharp-fetch-option-form-%%</h3><ul><li>since: v1.26</li></ul><h3 id="option-apirequestcontext-head-multipart-js-python-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-head-multipart-js-python-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.head.multipart = %%-js-python-fetch-option-multipart-%%</h3><ul><li>since: v1.26</li></ul><h3 id="option-apirequestcontext-head-multipart-csharp-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-head-multipart-csharp-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.head.multipart = %%-csharp-fetch-option-multipart-%%</h3><ul><li>since: v1.26</li></ul><h3 id="option-apirequestcontext-head-timeout-js-python-csharp-fetch-option-timeout" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-head-timeout-js-python-csharp-fetch-option-timeout" aria-hidden="true">#</a> option: APIRequestContext.head.timeout = %%-js-python-csharp-fetch-option-timeout-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-head-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-head-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" aria-hidden="true">#</a> option: APIRequestContext.head.failOnStatusCode = %%-js-python-csharp-fetch-option-failonstatuscode-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-head-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-head-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" aria-hidden="true">#</a> option: APIRequestContext.head.ignoreHTTPSErrors = %%-js-python-csharp-fetch-option-ignorehttpserrors-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-head-maxredirects-js-python-csharp-fetch-option-maxredirects" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-head-maxredirects-js-python-csharp-fetch-option-maxredirects" aria-hidden="true">#</a> option: APIRequestContext.head.maxRedirects = %%-js-python-csharp-fetch-option-maxredirects-%%</h3><ul><li>since: v1.26</li></ul><h2 id="async-method-apirequestcontext-patch" tabindex="-1"><a class="header-anchor" href="#async-method-apirequestcontext-patch" aria-hidden="true">#</a> async method: APIRequestContext.patch</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[APIResponse]&gt;</li></ul>',31),R={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH",target:"_blank",rel:"noopener noreferrer"},I=s("br",null,null,-1),C=s("br",null,null,-1),_=e('<h3 id="param-apirequestcontext-patch-url-fetch-param-url" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-patch-url-fetch-param-url" aria-hidden="true">#</a> param: APIRequestContext.patch.url = %%-fetch-param-url-%%</h3><ul><li>since: v1.16</li></ul><h3 id="param-apirequestcontext-patch-params-java-csharp-fetch-params" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-patch-params-java-csharp-fetch-params" aria-hidden="true">#</a> param: APIRequestContext.patch.params = %%-java-csharp-fetch-params-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-apirequestcontext-patch-params-js-python-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-patch-params-js-python-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.patch.params = %%-js-python-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-patch-params-csharp-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-patch-params-csharp-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.patch.params = %%-csharp-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-patch-headers-js-python-csharp-fetch-option-headers" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-patch-headers-js-python-csharp-fetch-option-headers" aria-hidden="true">#</a> option: APIRequestContext.patch.headers = %%-js-python-csharp-fetch-option-headers-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-patch-data-js-python-csharp-fetch-option-data" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-patch-data-js-python-csharp-fetch-option-data" aria-hidden="true">#</a> option: APIRequestContext.patch.data = %%-js-python-csharp-fetch-option-data-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-patch-form-js-python-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-patch-form-js-python-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.patch.form = %%-js-python-fetch-option-form-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-patch-form-csharp-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-patch-form-csharp-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.patch.form = %%-csharp-fetch-option-form-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-patch-multipart-js-python-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-patch-multipart-js-python-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.patch.multipart = %%-js-python-fetch-option-multipart-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-patch-multipart-csharp-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-patch-multipart-csharp-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.patch.multipart = %%-csharp-fetch-option-multipart-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-patch-timeout-js-python-csharp-fetch-option-timeout" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-patch-timeout-js-python-csharp-fetch-option-timeout" aria-hidden="true">#</a> option: APIRequestContext.patch.timeout = %%-js-python-csharp-fetch-option-timeout-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-patch-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-patch-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" aria-hidden="true">#</a> option: APIRequestContext.patch.failOnStatusCode = %%-js-python-csharp-fetch-option-failonstatuscode-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-patch-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-patch-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" aria-hidden="true">#</a> option: APIRequestContext.patch.ignoreHTTPSErrors = %%-js-python-csharp-fetch-option-ignorehttpserrors-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-patch-maxredirects-js-python-csharp-fetch-option-maxredirects" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-patch-maxredirects-js-python-csharp-fetch-option-maxredirects" aria-hidden="true">#</a> option: APIRequestContext.patch.maxRedirects = %%-js-python-csharp-fetch-option-maxredirects-%%</h3><ul><li>since: v1.26</li></ul><h2 id="async-method-apirequestcontext-post" tabindex="-1"><a class="header-anchor" href="#async-method-apirequestcontext-post" aria-hidden="true">#</a> async method: APIRequestContext.post</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[APIResponse]&gt;</li></ul>',31),T={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST",target:"_blank",rel:"noopener noreferrer"},S=s("br",null,null,-1),O=s("br",null,null,-1),E=e(`<p><strong>Usage</strong></p><p>JSON objects can be passed directly to the request:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/api/createBook&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Book Title&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;John Doe&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Book Title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/createBook&quot;</span><span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Book Title&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;body&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
api_request_context<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/createBook&quot;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;firstNam&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;John&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;lastName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Doe&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">PostAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/createBook&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> DataObject <span class="token operator">=</span> data <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To send form data to the server use <code>form</code> option. Its value will be encoded into the request body with <code>application/x-www-form-urlencoded</code> encoding (see below how to use <code>multipart/form-data</code> form encoding to send files):</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/api/findBook&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">form</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Book Title&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;John Doe&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/findBook&quot;</span><span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setForm</span><span class="token punctuation">(</span>
    <span class="token class-name">FormData</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Book Title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>formData <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Book Title&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;body&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
api_request_context<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/findBook&quot;</span><span class="token punctuation">,</span> form<span class="token operator">=</span>formData<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> formData <span class="token operator">=</span> Context<span class="token punctuation">.</span>APIRequest<span class="token punctuation">.</span><span class="token function">CreateFormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
formData<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Book Title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
formData<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">PostAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/findBook&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Form <span class="token operator">=</span> formData <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The common way to send file(s) in the body of a request is to upload them as form fields with <code>multipart/form-data</code> encoding. You can achieve that with Playwright API like this:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Open file as a stream and pass it to the request:</span>
<span class="token keyword">const</span> stream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;team.csv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/api/uploadTeamList&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">multipart</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">fileField</span><span class="token operator">:</span> stream
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Or you can pass the file content directly as an object:</span>
<span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/api/uploadScript&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">multipart</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">fileField</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;f.js&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">mimeType</span><span class="token operator">:</span> <span class="token string">&#39;text/javascript&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">buffer</span><span class="token operator">:</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;console.log(2022);&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Pass file path to the form data constructor:</span>
<span class="token class-name">Path</span> file <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;team.csv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">APIResponse</span> response <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/uploadTeamList&quot;</span><span class="token punctuation">,</span>
  <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMultipart</span><span class="token punctuation">(</span>
    <span class="token class-name">FormData</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;fileField&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Or you can pass the file content directly as FilePayload object:</span>
<span class="token class-name">FilePayload</span> filePayload <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilePayload</span><span class="token punctuation">(</span><span class="token string">&quot;f.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/javascript&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;console.log(2022);&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">APIResponse</span> response <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/uploadTeamList&quot;</span><span class="token punctuation">,</span>
  <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMultipart</span><span class="token punctuation">(</span>
    <span class="token class-name">FormData</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;fileField&quot;</span><span class="token punctuation">,</span> filePayload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>api_request_context<span class="token punctuation">.</span>post<span class="token punctuation">(</span>
  <span class="token string">&quot;https://example.com/api/uploadScrip&#39;&quot;</span><span class="token punctuation">,</span>
  multipart<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token string">&quot;fileField&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;f.js&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;mimeType&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;text/javascript&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;buffer&quot;</span><span class="token punctuation">:</span> <span class="token string">b&quot;console.log(2022);&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FilePayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Name <span class="token operator">=</span> <span class="token string">&quot;f.js&quot;</span><span class="token punctuation">,</span>
    MimeType <span class="token operator">=</span> <span class="token string">&quot;text/javascript&quot;</span><span class="token punctuation">,</span>
    Buffer <span class="token operator">=</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span><span class="token string">&quot;console.log(2022);&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> multipart <span class="token operator">=</span> Context<span class="token punctuation">.</span>APIRequest<span class="token punctuation">.</span><span class="token function">CreateFormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
multipart<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;fileField&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">PostAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/api/uploadScript&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Multipart <span class="token operator">=</span> multipart <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-apirequestcontext-post-url-fetch-param-url" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-post-url-fetch-param-url" aria-hidden="true">#</a> param: APIRequestContext.post.url = %%-fetch-param-url-%%</h3><ul><li>since: v1.16</li></ul><h3 id="param-apirequestcontext-post-params-java-csharp-fetch-params" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-post-params-java-csharp-fetch-params" aria-hidden="true">#</a> param: APIRequestContext.post.params = %%-java-csharp-fetch-params-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-apirequestcontext-post-params-js-python-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-post-params-js-python-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.post.params = %%-js-python-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-post-params-csharp-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-post-params-csharp-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.post.params = %%-csharp-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-post-headers-js-python-csharp-fetch-option-headers" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-post-headers-js-python-csharp-fetch-option-headers" aria-hidden="true">#</a> option: APIRequestContext.post.headers = %%-js-python-csharp-fetch-option-headers-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-post-data-js-python-csharp-fetch-option-data" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-post-data-js-python-csharp-fetch-option-data" aria-hidden="true">#</a> option: APIRequestContext.post.data = %%-js-python-csharp-fetch-option-data-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-post-form-js-python-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-post-form-js-python-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.post.form = %%-js-python-fetch-option-form-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-post-form-csharp-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-post-form-csharp-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.post.form = %%-csharp-fetch-option-form-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-post-multipart-js-python-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-post-multipart-js-python-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.post.multipart = %%-js-python-fetch-option-multipart-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-post-multipart-csharp-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-post-multipart-csharp-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.post.multipart = %%-csharp-fetch-option-multipart-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-post-timeout-js-python-csharp-fetch-option-timeout" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-post-timeout-js-python-csharp-fetch-option-timeout" aria-hidden="true">#</a> option: APIRequestContext.post.timeout = %%-js-python-csharp-fetch-option-timeout-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-post-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-post-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" aria-hidden="true">#</a> option: APIRequestContext.post.failOnStatusCode = %%-js-python-csharp-fetch-option-failonstatuscode-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-post-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-post-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" aria-hidden="true">#</a> option: APIRequestContext.post.ignoreHTTPSErrors = %%-js-python-csharp-fetch-option-ignorehttpserrors-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-post-maxredirects-js-python-csharp-fetch-option-maxredirects" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-post-maxredirects-js-python-csharp-fetch-option-maxredirects" aria-hidden="true">#</a> option: APIRequestContext.post.maxRedirects = %%-js-python-csharp-fetch-option-maxredirects-%%</h3><ul><li>since: v1.26</li></ul><h2 id="async-method-apirequestcontext-put" tabindex="-1"><a class="header-anchor" href="#async-method-apirequestcontext-put" aria-hidden="true">#</a> async method: APIRequestContext.put</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[APIResponse]&gt;</li></ul>`,47),D={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT",target:"_blank",rel:"noopener noreferrer"},B=s("br",null,null,-1),F=s("br",null,null,-1),H=e('<h3 id="param-apirequestcontext-put-url-fetch-param-url" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-put-url-fetch-param-url" aria-hidden="true">#</a> param: APIRequestContext.put.url = %%-fetch-param-url-%%</h3><ul><li>since: v1.16</li></ul><h3 id="param-apirequestcontext-put-params-java-csharp-fetch-params" tabindex="-1"><a class="header-anchor" href="#param-apirequestcontext-put-params-java-csharp-fetch-params" aria-hidden="true">#</a> param: APIRequestContext.put.params = %%-java-csharp-fetch-params-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-apirequestcontext-put-params-js-python-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-put-params-js-python-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.put.params = %%-js-python-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-put-params-csharp-fetch-option-params" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-put-params-csharp-fetch-option-params" aria-hidden="true">#</a> option: APIRequestContext.put.params = %%-csharp-fetch-option-params-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-put-headers-js-python-csharp-fetch-option-headers" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-put-headers-js-python-csharp-fetch-option-headers" aria-hidden="true">#</a> option: APIRequestContext.put.headers = %%-js-python-csharp-fetch-option-headers-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-put-data-js-python-csharp-fetch-option-data" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-put-data-js-python-csharp-fetch-option-data" aria-hidden="true">#</a> option: APIRequestContext.put.data = %%-js-python-csharp-fetch-option-data-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-put-form-js-python-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-put-form-js-python-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.put.form = %%-js-python-fetch-option-form-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-put-form-csharp-fetch-option-form" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-put-form-csharp-fetch-option-form" aria-hidden="true">#</a> option: APIRequestContext.put.form = %%-csharp-fetch-option-form-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-put-multipart-js-python-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-put-multipart-js-python-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.put.multipart = %%-js-python-fetch-option-multipart-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-put-multipart-csharp-fetch-option-multipart" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-put-multipart-csharp-fetch-option-multipart" aria-hidden="true">#</a> option: APIRequestContext.put.multipart = %%-csharp-fetch-option-multipart-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-put-timeout-js-python-csharp-fetch-option-timeout" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-put-timeout-js-python-csharp-fetch-option-timeout" aria-hidden="true">#</a> option: APIRequestContext.put.timeout = %%-js-python-csharp-fetch-option-timeout-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-put-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-put-failonstatuscode-js-python-csharp-fetch-option-failonstatuscode" aria-hidden="true">#</a> option: APIRequestContext.put.failOnStatusCode = %%-js-python-csharp-fetch-option-failonstatuscode-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-put-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-put-ignorehttpserrors-js-python-csharp-fetch-option-ignorehttpserrors" aria-hidden="true">#</a> option: APIRequestContext.put.ignoreHTTPSErrors = %%-js-python-csharp-fetch-option-ignorehttpserrors-%%</h3><ul><li>since: v1.16</li></ul><h3 id="option-apirequestcontext-put-maxredirects-js-python-csharp-fetch-option-maxredirects" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-put-maxredirects-js-python-csharp-fetch-option-maxredirects" aria-hidden="true">#</a> option: APIRequestContext.put.maxRedirects = %%-js-python-csharp-fetch-option-maxredirects-%%</h3><ul><li>since: v1.26</li></ul><h2 id="async-method-apirequestcontext-storagestate" tabindex="-1"><a class="header-anchor" href="#async-method-apirequestcontext-storagestate" aria-hidden="true">#</a> async method: APIRequestContext.storageState</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[Object]&gt; <ul><li><code>cookies</code> &lt;[Array]&lt;[Object]&gt;&gt; <ul><li><code>name</code> &lt;[string]&gt;</li><li><code>value</code> &lt;[string]&gt;</li><li><code>domain</code> &lt;[string]&gt;</li><li><code>path</code> &lt;[string]&gt;</li><li><code>expires</code> &lt;[float]&gt; Unix time in seconds.</li><li><code>httpOnly</code> &lt;[boolean]&gt;</li><li><code>secure</code> &lt;[boolean]&gt;</li><li><code>sameSite</code> &lt;[SameSiteAttribute]&lt;&quot;Strict&quot;|&quot;Lax&quot;|&quot;None&quot;&gt;&gt;</li></ul></li><li><code>origins</code> &lt;[Array]&lt;[Object]&gt;&gt; <ul><li><code>origin</code> &lt;[string]&gt;</li><li><code>localStorage</code> &lt;[Array]&lt;[Object]&gt;&gt; <ul><li><code>name</code> &lt;[string]&gt;</li><li><code>value</code> &lt;[string]&gt;</li></ul></li></ul></li></ul></li></ul><p>Returns storage state for this request context, contains current cookies and local storage snapshot if it was passed to the constructor.</p><h2 id="async-method-apirequestcontext-storagestate-1" tabindex="-1"><a class="header-anchor" href="#async-method-apirequestcontext-storagestate-1" aria-hidden="true">#</a> async method: APIRequestContext.storageState</h2><ul><li>since: v1.16</li><li>langs: java, csharp</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><h3 id="option-apirequestcontext-storagestate-path-storagestate-option-path" tabindex="-1"><a class="header-anchor" href="#option-apirequestcontext-storagestate-path-storagestate-option-path" aria-hidden="true">#</a> option: APIRequestContext.storageState.path = %%-storagestate-option-path-%%</h3><ul><li>since: v1.16</li></ul>',37);function U(M,N){const a=p("ExternalLinkIcon");return i(),c("div",null,[l,s("p",null,[n("Sends HTTP(S) "),s("a",u,[n("DELETE"),t(a)]),n(" request and returns its response."),d,n(" The method will populate request cookies from the context and update"),h,n(" context cookies from the response. The method will automatically follow redirects.")]),k,s("p",null,[n("If set changes the fetch method (e.g. "),s("a",m,[n("PUT"),t(a)]),n(" or"),v,s("a",f,[n("POST"),t(a)]),n("). If not specified, GET method is used.")]),q,s("p",null,[n("Sends HTTP(S) "),s("a",x,[n("GET"),t(a)]),n(" request and returns its response."),b,n(" The method will populate request cookies from the context and update"),g,n(" context cookies from the response. The method will automatically follow redirects.")]),y,s("p",null,[n("Sends HTTP(S) "),s("a",j,[n("HEAD"),t(a)]),n(" request and returns its response."),P,n(" The method will populate request cookies from the context and update"),w,n(" context cookies from the response. The method will automatically follow redirects.")]),A,s("p",null,[n("Sends HTTP(S) "),s("a",R,[n("PATCH"),t(a)]),n(" request and returns its response."),I,n(" The method will populate request cookies from the context and update"),C,n(" context cookies from the response. The method will automatically follow redirects.")]),_,s("p",null,[n("Sends HTTP(S) "),s("a",T,[n("POST"),t(a)]),n(" request and returns its response."),S,n(" The method will populate request cookies from the context and update"),O,n(" context cookies from the response. The method will automatically follow redirects.")]),E,s("p",null,[n("Sends HTTP(S) "),s("a",D,[n("PUT"),t(a)]),n(" request and returns its response."),B,n(" The method will populate request cookies from the context and update"),F,n(" context cookies from the response. The method will automatically follow redirects.")]),H])}const L=o(r,[["render",U],["__file","class-apirequestcontext.html.vue"]]);export{L as default};
