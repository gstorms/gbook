import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as a,f as e}from"./app-207e7d61.js";const t={},o=e(`<h1 id="class-apiresponse" tabindex="-1"><a class="header-anchor" href="#class-apiresponse" aria-hidden="true">#</a> class: APIResponse</h1><ul><li>since: v1.16</li></ul><p>[APIResponse] class represents responses returned by [<code>method: APIRequestContext.get</code>] and similar methods.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright<span class="token punctuation">,</span> Playwright

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">:</span> Playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    context <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>request<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
    response <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;https://example.com/user/repos&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>ok
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span>
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;content-type&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;application/json; charset=utf-8&quot;</span>
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;foobar&quot;</span>
    <span class="token keyword">assert</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span>body<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;{&quot;status&quot;: &quot;ok&quot;}&#39;</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> p<span class="token punctuation">:</span>
    context <span class="token operator">=</span> playwright<span class="token punctuation">.</span>request<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
    response <span class="token operator">=</span> context<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;https://example.com/user/repos&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>ok
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span>
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;content-type&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;application/json; charset=utf-8&quot;</span>
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&quot;foobar&quot;</span>
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>body<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;{&quot;status&quot;: &quot;ok&quot;}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-method-apiresponse-body" tabindex="-1"><a class="header-anchor" href="#async-method-apiresponse-body" aria-hidden="true">#</a> async method: APIResponse.body</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[Buffer]&gt;</li></ul><p>Returns the buffer with response body.</p><h2 id="async-method-apiresponse-dispose" tabindex="-1"><a class="header-anchor" href="#async-method-apiresponse-dispose" aria-hidden="true">#</a> async method: APIResponse.dispose</h2><ul><li>since: v1.16</li></ul><p>Disposes the body of this response. If not called then the body will stay in memory until the context closes.</p><h2 id="method-apiresponse-headers" tabindex="-1"><a class="header-anchor" href="#method-apiresponse-headers" aria-hidden="true">#</a> method: APIResponse.headers</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[Object]&lt;[string], [string]&gt;&gt;</li></ul><p>An object with all the response HTTP headers associated with this response.</p><h2 id="method-apiresponse-headersarray" tabindex="-1"><a class="header-anchor" href="#method-apiresponse-headersarray" aria-hidden="true">#</a> method: APIResponse.headersArray</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[Array]&lt;[Object]&gt;&gt; <ul><li><code>name</code> &lt;[string]&gt; Name of the header.</li><li><code>value</code> &lt;[string]&gt; Value of the header.</li></ul></li></ul><p>An array with all the request HTTP headers associated with this response. Header names are not lower-cased.<br> Headers with multiple entries, such as <code>Set-Cookie</code>, appear in the array multiple times.</p><h2 id="async-method-apiresponse-json" tabindex="-1"><a class="header-anchor" href="#async-method-apiresponse-json" aria-hidden="true">#</a> async method: APIResponse.json</h2><ul><li>since: v1.16</li><li>langs: js, python</li></ul><ul><li>returns: &lt;[Serializable]&gt;</li></ul><p>Returns the JSON representation of response body.</p><p>This method will throw if the response body is not parsable via <code>JSON.parse</code>.</p><h2 id="async-method-apiresponse-json-1" tabindex="-1"><a class="header-anchor" href="#async-method-apiresponse-json-1" aria-hidden="true">#</a> async method: APIResponse.json</h2><ul><li>since: v1.16</li><li>langs: csharp</li></ul><ul><li>returns: &lt;[null]|[JsonElement]&gt;</li></ul><p>Returns the JSON representation of response body.</p><p>This method will throw if the response body is not parsable via <code>JSON.parse</code>.</p><h2 id="method-apiresponse-ok" tabindex="-1"><a class="header-anchor" href="#method-apiresponse-ok" aria-hidden="true">#</a> method: APIResponse.ok</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[boolean]&gt;</li></ul><p>Contains a boolean stating whether the response was successful (status in the range 200-299) or not.</p><h2 id="method-apiresponse-status" tabindex="-1"><a class="header-anchor" href="#method-apiresponse-status" aria-hidden="true">#</a> method: APIResponse.status</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[int]&gt;</li></ul><p>Contains the status code of the response (e.g., 200 for a success).</p><h2 id="method-apiresponse-statustext" tabindex="-1"><a class="header-anchor" href="#method-apiresponse-statustext" aria-hidden="true">#</a> method: APIResponse.statusText</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Contains the status text of the response (e.g. usually an &quot;OK&quot; for a success).</p><h2 id="async-method-apiresponse-text" tabindex="-1"><a class="header-anchor" href="#async-method-apiresponse-text" aria-hidden="true">#</a> async method: APIResponse.text</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Returns the text representation of response body.</p><h2 id="method-apiresponse-url" tabindex="-1"><a class="header-anchor" href="#method-apiresponse-url" aria-hidden="true">#</a> method: APIResponse.url</h2><ul><li>since: v1.16</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Contains the URL of the response.</p>`,50),p=[o];function i(l,r){return n(),a("div",null,p)}const d=s(t,[["render",i],["__file","class-apiresponse.html.vue"]]);export{d as default};
