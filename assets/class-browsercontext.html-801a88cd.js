import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,a as n,b as s,d as a,w as u,f as e}from"./app-207e7d61.js";const r={},d=e(`<h1 id="class-browsercontext" tabindex="-1"><a class="header-anchor" href="#class-browsercontext" aria-hidden="true">#</a> class: BrowserContext</h1><ul><li>since: v1.8</li><li>extends: [EventEmitter]</li></ul><p>BrowserContexts provide a way to operate multiple independent browser sessions.</p><p>If a page opens another page, e.g. with a <code>window.open</code> call, the popup will belong to the parent page&#39;s browser<br> context.</p><p>Playwright allows creating &quot;incognito&quot; browser contexts with [<code>method: Browser.newContext</code>] method. &quot;Incognito&quot; browser<br> contexts don&#39;t write any browsing data to disk.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Create a new incognito browser context</span>
<span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Create a new page inside context.</span>
<span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Dispose context once it&#39;s no longer needed.</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Create a new incognito browser context</span>
<span class="token class-name">BrowserContext</span> context <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Create a new page inside context.</span>
<span class="token class-name">Page</span> page <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Dispose context once it is no longer needed.</span>
context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># create a new incognito browser context</span>
context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># create a new page inside context.</span>
page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># dispose context once it is no longer needed.</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># create a new incognito browser context</span>
context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># create a new page inside context.</span>
page <span class="token operator">=</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># dispose context once it is no longer needed.</span>
context<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Firefox<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">BrowserTypeLaunchOptions</span> <span class="token punctuation">{</span> Headless <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Create a new incognito browser context</span>
<span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewContextAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Create a new page inside context.</span>
<span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://bing.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Dispose context once it is no longer needed.</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">CloseAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-browsercontext-backgroundpage" tabindex="-1"><a class="header-anchor" href="#event-browsercontext-backgroundpage" aria-hidden="true">#</a> event: BrowserContext.backgroundPage</h2><ul><li>since: v1.11</li><li>langs: js, python</li></ul><ul><li>argument: &lt;[Page]&gt;</li></ul><div class="hint-container note"><p class="hint-container-title">注</p><p>Only works with Chromium browser&#39;s persistent context.</p></div><p>Emitted when new background page is created in the context.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> backgroundPage <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">waitForEvent</span><span class="token punctuation">(</span><span class="token string">&#39;backgroundpage&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>background_page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>wait_for_event<span class="token punctuation">(</span><span class="token string">&quot;backgroundpage&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>background_page <span class="token operator">=</span> context<span class="token punctuation">.</span>wait_for_event<span class="token punctuation">(</span><span class="token string">&quot;backgroundpage&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="event-browsercontext-close" tabindex="-1"><a class="header-anchor" href="#event-browsercontext-close" aria-hidden="true">#</a> event: BrowserContext.close</h2><ul><li>since: v1.8</li></ul><ul><li>argument: &lt;[BrowserContext]&gt;</li></ul><p>Emitted when Browser context gets closed. This might happen because of one of the following:</p><ul><li>Browser context is closed.</li><li>Browser application is closed or crashed.</li><li>The [<code>method: Browser.close</code>] method was called.</li></ul><h2 id="event-browsercontext-page" tabindex="-1"><a class="header-anchor" href="#event-browsercontext-page" aria-hidden="true">#</a> event: BrowserContext.page</h2><ul><li>since: v1.8</li></ul><ul><li>argument: &lt;[Page]&gt;</li></ul><p>The event is emitted when a new Page is created in the BrowserContext. The page may still be loading. The event will<br> also fire for popup pages. See also [<code>event: Page.popup</code>] to receive events about popups relevant to a specific page.</p>`,27),k=n("br",null,null,-1),v=n("code",null,"window.open('http://example.com')",-1),m={href:"http://example.com",target:"_blank",rel:"noopener noreferrer"},g=n("br",null,null,-1),h=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> newPagePromise <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">waitForEvent</span><span class="token punctuation">(</span><span class="token string">&#39;page&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;open new page&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> newPage <span class="token operator">=</span> <span class="token keyword">await</span> newPagePromise<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> newPage<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&#39;location.href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Page</span> newPage <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">waitForPage</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;open new page&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>newPage<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;location.href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> context<span class="token punctuation">.</span>expect_page<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> page_info<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;open new page&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
page <span class="token operator">=</span> <span class="token keyword">await</span> page_info<span class="token punctuation">.</span>value
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;location.href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> context<span class="token punctuation">.</span>expect_page<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> page_info<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;open new page&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
page <span class="token operator">=</span> page_info<span class="token punctuation">.</span>value
<span class="token keyword">print</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;location.href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> popup <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">RunAndWaitForPageAsync</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;open new page&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> popup<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvaluateAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;location.href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">注</p><p>Use [<code>method: Page.waitForLoadState</code>] to wait until the page gets to a particular state (you should not need it in most<br> cases).</p></div><h2 id="event-browsercontext-request" tabindex="-1"><a class="header-anchor" href="#event-browsercontext-request" aria-hidden="true">#</a> event: BrowserContext.request</h2><ul><li>since: v1.12</li></ul><ul><li>argument: &lt;[Request]&gt;</li></ul><p>Emitted when a request is issued from any pages created through this context.<br> The [request] object is read-only. To only listen for requests from a particular<br> page, use [<code>event: Page.request</code>].</p><p>In order to intercept and mutate requests, see [<code>method: BrowserContext.route</code>]<br> or [<code>method: Page.route</code>].</p><h2 id="event-browsercontext-requestfailed" tabindex="-1"><a class="header-anchor" href="#event-browsercontext-requestfailed" aria-hidden="true">#</a> event: BrowserContext.requestFailed</h2><ul><li>since: v1.12</li></ul><ul><li>argument: &lt;[Request]&gt;</li></ul><p>Emitted when a request fails, for example by timing out. To only listen for<br> failed requests from a particular page, use [<code>event: Page.requestFailed</code>].</p><div class="hint-container note"><p class="hint-container-title">注</p><p>HTTP Error responses, such as 404 or 503, are still successful responses from HTTP standpoint, so request will complete<br> with [<code>event: BrowserContext.requestFinished</code>] event and not with [<code>event: BrowserContext.requestFailed</code>].</p></div><h2 id="event-browsercontext-requestfinished" tabindex="-1"><a class="header-anchor" href="#event-browsercontext-requestfinished" aria-hidden="true">#</a> event: BrowserContext.requestFinished</h2><ul><li>since: v1.12</li></ul><ul><li>argument: &lt;[Request]&gt;</li></ul><p>Emitted when a request finishes successfully after downloading the response body. For a successful response, the<br> sequence of events is <code>request</code>, <code>response</code> and <code>requestfinished</code>. To listen for<br> successful requests from a particular page, use [<code>event: Page.requestFinished</code>].</p><h2 id="event-browsercontext-response" tabindex="-1"><a class="header-anchor" href="#event-browsercontext-response" aria-hidden="true">#</a> event: BrowserContext.response</h2><ul><li>since: v1.12</li></ul><ul><li>argument: &lt;[Response]&gt;</li></ul><p>Emitted when [response] status and headers are received for a request. For a successful response, the sequence of events<br> is <code>request</code>, <code>response</code> and <code>requestfinished</code>. To listen for response events<br> from a particular page, use [<code>event: Page.response</code>].</p><h2 id="event-browsercontext-serviceworker" tabindex="-1"><a class="header-anchor" href="#event-browsercontext-serviceworker" aria-hidden="true">#</a> event: BrowserContext.serviceWorker</h2><ul><li>since: v1.11</li><li>langs: js, python</li></ul><ul><li>argument: &lt;[Worker]&gt;</li></ul><div class="hint-container note"><p class="hint-container-title">注</p><p>Service workers are only supported on Chromium-based browsers.</p></div><p>Emitted when new service worker is created in the context.</p><h2 id="async-method-browsercontext-addcookies" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-addcookies" aria-hidden="true">#</a> async method: BrowserContext.addCookies</h2><ul><li>since: v1.8</li></ul><p>Adds cookies into this browser context. All pages within this context will have these cookies installed. Cookies can be<br> obtained via [<code>method: BrowserContext.cookies</code>].</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> browserContext<span class="token punctuation">.</span><span class="token function">addCookies</span><span class="token punctuation">(</span><span class="token punctuation">[</span>cookieObject1<span class="token punctuation">,</span> cookieObject2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>browserContext<span class="token punctuation">.</span><span class="token function">addCookies</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>cookieObject1<span class="token punctuation">,</span> cookieObject2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> browser_context<span class="token punctuation">.</span>add_cookies<span class="token punctuation">(</span><span class="token punctuation">[</span>cookie_object1<span class="token punctuation">,</span> cookie_object2<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>browser_context<span class="token punctuation">.</span>add_cookies<span class="token punctuation">(</span><span class="token punctuation">[</span>cookie_object1<span class="token punctuation">,</span> cookie_object2<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">AddCookiesAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> cookie1<span class="token punctuation">,</span> cookie2 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="param-browsercontext-addcookies-cookies" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-addcookies-cookies" aria-hidden="true">#</a> param: BrowserContext.addCookies.cookies</h3><ul><li>since: v1.8</li></ul><ul><li><code>cookies</code> &lt;[Array]&lt;[Object]&gt;&gt; <ul><li><code>name</code> &lt;[string]&gt;</li><li><code>value</code> &lt;[string]&gt;</li><li><code>url</code> ?&lt;[string]&gt; either url or domain / path are required. Optional.</li><li><code>domain</code> ?&lt;[string]&gt; either url or domain / path are required Optional.</li><li><code>path</code> ?&lt;[string]&gt; either url or domain / path are required Optional.</li><li><code>expires</code> ?&lt;[float]&gt; Unix time in seconds. Optional.</li><li><code>httpOnly</code> ?&lt;[boolean]&gt; Optional.</li><li><code>secure</code> ?&lt;[boolean]&gt; Optional.</li><li><code>sameSite</code> ?&lt;[SameSiteAttribute]&lt;&quot;Strict&quot;|&quot;Lax&quot;|&quot;None&quot;&gt;&gt; Optional.</li></ul></li></ul><h2 id="async-method-browsercontext-addinitscript" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-addinitscript" aria-hidden="true">#</a> async method: BrowserContext.addInitScript</h2><ul><li>since: v1.8</li></ul><p>Adds a script which would be evaluated in one of the following scenarios:</p><ul><li>Whenever a page is created in the browser context or is navigated.</li><li>Whenever a child frame is attached or navigated in any page in the browser context. In this case, the script is<br> evaluated in the context of the newly attached frame.</li></ul><p>The script is evaluated after the document was created but before any of its scripts were run. This is useful to amend<br> the JavaScript environment, e.g. to seed <code>Math.random</code>.</p><p><strong>Usage</strong></p><p>An example of overriding <code>Math.random</code> before the page loads:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// preload.js</span>
Math<span class="token punctuation">.</span><span class="token function-variable function">random</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">42</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// In your playwright script, assuming the preload.js file is in same directory.</span>
<span class="token keyword">await</span> browserContext<span class="token punctuation">.</span><span class="token function">addInitScript</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;preload.js&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// In your playwright script, assuming the preload.js file is in same directory.</span>
browserContext<span class="token punctuation">.</span><span class="token function">addInitScript</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;preload.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># in your playwright script, assuming the preload.js file is in same directory.</span>
<span class="token keyword">await</span> browser_context<span class="token punctuation">.</span>add_init_script<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;preload.js&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># in your playwright script, assuming the preload.js file is in same directory.</span>
browser_context<span class="token punctuation">.</span>add_init_script<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;preload.js&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">AddInitScriptAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">BrowserContextAddInitScriptOptions</span> <span class="token punctuation">{</span> ScriptPath <span class="token operator">=</span> <span class="token string">&quot;preload.js&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">注</p><p>The order of evaluation of multiple scripts installed via [<code>method: BrowserContext.addInitScript</code>] and<br> [<code>method: Page.addInitScript</code>] is not defined.</p></div><h3 id="param-browsercontext-addinitscript-script" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-addinitscript-script" aria-hidden="true">#</a> param: BrowserContext.addInitScript.script</h3><ul><li>since: v1.8</li><li>langs: js</li></ul><ul><li><code>script</code> &lt;[function]|[string]|[Object]&gt; <ul><li><code>path</code> ?&lt;[path]&gt; Path to the JavaScript file. If <code>path</code> is a relative path, then it is resolved relative to the<br> current working directory. Optional.</li><li><code>content</code> ?&lt;[string]&gt; Raw script content. Optional.</li></ul></li></ul><p>Script to be evaluated in all pages in the browser context.</p><h3 id="param-browsercontext-addinitscript-script-1" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-addinitscript-script-1" aria-hidden="true">#</a> param: BrowserContext.addInitScript.script</h3><ul><li>since: v1.8</li><li>langs: csharp, java</li></ul><ul><li><code>script</code> &lt;[string]|[path]&gt;</li></ul><p>Script to be evaluated in all pages in the browser context.</p><h3 id="param-browsercontext-addinitscript-arg" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-addinitscript-arg" aria-hidden="true">#</a> param: BrowserContext.addInitScript.arg</h3><ul><li>since: v1.8</li><li>langs: js</li></ul><ul><li><code>arg</code> ?&lt;[Serializable]&gt;</li></ul><p>Optional argument to pass to [<code>param: script</code>] (only supported when passing a function).</p><h3 id="param-browsercontext-addinitscript-path" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-addinitscript-path" aria-hidden="true">#</a> param: BrowserContext.addInitScript.path</h3><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li><code>path</code> ?&lt;[path]&gt;</li></ul><p>Path to the JavaScript file. If <code>path</code> is a relative path, then it is resolved relative to the current working directory. Optional.</p><h3 id="param-browsercontext-addinitscript-script-2" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-addinitscript-script-2" aria-hidden="true">#</a> param: BrowserContext.addInitScript.script</h3><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li><code>script</code> ?&lt;[string]&gt;</li></ul><p>Script to be evaluated in all pages in the browser context. Optional.</p><h2 id="method-browsercontext-backgroundpages" tabindex="-1"><a class="header-anchor" href="#method-browsercontext-backgroundpages" aria-hidden="true">#</a> method: BrowserContext.backgroundPages</h2><ul><li>since: v1.11</li><li>langs: js, python</li></ul><ul><li>returns: &lt;[Array]&lt;[Page]&gt;&gt;</li></ul><div class="hint-container note"><p class="hint-container-title">注</p><p>Background pages are only supported on Chromium-based browsers.</p></div><p>All existing background pages in the context.</p><h2 id="method-browsercontext-browser" tabindex="-1"><a class="header-anchor" href="#method-browsercontext-browser" aria-hidden="true">#</a> method: BrowserContext.browser</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Browser]&gt;</li></ul><p>Returns the browser instance of the context. If it was launched as a persistent context null gets returned.</p><h2 id="async-method-browsercontext-clearcookies" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-clearcookies" aria-hidden="true">#</a> async method: BrowserContext.clearCookies</h2><ul><li>since: v1.8</li></ul><p>Clears context cookies.</p><h2 id="async-method-browsercontext-clearpermissions" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-clearpermissions" aria-hidden="true">#</a> async method: BrowserContext.clearPermissions</h2><ul><li>since: v1.8</li></ul><p>Clears all permission overrides for the browser context.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">grantPermissions</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;clipboard-read&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// do stuff ..</span>
context<span class="token punctuation">.</span><span class="token function">clearPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BrowserContext</span> context <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">grantPermissions</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;clipboard-read&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// do stuff ..</span>
context<span class="token punctuation">.</span><span class="token function">clearPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span>grant_permissions<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;clipboard-read&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># do stuff ..</span>
context<span class="token punctuation">.</span>clear_permissions<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span>grant_permissions<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;clipboard-read&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># do stuff ..</span>
context<span class="token punctuation">.</span>clear_permissions<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewContextAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">GrantPermissionsAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;clipboard-read&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Alternatively, you can use the helper class ContextPermissions</span>
<span class="token comment">//  to specify the permissions...</span>
<span class="token comment">// do stuff ...</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">ClearPermissionsAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-method-browsercontext-close" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-close" aria-hidden="true">#</a> async method: BrowserContext.close</h2><ul><li>since: v1.8</li></ul><p>Closes the browser context. All the pages that belong to the browser context will be closed.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>The default browser context cannot be closed.</p></div><h2 id="async-method-browsercontext-cookies" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-cookies" aria-hidden="true">#</a> async method: BrowserContext.cookies</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Array]&lt;[Object]&gt;&gt; <ul><li><code>name</code> &lt;[string]&gt;</li><li><code>value</code> &lt;[string]&gt;</li><li><code>domain</code> &lt;[string]&gt;</li><li><code>path</code> &lt;[string]&gt;</li><li><code>expires</code> &lt;[float]&gt; Unix time in seconds.</li><li><code>httpOnly</code> &lt;[boolean]&gt;</li><li><code>secure</code> &lt;[boolean]&gt;</li><li><code>sameSite</code> &lt;[SameSiteAttribute]&lt;&quot;Strict&quot;|&quot;Lax&quot;|&quot;None&quot;&gt;&gt;</li></ul></li></ul><p>If no URLs are specified, this method returns all cookies. If URLs are specified, only cookies that affect those URLs<br> are returned.</p><h3 id="param-browsercontext-cookies-urls" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-cookies-urls" aria-hidden="true">#</a> param: BrowserContext.cookies.urls</h3><ul><li>since: v1.8</li></ul><ul><li><code>urls</code> ?&lt;[string]|[Array]&lt;[string]&gt;&gt;</li></ul><p>Optional list of URLs.</p><h2 id="async-method-browsercontext-exposebinding" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-exposebinding" aria-hidden="true">#</a> async method: BrowserContext.exposeBinding</h2><ul><li>since: v1.8</li></ul><p>The method adds a function called [<code>param: name</code>] on the <code>window</code> object of every frame in every page in the context.<br> When called, the function executes [<code>param: callback</code>] and returns a [Promise] which resolves to the return value of<br> [<code>param: callback</code>]. If the [<code>param: callback</code>] returns a [Promise], it will be awaited.</p><p>The first argument of the [<code>param: callback</code>] function contains information about the caller: <code>{ browserContext: BrowserContext, page: Page, frame: Frame }</code>.</p><p>See [<code>method: Page.exposeBinding</code>] for page-only version.</p><p><strong>Usage</strong></p><p>An example of exposing page URL to all frames in all pages in the context:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> webkit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Or &#39;chromium&#39; or &#39;firefox&#39;.</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">exposeBinding</span><span class="token punctuation">(</span><span class="token string">&#39;pageURL&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> page <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> page<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;script&gt;
      async function onClick() {
        document.querySelector(&#39;div&#39;).textContent = await window.pageURL();
      }
    &lt;/script&gt;
    &lt;button onclick=&quot;onClick()&quot;&gt;Click me&lt;/button&gt;
    &lt;div&gt;&lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>playwright<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Playwright</span> playwright <span class="token operator">=</span> <span class="token class-name">Playwright</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BrowserType</span> webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span><span class="token function">webkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token class-name">Browser</span> browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BrowserType<span class="token punctuation">.</span>LaunchOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setHeadless</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">BrowserContext</span> context <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      context<span class="token punctuation">.</span><span class="token function">exposeBinding</span><span class="token punctuation">(</span><span class="token string">&quot;pageURL&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>source<span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> source<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Page</span> page <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  async function onClick() {\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;    document.querySelector(&#39;div&#39;).textContent = await window.pageURL();\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  }\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;/script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;button onclick=\\&quot;onClick()\\&quot;&gt;Click me&lt;/button&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;div&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token class-name">AriaRole</span><span class="token punctuation">.</span><span class="token constant">BUTTON</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>headless<span class="token operator">=</span>false<span class="token punctuation">)</span>
    context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> context<span class="token punctuation">.</span>expose_binding<span class="token punctuation">(</span><span class="token string">&quot;pageURL&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> source<span class="token punctuation">:</span> source<span class="token punctuation">[</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
    &lt;script&gt;
      async function onClick() {
        document.querySelector(&#39;div&#39;).textContent = await window.pageURL();
      }
    &lt;/script&gt;
    &lt;button onclick=&quot;onClick()&quot;&gt;Click me&lt;/button&gt;
    &lt;div&gt;&lt;/div&gt;
    &quot;&quot;&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>headless<span class="token operator">=</span>false<span class="token punctuation">)</span>
    context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
    context<span class="token punctuation">.</span>expose_binding<span class="token punctuation">(</span><span class="token string">&quot;pageURL&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> source<span class="token punctuation">:</span> source<span class="token punctuation">[</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    page <span class="token operator">=</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
    &lt;script&gt;
      async function onClick() {
        document.querySelector(&#39;div&#39;).textContent = await window.pageURL();
      }
    &lt;/script&gt;
    &lt;button onclick=&quot;onClick()&quot;&gt;Click me&lt;/button&gt;
    &lt;div&gt;&lt;/div&gt;
    &quot;&quot;&quot;</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
    run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright</span><span class="token punctuation">;</span>

<span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Webkit<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">BrowserTypeLaunchOptions</span> <span class="token punctuation">{</span> Headless <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewContextAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">ExposeBindingAsync</span><span class="token punctuation">(</span><span class="token string">&quot;pageURL&quot;</span><span class="token punctuation">,</span> source <span class="token operator">=&gt;</span> source<span class="token punctuation">.</span>Page<span class="token punctuation">.</span>Url<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetContentAsync</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;script&gt;\\n&quot;</span> <span class="token operator">+</span>
<span class="token string">&quot;  async function onClick() {\\n&quot;</span> <span class="token operator">+</span>
<span class="token string">&quot;    document.querySelector(&#39;div&#39;).textContent = await window.pageURL();\\n&quot;</span> <span class="token operator">+</span>
<span class="token string">&quot;  }\\n&quot;</span> <span class="token operator">+</span>
<span class="token string">&quot;&lt;/script&gt;\\n&quot;</span> <span class="token operator">+</span>
<span class="token string">&quot;&lt;button onclick=\\&quot;onClick()\\&quot;&gt;Click me&lt;/button&gt;\\n&quot;</span> <span class="token operator">+</span>
<span class="token string">&quot;&lt;div&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByRole</span><span class="token punctuation">(</span>AriaRole<span class="token punctuation">.</span>Button<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>An example of passing an element handle:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">exposeBinding</span><span class="token punctuation">(</span><span class="token string">&#39;clicked&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> element<span class="token punctuation">.</span><span class="token function">textContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">handle</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  &lt;script&gt;
    document.addEventListener(&#39;click&#39;, event =&gt; window.clicked(event.target));
  &lt;/script&gt;
  &lt;div&gt;Click me&lt;/div&gt;
  &lt;div&gt;Or click me&lt;/div&gt;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>context<span class="token punctuation">.</span><span class="token function">exposeBinding</span><span class="token punctuation">(</span><span class="token string">&quot;clicked&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>source<span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token class-name">ElementHandle</span> element <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ElementHandle</span><span class="token punctuation">)</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span><span class="token function">textContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BrowserContext<span class="token punctuation">.</span>ExposeBindingOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;script&gt;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  document.addEventListener(&#39;click&#39;, event =&gt; window.clicked(event.target));\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;/script&gt;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;div&gt;Click me&lt;/div&gt;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;div&gt;Or click me&lt;/div&gt;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">print</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> element<span class="token punctuation">.</span>text_content<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> context<span class="token punctuation">.</span>expose_binding<span class="token punctuation">(</span><span class="token string">&quot;clicked&quot;</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">,</span> handle<span class="token operator">=</span>true<span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
  &lt;script&gt;
    document.addEventListener(&#39;click&#39;, event =&gt; window.clicked(event.target));
  &lt;/script&gt;
  &lt;div&gt;Click me&lt;/div&gt;
  &lt;div&gt;Or click me&lt;/div&gt;
&quot;&quot;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">print</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>text_content<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

context<span class="token punctuation">.</span>expose_binding<span class="token punctuation">(</span><span class="token string">&quot;clicked&quot;</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">,</span> handle<span class="token operator">=</span>true<span class="token punctuation">)</span>
page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
  &lt;script&gt;
    document.addEventListener(&#39;click&#39;, event =&gt; window.clicked(event.target));
  &lt;/script&gt;
  &lt;div&gt;Click me&lt;/div&gt;
  &lt;div&gt;Or click me&lt;/div&gt;
&quot;&quot;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TaskCompletionSource<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> Context<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Context<span class="token punctuation">.</span><span class="token function">ExposeBindingAsync</span><span class="token punctuation">(</span><span class="token string">&quot;clicked&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token class-name">BindingSource</span> _<span class="token punctuation">,</span> <span class="token class-name">IJSHandle</span> t<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">TrySetResult</span><span class="token punctuation">(</span><span class="token keyword">await</span> t<span class="token punctuation">.</span><span class="token function">AsElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">TextContentAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetContentAsync</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;script&gt;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  document.addEventListener(&#39;click&#39;, event =&gt; window.clicked(event.target));\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;/script&gt;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;div&gt;Click me&lt;/div&gt;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;div&gt;Or click me&lt;/div&gt;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Note: it makes sense to await the result here, because otherwise, the context</span>
<span class="token comment">//  gets closed and the binding function will throw an exception.</span>
Assert<span class="token punctuation">.</span><span class="token function">AreEqual</span><span class="token punctuation">(</span><span class="token string">&quot;Click me&quot;</span><span class="token punctuation">,</span> <span class="token keyword">await</span> result<span class="token punctuation">.</span>Task<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,126),b={id:"param-browsercontext-exposebinding-name",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#param-browsercontext-exposebinding-name","aria-hidden":"true"},"#",-1),y={href:"http://BrowserContext.exposeBinding.name",target:"_blank",rel:"noopener noreferrer"},x=e(`<ul><li>since: v1.8</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Name of the function on the window object.</p><h3 id="param-browsercontext-exposebinding-callback" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-exposebinding-callback" aria-hidden="true">#</a> param: BrowserContext.exposeBinding.callback</h3><ul><li>since: v1.8</li></ul><ul><li><code>callback</code> &lt;[function]&gt;</li></ul><p>Callback function that will be called in the Playwright&#39;s context.</p><h3 id="option-browsercontext-exposebinding-handle" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-exposebinding-handle" aria-hidden="true">#</a> option: BrowserContext.exposeBinding.handle</h3><ul><li>since: v1.8</li></ul><ul><li><code>handle</code> &lt;[boolean]&gt;</li></ul><p>Whether to pass the argument as a handle, instead of passing by value. When passing a handle, only one argument is<br> supported. When passing by value, multiple arguments are supported.</p><h2 id="async-method-browsercontext-exposefunction" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-exposefunction" aria-hidden="true">#</a> async method: BrowserContext.exposeFunction</h2><ul><li>since: v1.8</li></ul><p>The method adds a function called [<code>param: name</code>] on the <code>window</code> object of every frame in every page in the context.<br> When called, the function executes [<code>param: callback</code>] and returns a [Promise] which resolves to the return value of<br> [<code>param: callback</code>].</p><p>If the [<code>param: callback</code>] returns a [Promise], it will be awaited.</p><p>See [<code>method: Page.exposeFunction</code>] for page-only version.</p><p><strong>Usage</strong></p><p>An example of adding a <code>sha256</code> function to all pages in the context:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> webkit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Or &#39;chromium&#39; or &#39;firefox&#39;.</span>
<span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">exposeFunction</span><span class="token punctuation">(</span><span class="token string">&#39;sha256&#39;</span><span class="token punctuation">,</span> <span class="token parameter">text</span> <span class="token operator">=&gt;</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;sha256&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;script&gt;
      async function onClick() {
        document.querySelector(&#39;div&#39;).textContent = await window.sha256(&#39;PLAYWRIGHT&#39;);
      }
    &lt;/script&gt;
    &lt;button onclick=&quot;onClick()&quot;&gt;Click me&lt;/button&gt;
    &lt;div&gt;&lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>playwright<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">MessageDigest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">NoSuchAlgorithmException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Playwright</span> playwright <span class="token operator">=</span> <span class="token class-name">Playwright</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BrowserType</span> webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span><span class="token function">webkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token class-name">Browser</span> browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BrowserType<span class="token punctuation">.</span>LaunchOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setHeadless</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      context<span class="token punctuation">.</span><span class="token function">exposeFunction</span><span class="token punctuation">(</span><span class="token string">&quot;sha256&quot;</span><span class="token punctuation">,</span> args <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">MessageDigest</span> crypto<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          crypto <span class="token operator">=</span> <span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;SHA-256&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchAlgorithmException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> token <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Page</span> page <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  async function onClick() {\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;    document.querySelector(&#39;div&#39;).textContent = await window.sha256(&#39;PLAYWRIGHT&#39;);\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  }\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;/script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;button onclick=\\&quot;onClick()\\&quot;&gt;Click me&lt;/button&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;div&gt;&lt;/div&gt;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token class-name">AriaRole</span><span class="token punctuation">.</span><span class="token constant">BUTTON</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> hashlib
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright

<span class="token keyword">def</span> <span class="token function">sha256</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>
    m <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span><span class="token punctuation">)</span>
    m<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> m<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>headless<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> context<span class="token punctuation">.</span>expose_function<span class="token punctuation">(</span><span class="token string">&quot;sha256&quot;</span><span class="token punctuation">,</span> sha256<span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
        &lt;script&gt;
          async function onClick() {
            document.querySelector(&#39;div&#39;).textContent = await window.sha256(&#39;PLAYWRIGHT&#39;);
          }
        &lt;/script&gt;
        &lt;button onclick=&quot;onClick()&quot;&gt;Click me&lt;/button&gt;
        &lt;div&gt;&lt;/div&gt;
    &quot;&quot;&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> hashlib
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">def</span> <span class="token function">sha256</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>
    m <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span><span class="token punctuation">)</span>
    m<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> m<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>headless<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
    context<span class="token punctuation">.</span>expose_function<span class="token punctuation">(</span><span class="token string">&quot;sha256&quot;</span><span class="token punctuation">,</span> sha256<span class="token punctuation">)</span>
    page <span class="token operator">=</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
        &lt;script&gt;
          async function onClick() {
            document.querySelector(&#39;div&#39;).textContent = await window.sha256(&#39;PLAYWRIGHT&#39;);
          }
        &lt;/script&gt;
        &lt;button onclick=&quot;onClick()&quot;&gt;Click me&lt;/button&gt;
        &lt;div&gt;&lt;/div&gt;
    &quot;&quot;&quot;</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
    run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>Cryptography</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">BrowserContextExamples</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Webkit<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">BrowserTypeLaunchOptions</span> <span class="token punctuation">{</span> Headless <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewContextAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">ExposeFunctionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;sha256&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> input<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Convert<span class="token punctuation">.</span><span class="token function">ToBase64String</span><span class="token punctuation">(</span>
                SHA256<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ComputeHash</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetContentAsync</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  async function onClick() {\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;    document.querySelector(&#39;div&#39;).textContent = await window.sha256(&#39;PLAYWRIGHT&#39;);\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  }\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;/script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;button onclick=\\&quot;onClick()\\&quot;&gt;Click me&lt;/button&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;div&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByRole</span><span class="token punctuation">(</span>AriaRole<span class="token punctuation">.</span>Button<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">TextContentAsync</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),f={id:"param-browsercontext-exposefunction-name",tabindex:"-1"},q=n("a",{class:"header-anchor",href:"#param-browsercontext-exposefunction-name","aria-hidden":"true"},"#",-1),C={href:"http://BrowserContext.exposeFunction.name",target:"_blank",rel:"noopener noreferrer"},_=e('<ul><li>since: v1.8</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Name of the function on the window object.</p><h3 id="param-browsercontext-exposefunction-callback" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-exposefunction-callback" aria-hidden="true">#</a> param: BrowserContext.exposeFunction.callback</h3><ul><li>since: v1.8</li></ul><ul><li><code>callback</code> &lt;[function]&gt;</li></ul><p>Callback function that will be called in the Playwright&#39;s context.</p><h2 id="async-method-browsercontext-grantpermissions" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-grantpermissions" aria-hidden="true">#</a> async method: BrowserContext.grantPermissions</h2><ul><li>since: v1.8</li></ul><p>Grants specified permissions to the browser context. Only grants corresponding permissions to the given origin if<br> specified.</p><h3 id="param-browsercontext-grantpermissions-permissions" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-grantpermissions-permissions" aria-hidden="true">#</a> param: BrowserContext.grantPermissions.permissions</h3><ul><li>since: v1.8</li></ul><ul><li><code>permissions</code> &lt;[Array]&lt;[string]&gt;&gt;</li></ul><p>A permission or an array of permissions to grant. Permissions can be one of the following values:</p><ul><li><code>&#39;geolocation&#39;</code></li><li><code>&#39;midi&#39;</code></li><li><code>&#39;midi-sysex&#39;</code> (system-exclusive midi)</li><li><code>&#39;notifications&#39;</code></li><li><code>&#39;camera&#39;</code></li><li><code>&#39;microphone&#39;</code></li><li><code>&#39;background-sync&#39;</code></li><li><code>&#39;ambient-light-sensor&#39;</code></li><li><code>&#39;accelerometer&#39;</code></li><li><code>&#39;gyroscope&#39;</code></li><li><code>&#39;magnetometer&#39;</code></li><li><code>&#39;accessibility-events&#39;</code></li><li><code>&#39;clipboard-read&#39;</code></li><li><code>&#39;clipboard-write&#39;</code></li><li><code>&#39;payment-handler&#39;</code></li></ul><h3 id="option-browsercontext-grantpermissions-origin" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-grantpermissions-origin" aria-hidden="true">#</a> option: BrowserContext.grantPermissions.origin</h3><ul><li>since: v1.8</li></ul><ul><li><code>origin</code> &lt;[string]&gt;</li></ul>',18),B={href:"https://example.com",target:"_blank",rel:"noopener noreferrer"},j=e('<h2 id="async-method-browsercontext-newcdpsession" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-newcdpsession" aria-hidden="true">#</a> async method: BrowserContext.newCDPSession</h2><ul><li>since: v1.11</li><li>langs: js, python, csharp</li></ul><ul><li>returns: &lt;[CDPSession]&gt;</li></ul><div class="hint-container note"><p class="hint-container-title">注</p><p>CDP sessions are only supported on Chromium-based browsers.</p></div><p>Returns the newly created session.</p><h3 id="param-browsercontext-newcdpsession-page" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-newcdpsession-page" aria-hidden="true">#</a> param: BrowserContext.newCDPSession.page</h3><ul><li>since: v1.11</li></ul><ul><li><code>page</code> &lt;[Page]|[Frame]&gt;</li></ul><p>Target to create new session for. For backwards-compatibility, this parameter is<br> named <code>page</code>, but it can be a <code>Page</code> or <code>Frame</code> type.</p><h2 id="async-method-browsercontext-newpage" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-newpage" aria-hidden="true">#</a> async method: BrowserContext.newPage</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Page]&gt;</li></ul><p>Creates a new page in the browser context.</p><h2 id="method-browsercontext-pages" tabindex="-1"><a class="header-anchor" href="#method-browsercontext-pages" aria-hidden="true">#</a> method: BrowserContext.pages</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Array]&lt;[Page]&gt;&gt;</li></ul><p>Returns all open pages in the context.</p><h2 id="property-browsercontext-request" tabindex="-1"><a class="header-anchor" href="#property-browsercontext-request" aria-hidden="true">#</a> property: BrowserContext.request</h2><ul><li>since: v1.16</li><li>langs: <ul><li>alias-csharp: APIRequest</li></ul></li></ul><ul><li>type: &lt;[APIRequestContext]&gt;</li></ul><p>API testing helper associated with this context. Requests made with this API will use context cookies.</p><h2 id="async-method-browsercontext-route" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-route" aria-hidden="true">#</a> async method: BrowserContext.route</h2><ul><li>since: v1.8</li></ul><p>Routing provides the capability to modify network requests that are made by any page in the browser context. Once route<br> is enabled, every request matching the url pattern will stall unless it&#39;s continued, fulfilled or aborted.</p>',24),P={class:"hint-container note"},A=n("p",{class:"hint-container-title"},"注",-1),R=n("code",null,"method: BrowserContext.route",-1),T={href:"https://github.com/microsoft/playwright/issues/1090",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"option: Browser.newContext.serviceWorkers",-1),F=n("code",null,"'block'",-1),E=e(`<p><strong>Usage</strong></p><p>An example of a naive handler that aborts all image requests:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**/*.{png,jpg,jpeg}&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BrowserContext</span> context <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;**/*.{png,jpg,jpeg}&quot;</span><span class="token punctuation">,</span> route <span class="token operator">-&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Page</span> page <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*.{png,jpg,jpeg}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
page <span class="token operator">=</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*.{png,jpg,jpeg}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewContextAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">RouteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;**/*.{png,jpg,jpeg}&quot;</span><span class="token punctuation">,</span> r <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span><span class="token function">AbortAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://theverge.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">CloseAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>or the same snippet using a regex pattern instead:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\.png$)|(\\.jpg$)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BrowserContext</span> context <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;(\\\\.png$)|(\\\\.jpg$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> route <span class="token operator">-&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Page</span> page <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span>route<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;(\\.png$)|(\\.jpg$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
page <span class="token operator">=</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span>route<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;(\\.png$)|(\\.jpg$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
page <span class="token operator">=</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewContextAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">RouteAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex</span><span class="token punctuation">(</span><span class="token string">&quot;(\\\\.png$)|(\\\\.jpg$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span><span class="token function">AbortAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://theverge.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">CloseAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It is possible to examine the request to decide the route action. For example, mocking all requests that contain some post data, and leaving all other requests as is:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;/api/**&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>route<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">postData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;my-string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    route<span class="token punctuation">.</span><span class="token function">fulfill</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&#39;mocked-data&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span>
    route<span class="token punctuation">.</span><span class="token function">continue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>context<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;/api/**&quot;</span><span class="token punctuation">,</span> route <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>route<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">postData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;my-string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    route<span class="token punctuation">.</span><span class="token function">fulfill</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Route<span class="token punctuation">.</span>FulfillOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span><span class="token string">&quot;mocked-data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span>
    route<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">handle_route</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;my-string&quot;</span> <span class="token keyword">in</span> route<span class="token punctuation">.</span>request<span class="token punctuation">.</span>post_data<span class="token punctuation">)</span>
    route<span class="token punctuation">.</span>fulfill<span class="token punctuation">(</span>body<span class="token operator">=</span><span class="token string">&quot;mocked-data&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">else</span>
    route<span class="token punctuation">.</span>continue_<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;/api/**&quot;</span><span class="token punctuation">,</span> handle_route<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">handle_route</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;my-string&quot;</span> <span class="token keyword">in</span> route<span class="token punctuation">.</span>request<span class="token punctuation">.</span>post_data<span class="token punctuation">)</span>
    route<span class="token punctuation">.</span>fulfill<span class="token punctuation">(</span>body<span class="token operator">=</span><span class="token string">&quot;mocked-data&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">else</span>
    route<span class="token punctuation">.</span>continue_<span class="token punctuation">(</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;/api/**&quot;</span><span class="token punctuation">,</span> handle_route<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RouteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;/api/**&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> r <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>PostData<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;my-string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">await</span> r<span class="token punctuation">.</span><span class="token function">FulfillAsync</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">body</span><span class="token punctuation">:</span> <span class="token string">&quot;mocked-data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token keyword">await</span> r<span class="token punctuation">.</span><span class="token function">ContinueAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Page routes (set up with [<code>method: Page.route</code>]) take precedence over browser context routes when request matches both<br> handlers.</p><p>To remove a route with its handler you can use [<code>method: BrowserContext.unroute</code>].</p><div class="hint-container note"><p class="hint-container-title">注</p><p>Enabling routing disables http cache.</p></div><h3 id="param-browsercontext-route-url" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-route-url" aria-hidden="true">#</a> param: BrowserContext.route.url</h3><ul><li>since: v1.8</li></ul><ul><li><code>url</code> &lt;[string]|[RegExp]|[function]([URL]):[boolean]&gt;</li></ul>`,25),L=n("br",null,null,-1),O=n("code",null,"option: baseURL",-1),I=n("br",null,null,-1),H={href:"https://developer.mozilla.org/en-US/docs/Web/API/URL/URL",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,"new URL()",-1),W=e('<h3 id="param-browsercontext-route-handler" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-route-handler" aria-hidden="true">#</a> param: BrowserContext.route.handler</h3><ul><li>since: v1.8</li><li>langs: js, python</li></ul><ul><li><code>handler</code> &lt;[function]([Route], [Request]): [Promise&lt; any &gt;|any]&gt;</li></ul><p>handler function to route the request.</p><h3 id="param-browsercontext-route-handler-1" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-route-handler-1" aria-hidden="true">#</a> param: BrowserContext.route.handler</h3><ul><li>since: v1.8</li><li>langs: csharp, java</li></ul><ul><li><code>handler</code> &lt;[function]([Route])&gt;</li></ul><p>handler function to route the request.</p><h3 id="option-browsercontext-route-times" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-route-times" aria-hidden="true">#</a> option: BrowserContext.route.times</h3><ul><li>since: v1.15</li></ul><ul><li><code>times</code> &lt;[int]&gt;</li></ul><p>How often a route should be used. By default it will be used every time.</p><h2 id="async-method-browsercontext-routefromhar" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-routefromhar" aria-hidden="true">#</a> async method: BrowserContext.routeFromHAR</h2><ul><li>since: v1.23</li></ul>',14),N={href:"https://github.com/microsoft/playwright/issues/1090",target:"_blank",rel:"noopener noreferrer"},D=n("code",null,"option: Browser.newContext.serviceWorkers",-1),G=n("code",null,"'block'",-1),M=n("h3",{id:"param-browsercontext-routefromhar-har",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#param-browsercontext-routefromhar-har","aria-hidden":"true"},"#"),s(" param: BrowserContext.routeFromHAR.har")],-1),$=n("ul",null,[n("li",null,"since: v1.23")],-1),Y=n("ul",null,[n("li",null,[n("code",null,"har"),s(" <[path]>")])],-1),J={href:"http://www.softwareishard.com/blog/har-12-spec",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"path",-1),z=e(`<h3 id="option-browsercontext-routefromhar-notfound" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-routefromhar-notfound" aria-hidden="true">#</a> option: BrowserContext.routeFromHAR.notFound</h3><ul><li>since: v1.23</li></ul><ul><li><code>notFound</code> ?&lt;[HarNotFound]&lt;&quot;abort&quot;|&quot;fallback&quot;&gt;&gt;</li></ul><ul><li>If set to &#39;abort&#39; any request not found in the HAR file will be aborted.</li><li>If set to &#39;fallback&#39; falls through to the next route handler in the handler chain.</li></ul><p>Defaults to abort.</p><h3 id="option-browsercontext-routefromhar-update" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-routefromhar-update" aria-hidden="true">#</a> option: BrowserContext.routeFromHAR.update</h3><ul><li>since: v1.23</li></ul><ul><li><code>update</code> ?&lt; boolean &gt;</li></ul><p>If specified, updates the given HAR with the actual network information instead of serving from file. The file is written to disk when [<code>method: BrowserContext.close</code>] is called.</p><h3 id="option-browsercontext-routefromhar-url" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-routefromhar-url" aria-hidden="true">#</a> option: BrowserContext.routeFromHAR.url</h3><ul><li>since: v1.23</li></ul><ul><li><code>url</code> &lt;[string]|[RegExp]&gt;</li></ul><p>A glob pattern, regular expression or predicate to match the request URL. Only requests with URL matching the pattern will be served from the HAR file. If not specified, all requests are served from the HAR file.</p><h2 id="method-browsercontext-serviceworkers" tabindex="-1"><a class="header-anchor" href="#method-browsercontext-serviceworkers" aria-hidden="true">#</a> method: BrowserContext.serviceWorkers</h2><ul><li>since: v1.11</li><li>langs: js, python</li></ul><ul><li>returns: &lt;[Array]&lt;[Worker]&gt;&gt;</li></ul><div class="hint-container note"><p class="hint-container-title">注</p><p>Service workers are only supported on Chromium-based browsers.</p></div><p>All existing service workers in the context.</p><h2 id="method-browsercontext-setdefaultnavigationtimeout" tabindex="-1"><a class="header-anchor" href="#method-browsercontext-setdefaultnavigationtimeout" aria-hidden="true">#</a> method: BrowserContext.setDefaultNavigationTimeout</h2><ul><li>since: v1.8</li></ul><p>This setting will change the default maximum navigation time for the following methods and related shortcuts:</p><ul><li>[<code>method: Page.goBack</code>]</li><li>[<code>method: Page.goForward</code>]</li><li>[<code>method: Page.goto</code>]</li><li>[<code>method: Page.reload</code>]</li><li>[<code>method: Page.setContent</code>]</li><li>[<code>method: Page.waitForNavigation</code>]</li></ul><div class="hint-container note"><p class="hint-container-title">注</p><p>[<code>method: Page.setDefaultNavigationTimeout</code>] and [<code>method: Page.setDefaultTimeout</code>] take priority over<br> [<code>method: BrowserContext.setDefaultNavigationTimeout</code>].</p></div><h3 id="param-browsercontext-setdefaultnavigationtimeout-timeout" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-setdefaultnavigationtimeout-timeout" aria-hidden="true">#</a> param: BrowserContext.setDefaultNavigationTimeout.timeout</h3><ul><li>since: v1.8</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>Maximum navigation time in milliseconds</p><h2 id="method-browsercontext-setdefaulttimeout" tabindex="-1"><a class="header-anchor" href="#method-browsercontext-setdefaulttimeout" aria-hidden="true">#</a> method: BrowserContext.setDefaultTimeout</h2><ul><li>since: v1.8</li></ul><p>This setting will change the default maximum time for all the methods accepting [<code>param: timeout</code>] option.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>[<code>method: Page.setDefaultNavigationTimeout</code>], [<code>method: Page.setDefaultTimeout</code>] and<br> [<code>method: BrowserContext.setDefaultNavigationTimeout</code>] take priority over [<code>method: BrowserContext.setDefaultTimeout</code>].</p></div><h3 id="param-browsercontext-setdefaulttimeout-timeout" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-setdefaulttimeout-timeout" aria-hidden="true">#</a> param: BrowserContext.setDefaultTimeout.timeout</h3><ul><li>since: v1.8</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>Maximum time in milliseconds</p><h2 id="async-method-browsercontext-setextrahttpheaders" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-setextrahttpheaders" aria-hidden="true">#</a> async method: BrowserContext.setExtraHTTPHeaders</h2><ul><li>since: v1.8</li></ul><p>The extra HTTP headers will be sent with every request initiated by any page in the context. These headers are merged<br> with page-specific extra HTTP headers set with [<code>method: Page.setExtraHTTPHeaders</code>]. If page overrides a particular<br> header, page-specific header value will be used instead of the browser context header value.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>[<code>method: BrowserContext.setExtraHTTPHeaders</code>] does not guarantee the order of headers in the outgoing requests.</p></div><h3 id="param-browsercontext-setextrahttpheaders-headers" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-setextrahttpheaders-headers" aria-hidden="true">#</a> param: BrowserContext.setExtraHTTPHeaders.headers</h3><ul><li>since: v1.8</li></ul><ul><li><code>headers</code> &lt;[Object]&lt;[string], [string]&gt;&gt;</li></ul><p>An object containing additional HTTP headers to be sent with every request. All header values must be strings.</p><h2 id="async-method-browsercontext-setgeolocation" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-setgeolocation" aria-hidden="true">#</a> async method: BrowserContext.setGeolocation</h2><ul><li>since: v1.8</li></ul><p>Sets the context&#39;s geolocation. Passing <code>null</code> or <code>undefined</code> emulates position unavailable.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> browserContext<span class="token punctuation">.</span><span class="token function">setGeolocation</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">latitude</span><span class="token operator">:</span> <span class="token number">59.95</span><span class="token punctuation">,</span> <span class="token literal-property property">longitude</span><span class="token operator">:</span> <span class="token number">30.31667</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>browserContext<span class="token punctuation">.</span><span class="token function">setGeolocation</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Geolocation</span><span class="token punctuation">(</span><span class="token number">59.95</span><span class="token punctuation">,</span> <span class="token number">30.31667</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> browser_context<span class="token punctuation">.</span>set_geolocation<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;latitude&quot;</span><span class="token punctuation">:</span> <span class="token number">59.95</span><span class="token punctuation">,</span> <span class="token string">&quot;longitude&quot;</span><span class="token punctuation">:</span> <span class="token number">30.31667</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>browser_context<span class="token punctuation">.</span>set_geolocation<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;latitude&quot;</span><span class="token punctuation">:</span> <span class="token number">59.95</span><span class="token punctuation">,</span> <span class="token string">&quot;longitude&quot;</span><span class="token punctuation">:</span> <span class="token number">30.31667</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">SetGeolocationAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Geolocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Latitude <span class="token operator">=</span> <span class="token number">59.95f</span><span class="token punctuation">,</span>
    Longitude <span class="token operator">=</span> <span class="token number">30.31667f</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">注</p><p>Consider using [<code>method: BrowserContext.grantPermissions</code>] to grant permissions for the browser context pages to read<br> its geolocation.</p></div><h3 id="param-browsercontext-setgeolocation-geolocation" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-setgeolocation-geolocation" aria-hidden="true">#</a> param: BrowserContext.setGeolocation.geolocation</h3><ul><li>since: v1.8</li></ul><ul><li><code>geolocation</code> &lt;[null]|[Object]&gt; <ul><li><code>latitude</code> &lt;[float]&gt; Latitude between -90 and 90.</li><li><code>longitude</code> &lt;[float]&gt; Longitude between -180 and 180.</li><li><code>accuracy</code> ?&lt;[float]&gt; Non-negative accuracy value. Defaults to <code>0</code>.</li></ul></li></ul><h2 id="async-method-browsercontext-sethttpcredentials" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-sethttpcredentials" aria-hidden="true">#</a> async method: BrowserContext.setHTTPCredentials</h2><ul><li>since: v1.8</li><li>langs: js</li><li>deprecated: Browsers may cache credentials after successful authentication. Create a new browser context instead.</li></ul><h3 id="param-browsercontext-sethttpcredentials-httpcredentials" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-sethttpcredentials-httpcredentials" aria-hidden="true">#</a> param: BrowserContext.setHTTPCredentials.httpCredentials</h3><ul><li>since: v1.8</li></ul><ul><li><code>httpCredentials</code> &lt;[null]|[Object]&gt; <ul><li><code>username</code> &lt;[string]&gt;</li><li><code>password</code> &lt;[string]&gt;</li></ul></li></ul><h2 id="async-method-browsercontext-setoffline" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-setoffline" aria-hidden="true">#</a> async method: BrowserContext.setOffline</h2><ul><li>since: v1.8</li></ul><h3 id="param-browsercontext-setoffline-offline" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-setoffline-offline" aria-hidden="true">#</a> param: BrowserContext.setOffline.offline</h3><ul><li>since: v1.8</li></ul><ul><li><code>offline</code> &lt;[boolean]&gt;</li></ul><p>Whether to emulate network being offline for the browser context.</p><h2 id="async-method-browsercontext-storagestate" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-storagestate" aria-hidden="true">#</a> async method: BrowserContext.storageState</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Object]&gt; <ul><li><code>cookies</code> &lt;[Array]&lt;[Object]&gt;&gt; <ul><li><code>name</code> &lt;[string]&gt;</li><li><code>value</code> &lt;[string]&gt;</li><li><code>domain</code> &lt;[string]&gt;</li><li><code>path</code> &lt;[string]&gt;</li><li><code>expires</code> &lt;[float]&gt; Unix time in seconds.</li><li><code>httpOnly</code> &lt;[boolean]&gt;</li><li><code>secure</code> &lt;[boolean]&gt;</li><li><code>sameSite</code> &lt;[SameSiteAttribute]&lt;&quot;Strict&quot;|&quot;Lax&quot;|&quot;None&quot;&gt;&gt;</li></ul></li><li><code>origins</code> &lt;[Array]&lt;[Object]&gt;&gt; <ul><li><code>origin</code> &lt;[string]&gt;</li><li><code>localStorage</code> &lt;[Array]&lt;[Object]&gt;&gt; <ul><li><code>name</code> &lt;[string]&gt;</li><li><code>value</code> &lt;[string]&gt;</li></ul></li></ul></li></ul></li></ul><p>Returns storage state for this browser context, contains current cookies and local storage snapshot.</p><h2 id="async-method-browsercontext-storagestate-1" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-storagestate-1" aria-hidden="true">#</a> async method: BrowserContext.storageState</h2><ul><li>since: v1.8</li><li>langs: csharp, java</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><h3 id="option-browsercontext-storagestate-path-storagestate-option-path" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-storagestate-path-storagestate-option-path" aria-hidden="true">#</a> option: BrowserContext.storageState.path = %%-storagestate-option-path-%%</h3><ul><li>since: v1.8</li></ul><h2 id="property-browsercontext-tracing" tabindex="-1"><a class="header-anchor" href="#property-browsercontext-tracing" aria-hidden="true">#</a> property: BrowserContext.tracing</h2><ul><li>since: v1.12</li></ul><ul><li>type: &lt;[Tracing]&gt;</li></ul><h2 id="async-method-browsercontext-unroute" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-unroute" aria-hidden="true">#</a> async method: BrowserContext.unroute</h2><ul><li>since: v1.8</li></ul><p>Removes a route created with [<code>method: BrowserContext.route</code>]. When [<code>param: handler</code>] is not specified, removes all<br> routes for the [<code>param: url</code>].</p><h3 id="param-browsercontext-unroute-url" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-unroute-url" aria-hidden="true">#</a> param: BrowserContext.unroute.url</h3><ul><li>since: v1.8</li></ul><ul><li><code>url</code> &lt;[string]|[RegExp]|[function]([URL]):[boolean]&gt;</li></ul><p>A glob pattern, regex pattern or predicate receiving [URL] used to register a routing with<br> [<code>method: BrowserContext.route</code>].</p><h3 id="param-browsercontext-unroute-handler" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-unroute-handler" aria-hidden="true">#</a> param: BrowserContext.unroute.handler</h3><ul><li>since: v1.8</li><li>langs: js, python</li></ul><ul><li><code>handler</code> ?&lt;[function]([Route], [Request]): [Promise&lt; any &gt;|any]&gt;</li></ul><p>Optional handler function used to register a routing with [<code>method: BrowserContext.route</code>].</p><h3 id="param-browsercontext-unroute-handler-1" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-unroute-handler-1" aria-hidden="true">#</a> param: BrowserContext.unroute.handler</h3><ul><li>since: v1.8</li><li>langs: csharp, java</li></ul><ul><li><code>handler</code> ?&lt;[function]([Route])&gt;</li></ul><p>Optional handler function used to register a routing with [<code>method: BrowserContext.route</code>].</p><h2 id="async-method-browsercontext-waitforevent" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-waitforevent" aria-hidden="true">#</a> async method: BrowserContext.waitForEvent</h2><ul><li>since: v1.8</li><li>langs: js, python <ul><li>alias-python: expect_event</li></ul></li></ul><ul><li>returns: &lt;[any]&gt;</li></ul><p>Waits for event to fire and passes its value into the predicate function. Returns when the predicate returns truthy<br> value. Will throw an error if the context closes before the event is fired. Returns the event data value.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pagePromise <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">waitForEvent</span><span class="token punctuation">(</span><span class="token string">&#39;page&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> pagePromise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Page</span> newPage <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">waitForPage</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token class-name">AriaRole</span><span class="token punctuation">.</span><span class="token constant">BUTTON</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> context<span class="token punctuation">.</span>expect_event<span class="token punctuation">(</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> event_info<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
page <span class="token operator">=</span> <span class="token keyword">await</span> event_info<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> context<span class="token punctuation">.</span>expect_event<span class="token punctuation">(</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> event_info<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
page <span class="token operator">=</span> event_info<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">RunAndWaitForPageAsync</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByRole</span><span class="token punctuation">(</span>AriaRole<span class="token punctuation">.</span>Button<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-method-browsercontext-waitforevent-1" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-waitforevent-1" aria-hidden="true">#</a> async method: BrowserContext.waitForEvent</h2><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&gt;</li></ul><h3 id="param-browsercontext-waitforevent-event" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-waitforevent-event" aria-hidden="true">#</a> param: BrowserContext.waitForEvent.event</h3><ul><li>since: v1.8</li></ul><ul><li><code>event</code> &lt;[string]&gt;</li></ul><p>Event name, same one would pass into <code>browserContext.on(event)</code>.</p><h3 id="param-browsercontext-waitforevent-optionsorpredicate" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-waitforevent-optionsorpredicate" aria-hidden="true">#</a> param: BrowserContext.waitForEvent.optionsOrPredicate</h3><ul><li>since: v1.8</li><li>langs: js</li></ul><ul><li><code>optionsOrPredicate</code> ?&lt;[function]|[Object]&gt; <ul><li><code>predicate</code> &lt;[function]&gt; receives the event data and resolves to truthy value when the waiting should resolve.</li><li><code>timeout</code> ?&lt;[float]&gt; maximum time to wait for in milliseconds. Defaults to <code>30000</code> (30 seconds). Pass <code>0</code> to<br> disable timeout. The default value can be changed by using the [<code>method: BrowserContext.setDefaultTimeout</code>].</li></ul></li></ul><p>Either a predicate that receives an event or an options object. Optional.</p><h3 id="option-browsercontext-waitforevent-predicate-wait-for-event-predicate" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-waitforevent-predicate-wait-for-event-predicate" aria-hidden="true">#</a> option: BrowserContext.waitForEvent.predicate = %%-wait-for-event-predicate-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-browsercontext-waitforevent-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-waitforevent-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: BrowserContext.waitForEvent.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-browsercontext-waitforpage" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-waitforpage" aria-hidden="true">#</a> async method: BrowserContext.waitForPage</h2><ul><li>since: v1.9</li><li>langs: java, python, csharp <ul><li>alias-python: expect_page</li><li>alias-csharp: RunAndWaitForPage</li></ul></li></ul><ul><li>returns: &lt;[Page]&gt;</li></ul><p>Performs action and waits for a new [Page] to be created in the context. If predicate is provided, it passes<br> [Page] value into the <code>predicate</code> function and waits for <code>predicate(event)</code> to return a truthy value.<br> Will throw an error if the context closes before new [Page] is created.</p><h2 id="async-method-browsercontext-waitforpage-1" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-waitforpage-1" aria-hidden="true">#</a> async method: BrowserContext.waitForPage</h2><ul><li>since: v1.9</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&lt;[Page]&gt;&gt;</li></ul><h3 id="param-browsercontext-waitforpage-action-csharp-wait-for-event-action" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-waitforpage-action-csharp-wait-for-event-action" aria-hidden="true">#</a> param: BrowserContext.waitForPage.action = %%-csharp-wait-for-event-action-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-browsercontext-waitforpage-predicate" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-waitforpage-predicate" aria-hidden="true">#</a> option: BrowserContext.waitForPage.predicate</h3><ul><li>since: v1.9</li><li>langs: csharp, java, python</li></ul><ul><li><code>predicate</code> &lt;[function]([Page]):[boolean]&gt;</li></ul><p>Receives the [Page] object and resolves to truthy value when the waiting should resolve.</p><h3 id="option-browsercontext-waitforpage-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-waitforpage-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: BrowserContext.waitForPage.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-browsercontext-waitforpage-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-waitforpage-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: BrowserContext.waitForPage.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-browsercontext-waitforevent2" tabindex="-1"><a class="header-anchor" href="#async-method-browsercontext-waitforevent2" aria-hidden="true">#</a> async method: BrowserContext.waitForEvent2</h2><ul><li>since: v1.8</li><li>langs: python <ul><li>alias-python: wait_for_event</li></ul></li></ul><ul><li>returns: &lt;[any]&gt;</li></ul><div class="hint-container note"><p class="hint-container-title">注</p><p>In most cases, you should use [<code>method: BrowserContext.waitForEvent</code>].</p></div><p>Waits for given <code>event</code> to fire. If predicate is provided, it passes<br> event&#39;s value into the <code>predicate</code> function and waits for <code>predicate(event)</code> to return a truthy value.<br> Will throw an error if the browser context is closed before the <code>event</code> is fired.</p><h3 id="param-browsercontext-waitforevent2-event-wait-for-event-event" tabindex="-1"><a class="header-anchor" href="#param-browsercontext-waitforevent2-event-wait-for-event-event" aria-hidden="true">#</a> param: BrowserContext.waitForEvent2.event = %%-wait-for-event-event-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-browsercontext-waitforevent2-predicate-wait-for-event-predicate" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-waitforevent2-predicate-wait-for-event-predicate" aria-hidden="true">#</a> option: BrowserContext.waitForEvent2.predicate = %%-wait-for-event-predicate-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-browsercontext-waitforevent2-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-browsercontext-waitforevent2-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: BrowserContext.waitForEvent2.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.8</li></ul>`,147);function K(Q,X){const t=o("ExternalLinkIcon"),p=o("RouterLink");return i(),l("div",null,[d,n("p",null,[s("The earliest moment that page is available is when it has navigated to the initial url. For example, when opening a"),k,s(" popup with "),v,s(', this event will fire when the network request to "'),n("a",m,[s("http://example.com"),a(t)]),s('" is'),g,s(" done and its response has started loading in the popup.")]),h,n("h3",b,[w,s(" param: "),n("a",y,[s("BrowserContext.exposeBinding.name"),a(t)])]),x,n("h3",f,[q,s(" param: "),n("a",C,[s("BrowserContext.exposeFunction.name"),a(t)])]),_,n("p",null,[s('The [origin] to grant permissions to, e.g. "'),n("a",B,[s("https://example.com"),a(t)]),s('".')]),j,n("div",P,[A,n("p",null,[s("["),R,s("] will not intercept requests intercepted by Service Worker. See "),n("a",T,[s("this"),a(t)]),s(" issue. We recommend disabling Service Workers when using request interception by setting ["),S,s("] to "),F,s(".")])]),E,n("p",null,[s("A glob pattern, regex pattern or predicate receiving [URL] to match while routing."),L,s(" When a ["),O,s("] via the context options was provided and the passed URL is a path,"),I,s(" it gets merged via the "),n("a",H,[U,a(t)]),s(" constructor.")]),W,n("p",null,[s("If specified the network requests that are made in the context will be served from the HAR file. Read more about "),a(p,{to:"/book/playwright/network.html#replaying-from-har"},{default:u(()=>[s("Replaying from HAR")]),_:1}),s(".")]),n("p",null,[s("Playwright will not serve requests intercepted by Service Worker from the HAR file. See "),n("a",N,[s("this"),a(t)]),s(" issue. We recommend disabling Service Workers when using request interception by setting ["),D,s("] to "),G,s(".")]),M,$,Y,n("p",null,[s("Path to a "),n("a",J,[s("HAR"),a(t)]),s(" file with prerecorded network data. If "),V,s(" is a relative path, then it is resolved relative to the current working directory.")]),z])}const sn=c(r,[["render",K],["__file","class-browsercontext.html.vue"]]);export{sn as default};
