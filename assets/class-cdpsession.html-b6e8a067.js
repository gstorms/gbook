import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as t,f as e}from"./app-3f278ba4.js";const l={},u=e('<h1 id="class-cdpsession" tabindex="-1"><a class="header-anchor" href="#class-cdpsession" aria-hidden="true">#</a> class: CDPSession</h1><ul><li>since: v1.8</li><li>langs: js, python, csharp</li><li>extends: [EventEmitter]</li></ul><p>The <code>CDPSession</code> instances are used to talk raw Chrome Devtools Protocol:</p><ul><li>protocol methods can be called with <code>session.send</code> method.</li><li>protocol events can be subscribed to with <code>session.on</code> method.</li></ul><p>Useful links:</p>',5),r=n("br",null,null,-1),k={href:"https://chromedevtools.github.io/devtools-protocol/",target:"_blank",rel:"noopener noreferrer"},d=n("br",null,null,-1),m={href:"https://github.com/aslushnikov/getting-started-with-cdp/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"},h=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newCDPSession</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Animation.enable&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;Animation.animationCreated&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Animation created!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Animation.getPlaybackRate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;playback rate is &#39;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span>playbackRate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Animation.setPlaybackRate&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">playbackRate</span><span class="token operator">:</span> response<span class="token punctuation">.</span>playbackRate <span class="token operator">/</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>client <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>context<span class="token punctuation">.</span>new_cdp_session<span class="token punctuation">(</span>page<span class="token punctuation">)</span>
<span class="token keyword">await</span> client<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">&quot;Animation.enable&quot;</span><span class="token punctuation">)</span>
client<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;Animation.animationCreated&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;animation created!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">&quot;Animation.getPlaybackRate&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;playback rate is &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">&quot;playbackRate&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> client<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">&quot;Animation.setPlaybackRate&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    playbackRate<span class="token punctuation">:</span> response<span class="token punctuation">[</span><span class="token string">&quot;playbackRate&quot;</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>client <span class="token operator">=</span> page<span class="token punctuation">.</span>context<span class="token punctuation">.</span>new_cdp_session<span class="token punctuation">(</span>page<span class="token punctuation">)</span>
client<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">&quot;Animation.enable&quot;</span><span class="token punctuation">)</span>
client<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;Animation.animationCreated&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;animation created!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> client<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">&quot;Animation.getPlaybackRate&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;playback rate is &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>response<span class="token punctuation">[</span><span class="token string">&quot;playbackRate&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
client<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">&quot;Animation.setPlaybackRate&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    playbackRate<span class="token punctuation">:</span> response<span class="token punctuation">[</span><span class="token string">&quot;playbackRate&quot;</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">await</span> Page<span class="token punctuation">.</span>Context<span class="token punctuation">.</span><span class="token function">NewCDPSessionAsync</span><span class="token punctuation">(</span>Page<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">SendAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Runtime.enable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
client<span class="token punctuation">.</span><span class="token function">Event</span><span class="token punctuation">(</span><span class="token string">&quot;Animation.animationCreated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>OnEvent <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Animation created!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">SendAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Animation.getPlaybackRate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> playbackRate <span class="token operator">=</span> response<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;playbackRate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;playback rate is &quot;</span> <span class="token operator">+</span> playbackRate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">SendAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Animation.setPlaybackRate&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">{</span> <span class="token string">&quot;playbackRate&quot;</span><span class="token punctuation">,</span> playbackRate <span class="token operator">/</span> <span class="token number">2</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-method-cdpsession-detach" tabindex="-1"><a class="header-anchor" href="#async-method-cdpsession-detach" aria-hidden="true">#</a> async method: CDPSession.detach</h2><ul><li>since: v1.8</li></ul><p>Detaches the CDPSession from the target. Once detached, the CDPSession object won&#39;t emit any events and can&#39;t be used to<br> send messages.</p><h2 id="async-method-cdpsession-send" tabindex="-1"><a class="header-anchor" href="#async-method-cdpsession-send" aria-hidden="true">#</a> async method: CDPSession.send</h2><ul><li>since: v1.8</li><li>langs: js, python, csharp</li></ul><ul><li>returns: &lt;[Object]&gt;</li></ul><h2 id="async-method-cdpsession-send-1" tabindex="-1"><a class="header-anchor" href="#async-method-cdpsession-send-1" aria-hidden="true">#</a> async method: CDPSession.send</h2><ul><li>since: v1.30</li><li>langs: csharp</li></ul><ul><li>returns: &lt;[JsonElement?]&gt;</li></ul><h3 id="param-cdpsession-send-method" tabindex="-1"><a class="header-anchor" href="#param-cdpsession-send-method" aria-hidden="true">#</a> param: CDPSession.send.method</h3><ul><li>since: v1.8</li><li>langs: js, python, csharp</li></ul><ul><li><code>method</code> &lt;[string]&gt;</li></ul><p>Protocol method name.</p><h3 id="param-cdpsession-send-params" tabindex="-1"><a class="header-anchor" href="#param-cdpsession-send-params" aria-hidden="true">#</a> param: CDPSession.send.params</h3><ul><li>since: v1.8</li><li>langs: js, python</li></ul><ul><li><code>params</code> ?&lt;[Object]&gt;</li></ul><p>Optional method parameters.</p><h3 id="param-cdpsession-send-params-1" tabindex="-1"><a class="header-anchor" href="#param-cdpsession-send-params-1" aria-hidden="true">#</a> param: CDPSession.send.params</h3><ul><li>since: v1.30</li><li>langs: csharp <ul><li>alias-csharp: args</li></ul></li></ul><ul><li><code>params</code> ?&lt;[Map&lt;string, Object&gt;]&gt;</li></ul><p>Optional method parameters.</p><h2 id="method-cdpsession-event" tabindex="-1"><a class="header-anchor" href="#method-cdpsession-event" aria-hidden="true">#</a> method: CDPSession.event</h2><ul><li>since: v.1.30</li><li>langs: csharp</li></ul><ul><li>returns: &lt;[CDPSessionEvent]&gt;</li></ul><p>Returns an event emitter for the given CDP event name.</p><h3 id="param-cdpsession-event-eventname" tabindex="-1"><a class="header-anchor" href="#param-cdpsession-event-eventname" aria-hidden="true">#</a> param: CDPSession.event.eventName</h3><ul><li>since: v1.30</li><li>langs: csharp</li></ul><ul><li><code>eventName</code> &lt;[string]&gt;</li></ul><p>CDP event name.</p>`,33);function v(b,g){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("ul",null,[n("li",null,[s("Documentation on DevTools Protocol can be found here:"),r,n("a",k,[s("DevTools Protocol Viewer"),t(a)]),s(".")]),n("li",null,[s("Getting Started with DevTools Protocol:"),d,n("a",m,[s("https://github.com/aslushnikov/getting-started-with-cdp/blob/master/README.md"),t(a)])])]),h])}const q=p(l,[["render",v],["__file","class-cdpsession.html.vue"]]);export{q as default};
