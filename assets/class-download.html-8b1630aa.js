import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as l,c as p,a as n,b as a,d as e,f as c}from"./app-3f278ba4.js";const i={},d=c(`<h1 id="class-download" tabindex="-1"><a class="header-anchor" href="#class-download" aria-hidden="true">#</a> class: Download</h1><ul><li>since: v1.8</li></ul><p>[Download] objects are dispatched by page via the [<code>event: Page.download</code>] event.</p><p>All the downloaded files belonging to the browser context are deleted when the<br> browser context is closed.</p><p>Download event is emitted once the download starts. Download path becomes available once download completes:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Start waiting for download before clicking. Note no await.</span>
<span class="token keyword">const</span> downloadPromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForEvent</span><span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Download file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> download <span class="token operator">=</span> <span class="token keyword">await</span> downloadPromise<span class="token punctuation">;</span>

<span class="token comment">// Wait for the download process to complete.</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> download<span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// wait for download to start</span>
<span class="token class-name">Download</span> download <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForDownload</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Download file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// wait for download to complete</span>
<span class="token class-name">Path</span> path <span class="token operator">=</span> download<span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_download<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> download_info<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Download file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
download <span class="token operator">=</span> <span class="token keyword">await</span> download_info<span class="token punctuation">.</span>value
<span class="token comment"># waits for download to complete</span>
path <span class="token operator">=</span> <span class="token keyword">await</span> download<span class="token punctuation">.</span>path<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_download<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> download_info<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Download file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
download <span class="token operator">=</span> download_info<span class="token punctuation">.</span>value
<span class="token comment"># wait for download to complete</span>
path <span class="token operator">=</span> download<span class="token punctuation">.</span>path<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> download <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RunAndWaitForDownloadAsync</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;Download file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> download<span class="token punctuation">.</span><span class="token function">PathAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-method-download-cancel" tabindex="-1"><a class="header-anchor" href="#async-method-download-cancel" aria-hidden="true">#</a> async method: Download.cancel</h2><ul><li>since: v1.13</li></ul><p>Cancels a download. Will not fail if the download is already finished or canceled.<br> Upon successful cancellations, <code>download.failure()</code> would resolve to <code>&#39;canceled&#39;</code>.</p><h2 id="async-method-download-createreadstream" tabindex="-1"><a class="header-anchor" href="#async-method-download-createreadstream" aria-hidden="true">#</a> async method: Download.createReadStream</h2><ul><li>since: v1.8</li><li>langs: java, js, csharp</li></ul><ul><li>returns: &lt;[null]|[Readable]&gt;</li></ul><p>Returns readable stream for current download or <code>null</code> if download failed.</p><h2 id="async-method-download-delete" tabindex="-1"><a class="header-anchor" href="#async-method-download-delete" aria-hidden="true">#</a> async method: Download.delete</h2><ul><li>since: v1.8</li></ul><p>Deletes the downloaded file. Will wait for the download to finish if necessary.</p><h2 id="async-method-download-failure" tabindex="-1"><a class="header-anchor" href="#async-method-download-failure" aria-hidden="true">#</a> async method: Download.failure</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[string]&gt;</li></ul><p>Returns download error if any. Will wait for the download to finish if necessary.</p><h2 id="method-download-page" tabindex="-1"><a class="header-anchor" href="#method-download-page" aria-hidden="true">#</a> method: Download.page</h2><ul><li>since: v1.12</li></ul><ul><li>returns: &lt;[Page]&gt;</li></ul><p>Get the page that the download belongs to.</p><h2 id="async-method-download-path" tabindex="-1"><a class="header-anchor" href="#async-method-download-path" aria-hidden="true">#</a> async method: Download.path</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[path]&gt;</li></ul><p>Returns path to the downloaded file in case of successful download. The method will<br> wait for the download to finish if necessary. The method throws when connected remotely.</p><p>Note that the download&#39;s file name is a random GUID, use [<code>method: Download.suggestedFilename</code>]<br> to get suggested file name.</p><h2 id="async-method-download-saveas" tabindex="-1"><a class="header-anchor" href="#async-method-download-saveas" aria-hidden="true">#</a> async method: Download.saveAs</h2><ul><li>since: v1.8</li></ul><p>Copy the download to a user-specified path. It is safe to call this method while the download<br> is still in progress. Will wait for the download to finish if necessary.</p><h3 id="param-download-saveas-path" tabindex="-1"><a class="header-anchor" href="#param-download-saveas-path" aria-hidden="true">#</a> param: Download.saveAs.path</h3><ul><li>since: v1.8</li></ul><ul><li><code>path</code> &lt;[path]&gt;</li></ul><p>Path where the download should be copied.</p><h2 id="method-download-suggestedfilename" tabindex="-1"><a class="header-anchor" href="#method-download-suggestedfilename" aria-hidden="true">#</a> method: Download.suggestedFilename</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul>`,43),u=n("br",null,null,-1),r={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"Content-Disposition",-1),k=n("br",null,null,-1),w=n("code",null,"download",-1),m={href:"https://html.spec.whatwg.org/#downloading-resources",target:"_blank",rel:"noopener noreferrer"},v=n("br",null,null,-1),f=n("h2",{id:"method-download-url",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#method-download-url","aria-hidden":"true"},"#"),a(" method: Download.url")],-1),g=n("ul",null,[n("li",null,"since: v1.8")],-1),b=n("ul",null,[n("li",null,"returns: <[string]>")],-1),y=n("p",null,"Returns downloaded url.",-1);function _(x,D){const s=t("ExternalLinkIcon");return l(),p("div",null,[d,n("p",null,[a("Returns suggested filename for this download. It is typically computed by the browser from the"),u,n("a",r,[h,e(s)]),a(" response header"),k,a(" or the "),w,a(" attribute. See the spec on "),n("a",m,[a("whatwg"),e(s)]),a(". Different"),v,a(" browsers can use different logic for computing it.")]),f,g,b,y])}const P=o(i,[["render",_],["__file","class-download.html.vue"]]);export{P as default};
