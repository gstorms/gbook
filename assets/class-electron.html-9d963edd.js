import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as c,c as i,a,b as n,d as l,f as e}from"./app-207e7d61.js";const p={},r=e(`<h1 id="class-electron" tabindex="-1"><a class="header-anchor" href="#class-electron" aria-hidden="true">#</a> class: Electron</h1><ul><li>since: v1.9</li><li>langs: js</li></ul><p>Playwright has <strong>experimental</strong> support for Electron automation. You can access electron namespace via:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> _electron <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>An example of the Electron automation script would be:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">_electron</span><span class="token operator">:</span> electron <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Launch Electron app.</span>
  <span class="token keyword">const</span> electronApp <span class="token operator">=</span> <span class="token keyword">await</span> electron<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;main.js&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Evaluation expression in the Electron context.</span>
  <span class="token keyword">const</span> appPath <span class="token operator">=</span> <span class="token keyword">await</span> electronApp<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> app <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// This runs in the main Electron process, parameter here is always</span>
    <span class="token comment">// the result of the require(&#39;electron&#39;) in the main app script.</span>
    <span class="token keyword">return</span> app<span class="token punctuation">.</span><span class="token function">getAppPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>appPath<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Get the first window that the app opens, wait if necessary.</span>
  <span class="token keyword">const</span> window <span class="token operator">=</span> <span class="token keyword">await</span> electronApp<span class="token punctuation">.</span><span class="token function">firstWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Print the title.</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> window<span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Capture a screenshot.</span>
  <span class="token keyword">await</span> window<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;intro.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Direct Electron console to Node terminal.</span>
  window<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;console&#39;</span><span class="token punctuation">,</span> console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Click button.</span>
  <span class="token keyword">await</span> window<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&#39;text=Click me&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Exit app.</span>
  <span class="token keyword">await</span> electronApp<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that since you don&#39;t need Playwright to install web browsers when testing Electron, you can omit browser download via setting the following environment variable when installing Playwright:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD</span><span class="token operator">=</span><span class="token number">1</span> <span class="token function">npm</span> i <span class="token parameter variable">-D</span> playwright
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Supported Electron versions are:</strong></p><ul><li>v12.2.0+</li><li>v13.4.0+</li><li>v14+</li></ul><p><strong>Known issues:</strong></p><p>If you are not able to launch Electron and it will end up in timeouts during launch, try the following:</p>`,12),u=a("code",null,"nodeCliInspect",-1),d={href:"https://www.electronjs.org/docs/latest/tutorial/fuses#nodecliinspect",target:"_blank",rel:"noopener noreferrer"},h=a("strong",null,"not",-1),k=a("code",null,"false",-1),v=e('<h2 id="async-method-electron-launch" tabindex="-1"><a class="header-anchor" href="#async-method-electron-launch" aria-hidden="true">#</a> async method: Electron.launch</h2><ul><li>since: v1.9</li></ul><ul><li>returns: &lt;[ElectronApplication]&gt;</li></ul><p>Launches electron application specified with the [<code>option: executablePath</code>].</p><h3 id="option-electron-launch-executablepath" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-executablepath" aria-hidden="true">#</a> option: Electron.launch.executablePath</h3><ul><li>since: v1.9</li></ul><ul><li><code>executablePath</code> &lt;[string]&gt;</li></ul><p>Launches given Electron application. If not specified, launches the default Electron<br> executable installed in this package, located at <code>node_modules/.bin/electron</code>.</p><h3 id="option-electron-launch-args" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-args" aria-hidden="true">#</a> option: Electron.launch.args</h3><ul><li>since: v1.9</li></ul><ul><li><code>args</code> &lt;[Array]&lt;[string]&gt;&gt;</li></ul><p>Additional arguments to pass to the application when launching. You typically pass the main<br> script name here.</p><h3 id="option-electron-launch-cwd" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-cwd" aria-hidden="true">#</a> option: Electron.launch.cwd</h3><ul><li>since: v1.9</li></ul><ul><li><code>cwd</code> &lt;[string]&gt;</li></ul><p>Current working directory to launch application from.</p><h3 id="option-electron-launch-env" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-env" aria-hidden="true">#</a> option: Electron.launch.env</h3><ul><li>since: v1.9</li></ul><ul><li><code>env</code> &lt;[Object]&lt;[string], [string]&gt;&gt;</li></ul><p>Specifies environment variables that will be visible to Electron. Defaults to <code>p<wbr>rocess.env</code>.</p><h3 id="option-electron-launch-timeout" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-timeout" aria-hidden="true">#</a> option: Electron.launch.timeout</h3><ul><li>since: v1.15</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>Maximum time in milliseconds to wait for the application to start. Defaults to <code>30000</code> (30 seconds). Pass <code>0</code> to disable timeout.</p><h3 id="option-electron-launch-acceptdownloads-context-option-acceptdownloads" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-acceptdownloads-context-option-acceptdownloads" aria-hidden="true">#</a> option: Electron.launch.acceptdownloads = %%-context-option-acceptdownloads-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-bypasscsp-context-option-bypasscsp" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-bypasscsp-context-option-bypasscsp" aria-hidden="true">#</a> option: Electron.launch.bypassCSP = %%-context-option-bypasscsp-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-colorscheme-context-option-colorscheme" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-colorscheme-context-option-colorscheme" aria-hidden="true">#</a> option: Electron.launch.colorScheme = %%-context-option-colorscheme-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-extrahttpheaders-context-option-extrahttpheaders" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-extrahttpheaders-context-option-extrahttpheaders" aria-hidden="true">#</a> option: Electron.launch.extraHTTPHeaders = %%-context-option-extrahttpheaders-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-geolocation-context-option-geolocation" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-geolocation-context-option-geolocation" aria-hidden="true">#</a> option: Electron.launch.geolocation = %%-context-option-geolocation-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-httpcredentials-context-option-httpcredentials" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-httpcredentials-context-option-httpcredentials" aria-hidden="true">#</a> option: Electron.launch.httpcredentials = %%-context-option-httpcredentials-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-ignorehttpserrors-context-option-ignorehttpserrors" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-ignorehttpserrors-context-option-ignorehttpserrors" aria-hidden="true">#</a> option: Electron.launch.ignoreHTTPSErrors = %%-context-option-ignorehttpserrors-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-locale-context-option-locale" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-locale-context-option-locale" aria-hidden="true">#</a> option: Electron.launch.locale = %%-context-option-locale-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-offline-context-option-offline" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-offline-context-option-offline" aria-hidden="true">#</a> option: Electron.launch.offline = %%-context-option-offline-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-recordhar-context-option-recordhar" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-recordhar-context-option-recordhar" aria-hidden="true">#</a> option: Electron.launch.recordhar = %%-context-option-recordhar-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-recordharpath-context-option-recordhar-path" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-recordharpath-context-option-recordhar-path" aria-hidden="true">#</a> option: Electron.launch.recordharpath = %%-context-option-recordhar-path-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-recordharomitcontent-context-option-recordhar-omit-content" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-recordharomitcontent-context-option-recordhar-omit-content" aria-hidden="true">#</a> option: Electron.launch.recordHarOmitContent = %%-context-option-recordhar-omit-content-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-recordvideo-context-option-recordvideo" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-recordvideo-context-option-recordvideo" aria-hidden="true">#</a> option: Electron.launch.recordvideo = %%-context-option-recordvideo-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-recordvideodir-context-option-recordvideo-dir" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-recordvideodir-context-option-recordvideo-dir" aria-hidden="true">#</a> option: Electron.launch.recordvideodir = %%-context-option-recordvideo-dir-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-recordvideosize-context-option-recordvideo-size" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-recordvideosize-context-option-recordvideo-size" aria-hidden="true">#</a> option: Electron.launch.recordvideosize = %%-context-option-recordvideo-size-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-electron-launch-timezoneid-context-option-timezoneid" tabindex="-1"><a class="header-anchor" href="#option-electron-launch-timezoneid-context-option-timezoneid" aria-hidden="true">#</a> option: Electron.launch.timezoneId = %%-context-option-timezoneid-%%</h3><ul><li>since: v1.12</li></ul>',56);function m(x,b){const t=s("ExternalLinkIcon");return c(),i("div",null,[r,a("ul",null,[a("li",null,[n("Ensure that "),u,n(" ("),a("a",d,[n("FuseV1Options.EnableNodeCliInspectArguments"),l(t)]),n(") fuse is "),h,n(" set to "),k,n(".")])]),v])}const w=o(p,[["render",m],["__file","class-electron.html.vue"]]);export{w as default};
