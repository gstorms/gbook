import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as u,a as n,b as e,d as a,w as t,f as l}from"./app-207e7d61.js";const d={},r=l(`<h1 id="class-elementhandle" tabindex="-1"><a class="header-anchor" href="#class-elementhandle" aria-hidden="true">#</a> class: ElementHandle</h1><ul><li>since: v1.8</li><li>extends: [JSHandle]</li></ul><p>ElementHandle represents an in-page DOM element. ElementHandles can be created with the [<code>method: Page.querySelector</code>] method.</p><p>:::caution Discouraged<br> The use of ElementHandle is discouraged, use [Locator] objects and web-first assertions instead.<br> :::</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> hrefElement <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> hrefElement<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ElementHandle</span> hrefElement <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
hrefElement<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>href_element <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> href_element<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>href_element <span class="token operator">=</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
href_element<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">QuerySelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>ElementHandle prevents DOM element from garbage collection unless the handle is disposed with<br> [<code>method: JSHandle.dispose</code>]. ElementHandles are auto-disposed when their origin frame gets navigated.</p><p>ElementHandle instances can be used as an argument in [<code>method: Page.evalOnSelector</code>] and [<code>method: Page.evaluate</code>] methods.</p><p>The difference between the [Locator] and ElementHandle is that the ElementHandle points to a particular element, while [Locator] captures the logic of how to retrieve an element.</p><p>In the example below, handle points to a particular DOM element on page. If that element changes text or is used by React to render an entirely different component, handle is still pointing to that very DOM element. This can lead to unexpected behaviors.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;text=Submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ElementHandle</span> handle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;text=Submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
handle<span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
handle<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;text=Submit&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span>hover<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>handle <span class="token operator">=</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;text=Submit&quot;</span><span class="token punctuation">)</span>
handle<span class="token punctuation">.</span>hover<span class="token punctuation">(</span><span class="token punctuation">)</span>
handle<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">QuerySelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;text=Submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">HoverAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>With the locator, every time the <code>element</code> is used, up-to-date DOM element is located in the page using the selector. So in the snippet below, underlying DOM element is going to be located twice.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Locator</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
locator<span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
locator<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span>hover<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span>
locator<span class="token punctuation">.</span>hover<span class="token punctuation">(</span><span class="token punctuation">)</span>
locator<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">HoverAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-method-elementhandle-boundingbox" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-boundingbox" aria-hidden="true">#</a> async method: ElementHandle.boundingBox</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Object]&gt; <ul><li><code>x</code> &lt;[float]&gt; the x coordinate of the element in pixels.</li><li><code>y</code> &lt;[float]&gt; the y coordinate of the element in pixels.</li><li><code>width</code> &lt;[float]&gt; the width of the element in pixels.</li><li><code>height</code> &lt;[float]&gt; the height of the element in pixels.</li></ul></li></ul><p>This method returns the bounding box of the element, or <code>null</code> if the element is not visible. The bounding box is<br> calculated relative to the main frame viewport - which is usually the same as the browser window.</p>`,28),h=n("br",null,null,-1),k={href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect",target:"_blank",rel:"noopener noreferrer"},m=n("br",null,null,-1),v=n("code",null,"x",-1),b=n("code",null,"y",-1),g=n("br",null,null,-1),f={href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect",target:"_blank",rel:"noopener noreferrer"},y=l(`<p>Assuming the page is static, it is safe to use bounding box coordinates to perform input. For example, the following<br> snippet should click the center of the element.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> box <span class="token operator">=</span> <span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">boundingBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>mouse<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>box<span class="token punctuation">.</span>x <span class="token operator">+</span> box<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> box<span class="token punctuation">.</span>y <span class="token operator">+</span> box<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BoundingBox</span> box <span class="token operator">=</span> elementHandle<span class="token punctuation">.</span><span class="token function">boundingBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">mouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>box<span class="token punctuation">.</span>x <span class="token operator">+</span> box<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> box<span class="token punctuation">.</span>y <span class="token operator">+</span> box<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>box <span class="token operator">=</span> <span class="token keyword">await</span> element_handle<span class="token punctuation">.</span>bounding_box<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>mouse<span class="token punctuation">.</span>click<span class="token punctuation">(</span>box<span class="token punctuation">[</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span> box<span class="token punctuation">[</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> box<span class="token punctuation">[</span><span class="token string">&quot;y&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span> box<span class="token punctuation">[</span><span class="token string">&quot;height&quot;</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>box <span class="token operator">=</span> element_handle<span class="token punctuation">.</span>bounding_box<span class="token punctuation">(</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>mouse<span class="token punctuation">.</span>click<span class="token punctuation">(</span>box<span class="token punctuation">[</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span> box<span class="token punctuation">[</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> box<span class="token punctuation">[</span><span class="token string">&quot;y&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span> box<span class="token punctuation">[</span><span class="token string">&quot;height&quot;</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> box <span class="token operator">=</span> <span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">BoundingBoxAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>Mouse<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span>box<span class="token punctuation">.</span>X <span class="token operator">+</span> box<span class="token punctuation">.</span>Width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> box<span class="token punctuation">.</span>Y <span class="token operator">+</span> box<span class="token punctuation">.</span>Height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-method-elementhandle-check" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-check" aria-hidden="true">#</a> async method: ElementHandle.check</h2><ul><li>since: v1.8</li></ul><p>This method checks the element by performing the following steps:</p>`,10),w=n("li",null,[e("Ensure that element is a checkbox or a radio input. If not, this method throws. If the element is already"),n("br"),e(" checked, this method returns immediately.")],-1),_=n("code",null,"option: force",-1),q=n("li",null,"Scroll the element into view if needed.",-1),x=n("li",null,[e("Use ["),n("code",null,"property: Page.mouse"),e("] to click in the center of the element.")],-1),E=n("li",null,[e("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),e("] option is set.")],-1),H=n("li",null,"Ensure that the element is now checked. If not, this method throws.",-1),S=l('<p>If the element is detached from the DOM at any moment during the action, this method throws.</p><p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="option-elementhandle-check-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-check-position-input-position" aria-hidden="true">#</a> option: ElementHandle.check.position = %%-input-position-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-elementhandle-check-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-check-force-input-force" aria-hidden="true">#</a> option: ElementHandle.check.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-check-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-check-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: ElementHandle.check.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-check-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-check-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.check.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-check-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-check-trial-input-trial" aria-hidden="true">#</a> option: ElementHandle.check.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-elementhandle-click" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-click" aria-hidden="true">#</a> async method: ElementHandle.click</h2><ul><li>since: v1.8</li></ul><p>This method clicks the element by performing the following steps:</p>',15),A=n("code",null,"option: force",-1),T=n("li",null,"Scroll the element into view if needed.",-1),j=n("li",null,[e("Use ["),n("code",null,"property: Page.mouse"),e("] to click in the center of the element, or the specified ["),n("code",null,"option: position"),e("].")],-1),W=n("li",null,[e("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),e("] option is set.")],-1),I=l('<p>If the element is detached from the DOM at any moment during the action, this method throws.</p><p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="option-elementhandle-click-button-input-button" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-click-button-input-button" aria-hidden="true">#</a> option: ElementHandle.click.button = %%-input-button-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-click-clickcount-input-click-count" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-click-clickcount-input-click-count" aria-hidden="true">#</a> option: ElementHandle.click.clickCount = %%-input-click-count-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-click-delay-input-down-up-delay" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-click-delay-input-down-up-delay" aria-hidden="true">#</a> option: ElementHandle.click.delay = %%-input-down-up-delay-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-click-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-click-position-input-position" aria-hidden="true">#</a> option: ElementHandle.click.position = %%-input-position-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-click-modifiers-input-modifiers" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-click-modifiers-input-modifiers" aria-hidden="true">#</a> option: ElementHandle.click.modifiers = %%-input-modifiers-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-click-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-click-force-input-force" aria-hidden="true">#</a> option: ElementHandle.click.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-click-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-click-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: ElementHandle.click.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-click-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-click-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.click.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-click-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-click-trial-input-trial" aria-hidden="true">#</a> option: ElementHandle.click.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-elementhandle-contentframe" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-contentframe" aria-hidden="true">#</a> async method: ElementHandle.contentFrame</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Frame]&gt;</li></ul><p>Returns the content frame for element handles referencing iframe nodes, or <code>null</code> otherwise</p><h2 id="async-method-elementhandle-dblclick" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-dblclick" aria-hidden="true">#</a> async method: ElementHandle.dblclick</h2><ul><li>since: v1.8</li><li>langs: <ul><li>alias-csharp: DblClickAsync</li></ul></li></ul><p>This method double clicks the element by performing the following steps:</p>',27),O=n("code",null,"option: force",-1),P=l("<li>Scroll the element into view if needed.</li><li>Use [<code>property: Page.mouse</code>] to double click in the center of the element, or the specified [<code>option: position</code>].</li><li>Wait for initiated navigations to either succeed or fail, unless [<code>option: noWaitAfter</code>] option is set. Note that<br> if the first click of the <code>dblclick()</code> triggers a navigation event, this method will throw.</li>",3),D=l('<p>If the element is detached from the DOM at any moment during the action, this method throws.</p><p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><div class="hint-container note"><p class="hint-container-title">注</p><p><code>elementHandle.dblclick()</code> dispatches two <code>click</code> events and a single <code>dblclick</code> event.</p></div><h3 id="option-elementhandle-dblclick-button-input-button" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-dblclick-button-input-button" aria-hidden="true">#</a> option: ElementHandle.dblclick.button = %%-input-button-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-dblclick-delay-input-down-up-delay" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-dblclick-delay-input-down-up-delay" aria-hidden="true">#</a> option: ElementHandle.dblclick.delay = %%-input-down-up-delay-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-dblclick-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-dblclick-position-input-position" aria-hidden="true">#</a> option: ElementHandle.dblclick.position = %%-input-position-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-dblclick-modifiers-input-modifiers" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-dblclick-modifiers-input-modifiers" aria-hidden="true">#</a> option: ElementHandle.dblclick.modifiers = %%-input-modifiers-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-dblclick-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-dblclick-force-input-force" aria-hidden="true">#</a> option: ElementHandle.dblclick.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-dblclick-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-dblclick-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: ElementHandle.dblclick.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-dblclick-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-dblclick-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.dblclick.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-dblclick-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-dblclick-trial-input-trial" aria-hidden="true">#</a> option: ElementHandle.dblclick.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-elementhandle-dispatchevent" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-dispatchevent" aria-hidden="true">#</a> async method: ElementHandle.dispatchEvent</h2><ul><li>since: v1.8</li></ul>',21),U=n("code",null,"click",-1),F=n("code",null,"click",-1),C=n("br",null,null,-1),z=n("br",null,null,-1),M={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click",target:"_blank",rel:"noopener noreferrer"},R=l(`<p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>elementHandle<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> element_handle<span class="token punctuation">.</span>dispatch_event<span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>element_handle<span class="token punctuation">.</span>dispatch_event<span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">DispatchEventAsync</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Under the hood, it creates an instance of an event based on the given [<code>param: type</code>], initializes it with<br> [<code>param: eventInit</code>] properties and dispatches it on the element. Events are <code>composed</code>, <code>cancelable</code> and bubble by<br> default.</p><p>Since [<code>param: eventInit</code>] is event-specific, please refer to the events documentation for the lists of initial<br> properties:</p>`,8),L={href:"https://developer.mozilla.org/en-US/docs/Web/API/DragEvent/DragEvent",target:"_blank",rel:"noopener noreferrer"},B={href:"https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent/FocusEvent",target:"_blank",rel:"noopener noreferrer"},V={href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent",target:"_blank",rel:"noopener noreferrer"},$={href:"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent",target:"_blank",rel:"noopener noreferrer"},N={href:"https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/PointerEvent",target:"_blank",rel:"noopener noreferrer"},K={href:"https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/TouchEvent",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://developer.mozilla.org/en-US/docs/Web/API/Event/Event",target:"_blank",rel:"noopener noreferrer"},J=l(`<p>You can also specify <code>JSHandle</code> as the property value if you want live objects to be passed into the event:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Note you can only create DataTransfer in Chromium and Firefox</span>
<span class="token keyword">const</span> dataTransfer <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">DataTransfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&#39;dragstart&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> dataTransfer <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Note you can only create DataTransfer in Chromium and Firefox</span>
<span class="token class-name">JSHandle</span> dataTransfer <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; new DataTransfer()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> arg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arg<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;dataTransfer&quot;</span><span class="token punctuation">,</span> dataTransfer<span class="token punctuation">)</span><span class="token punctuation">;</span>
elementHandle<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&quot;dragstart&quot;</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># note you can only create data_transfer in chromium and firefox</span>
data_transfer <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;new DataTransfer()&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> element_handle<span class="token punctuation">.</span>dispatch_event<span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dragstart&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;dataTransfer&quot;</span><span class="token punctuation">:</span> data_transfer<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># note you can only create data_transfer in chromium and firefox</span>
data_transfer <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;new DataTransfer()&quot;</span><span class="token punctuation">)</span>
element_handle<span class="token punctuation">.</span>dispatch_event<span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dragstart&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;dataTransfer&quot;</span><span class="token punctuation">:</span> data_transfer<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> dataTransfer <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; new DataTransfer()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">DispatchEventAsync</span><span class="token punctuation">(</span><span class="token string">&quot;dragstart&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span>
    <span class="token punctuation">{</span> <span class="token string">&quot;dataTransfer&quot;</span><span class="token punctuation">,</span> dataTransfer <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-elementhandle-dispatchevent-type" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-dispatchevent-type" aria-hidden="true">#</a> param: ElementHandle.dispatchEvent.type</h3><ul><li>since: v1.8</li></ul><ul><li><code>type</code> &lt;[string]&gt;</li></ul><p>DOM event type: <code>&quot;click&quot;</code>, <code>&quot;dragstart&quot;</code>, etc.</p><h3 id="param-elementhandle-dispatchevent-eventinit" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-dispatchevent-eventinit" aria-hidden="true">#</a> param: ElementHandle.dispatchEvent.eventInit</h3><ul><li>since: v1.8</li></ul><ul><li><code>eventInit</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional event-specific initialization properties.</p><h2 id="async-method-elementhandle-evalonselector" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-evalonselector" aria-hidden="true">#</a> async method: ElementHandle.evalOnSelector</h2><ul><li>since: v1.9</li><li>langs: <ul><li>alias-python: eval_on_selector</li><li>alias-js: $eval</li></ul></li></ul><ul><li>returns: &lt;[Serializable]&gt;</li></ul><p>Returns the return value of [<code>param: expression</code>].</p><p>The method finds an element matching the specified selector in the <code>ElementHandle</code>s subtree and passes it as a first<br> argument to [<code>param: expression</code>]. If no elements match the selector, the method throws an error.</p><p>If [<code>param: expression</code>] returns a [Promise], then [<code>method: ElementHandle.evalOnSelector</code>] would wait for the promise to resolve and return its<br> value.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> tweetHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.tweet&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> tweetHandle<span class="token punctuation">.</span><span class="token function">$eval</span><span class="token punctuation">(</span><span class="token string">&#39;.like&#39;</span><span class="token punctuation">,</span> <span class="token parameter">node</span> <span class="token operator">=&gt;</span> node<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> tweetHandle<span class="token punctuation">.</span><span class="token function">$eval</span><span class="token punctuation">(</span><span class="token string">&#39;.retweets&#39;</span><span class="token punctuation">,</span> <span class="token parameter">node</span> <span class="token operator">=&gt;</span> node<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ElementHandle</span> tweetHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.tweet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;100&quot;</span><span class="token punctuation">,</span> tweetHandle<span class="token punctuation">.</span><span class="token function">evalOnSelector</span><span class="token punctuation">(</span><span class="token string">&quot;.like&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;node =&gt; node.innerText&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span> tweetHandle<span class="token punctuation">.</span><span class="token function">evalOnSelector</span><span class="token punctuation">(</span><span class="token string">&quot;.retweets&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;node =&gt; node.innerText&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tweet_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;.tweet&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> <span class="token keyword">await</span> tweet_handle<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;.like&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;node =&gt; node.innerText&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;100&quot;</span>
<span class="token keyword">assert</span> <span class="token keyword">await</span> tweet_handle<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;.retweets&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;node =&gt; node.innerText&quot;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;10&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tweet_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;.tweet&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> tweet_handle<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;.like&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;node =&gt; node.innerText&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;100&quot;</span>
<span class="token keyword">assert</span> tweet_handle<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;.retweets&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;node =&gt; node.innerText&quot;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;10&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> tweetHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">QuerySelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;.tweet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Assert<span class="token punctuation">.</span><span class="token function">AreEqual</span><span class="token punctuation">(</span><span class="token string">&quot;100&quot;</span><span class="token punctuation">,</span> <span class="token keyword">await</span> tweetHandle<span class="token punctuation">.</span><span class="token function">EvalOnSelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;.like&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;node =&gt; node.innerText&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Assert<span class="token punctuation">.</span><span class="token function">AreEqual</span><span class="token punctuation">(</span><span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span> <span class="token keyword">await</span> tweetHandle<span class="token punctuation">.</span><span class="token function">EvalOnSelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;.retweets&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;node =&gt; node.innerText&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-elementhandle-evalonselector-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-evalonselector-selector-query-selector" aria-hidden="true">#</a> param: ElementHandle.evalOnSelector.selector = %%-query-selector-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-elementhandle-evalonselector-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-evalonselector-expression-evaluate-expression" aria-hidden="true">#</a> param: ElementHandle.evalOnSelector.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-elementhandle-evalonselector-expression-js-evalonselector-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-evalonselector-expression-js-evalonselector-pagefunction" aria-hidden="true">#</a> param: ElementHandle.evalOnSelector.expression = %%-js-evalonselector-pagefunction-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-elementhandle-evalonselector-arg" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-evalonselector-arg" aria-hidden="true">#</a> param: ElementHandle.evalOnSelector.arg</h3><ul><li>since: v1.9</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h2 id="async-method-elementhandle-evalonselectorall" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-evalonselectorall" aria-hidden="true">#</a> async method: ElementHandle.evalOnSelectorAll</h2><ul><li>since: v1.9</li><li>langs: <ul><li>alias-python: eval_on_selector_all</li><li>alias-js: $$eval</li></ul></li></ul><ul><li>returns: &lt;[Serializable]&gt;</li></ul><p>Returns the return value of [<code>param: expression</code>].</p><p>The method finds all elements matching the specified selector in the <code>ElementHandle</code>&#39;s subtree and passes an array of<br> matched elements as a first argument to [<code>param: expression</code>].</p><p>If [<code>param: expression</code>] returns a [Promise], then [<code>method: ElementHandle.evalOnSelectorAll</code>] would wait for the promise to resolve and return its<br> value.</p><p><strong>Usage</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>feed<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tweet<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Hello!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tweet<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Hi!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> feedHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.feed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> feedHandle<span class="token punctuation">.</span><span class="token function">$$eval</span><span class="token punctuation">(</span><span class="token string">&#39;.tweet&#39;</span><span class="token punctuation">,</span> <span class="token parameter">nodes</span> <span class="token operator">=&gt;</span> nodes<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Hello!&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Hi!&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ElementHandle</span> feedHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.feed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hi!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> feedHandle<span class="token punctuation">.</span><span class="token function">evalOnSelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;.tweet&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nodes =&gt; nodes.map(n =&gt; n.innerText)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>feed_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;.feed&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> <span class="token keyword">await</span> feed_handle<span class="token punctuation">.</span>eval_on_selector_all<span class="token punctuation">(</span><span class="token string">&quot;.tweet&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nodes =&gt; nodes.map(n =&gt; n.innerText)&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token string">&quot;hello!&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hi!&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>feed_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;.feed&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> feed_handle<span class="token punctuation">.</span>eval_on_selector_all<span class="token punctuation">(</span><span class="token string">&quot;.tweet&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nodes =&gt; nodes.map(n =&gt; n.innerText)&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token string">&quot;hello!&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hi!&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> feedHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">QuerySelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;.feed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Assert<span class="token punctuation">.</span><span class="token function">AreEqual</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hi!&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">await</span> feedHandle<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvalOnSelectorAllAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;.tweet&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nodes =&gt; nodes.map(n =&gt; n.innerText)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-elementhandle-evalonselectorall-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-evalonselectorall-selector-query-selector" aria-hidden="true">#</a> param: ElementHandle.evalOnSelectorAll.selector = %%-query-selector-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-elementhandle-evalonselectorall-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-evalonselectorall-expression-evaluate-expression" aria-hidden="true">#</a> param: ElementHandle.evalOnSelectorAll.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-elementhandle-evalonselectorall-expression-js-evalonselectorall-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-evalonselectorall-expression-js-evalonselectorall-pagefunction" aria-hidden="true">#</a> param: ElementHandle.evalOnSelectorAll.expression = %%-js-evalonselectorall-pagefunction-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-elementhandle-evalonselectorall-arg" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-evalonselectorall-arg" aria-hidden="true">#</a> param: ElementHandle.evalOnSelectorAll.arg</h3><ul><li>since: v1.9</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h2 id="async-method-elementhandle-fill" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-fill" aria-hidden="true">#</a> async method: ElementHandle.fill</h2><ul><li>since: v1.8</li></ul>`,61),Y=n("code",null,"input",-1),G=n("code",null,"<input>",-1),X=n("code",null,"<textarea>",-1),Z=n("code",null,"[contenteditable]",-1),nn=n("code",null,"<label>",-1),en={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},an=l('<p>To send fine-grained keyboard events, use [<code>method: ElementHandle.type</code>].</p><h3 id="param-elementhandle-fill-value" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-fill-value" aria-hidden="true">#</a> param: ElementHandle.fill.value</h3><ul><li>since: v1.8</li></ul><ul><li><code>value</code> &lt;[string]&gt;</li></ul><p>Value to set for the <code>&lt;input&gt;</code>, <code>&lt;textarea&gt;</code> or <code>[contenteditable]</code> element.</p><h3 id="option-elementhandle-fill-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-fill-force-input-force" aria-hidden="true">#</a> option: ElementHandle.fill.force = %%-input-force-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-elementhandle-fill-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-fill-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: ElementHandle.fill.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-fill-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-fill-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.fill.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-elementhandle-focus" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-focus" aria-hidden="true">#</a> async method: ElementHandle.focus</h2><ul><li>since: v1.8</li></ul>',13),sn={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus",target:"_blank",rel:"noopener noreferrer"},tn=n("h2",{id:"async-method-elementhandle-getattribute",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#async-method-elementhandle-getattribute","aria-hidden":"true"},"#"),e(" async method: ElementHandle.getAttribute")],-1),on=n("ul",null,[n("li",null,"since: v1.8")],-1),ln=n("ul",null,[n("li",null,"returns: <[null]|[string]>")],-1),pn=n("p",null,"Returns element attribute value.",-1),cn={id:"param-elementhandle-getattribute-name",tabindex:"-1"},un=n("a",{class:"header-anchor",href:"#param-elementhandle-getattribute-name","aria-hidden":"true"},"#",-1),dn={href:"http://ElementHandle.getAttribute.name",target:"_blank",rel:"noopener noreferrer"},rn=n("ul",null,[n("li",null,"since: v1.8")],-1),hn=n("ul",null,[n("li",null,[n("code",null,"name"),e(" <[string]>")])],-1),kn=n("p",null,"Attribute name to get the value for.",-1),mn=n("h2",{id:"async-method-elementhandle-hover",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#async-method-elementhandle-hover","aria-hidden":"true"},"#"),e(" async method: ElementHandle.hover")],-1),vn=n("ul",null,[n("li",null,"since: v1.8")],-1),bn=n("p",null,"This method hovers over the element by performing the following steps:",-1),gn=n("code",null,"option: force",-1),fn=n("li",null,"Scroll the element into view if needed.",-1),yn=n("li",null,[e("Use ["),n("code",null,"property: Page.mouse"),e("] to hover over the center of the element, or the specified ["),n("code",null,"option: position"),e("].")],-1),wn=n("li",null,[e("Wait for initiated navigations to either succeed or fail, unless "),n("code",null,"noWaitAfter"),e(" option is set.")],-1),_n=l('<p>If the element is detached from the DOM at any moment during the action, this method throws.</p><p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="option-elementhandle-hover-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-hover-position-input-position" aria-hidden="true">#</a> option: ElementHandle.hover.position = %%-input-position-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-hover-modifiers-input-modifiers" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-hover-modifiers-input-modifiers" aria-hidden="true">#</a> option: ElementHandle.hover.modifiers = %%-input-modifiers-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-hover-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-hover-force-input-force" aria-hidden="true">#</a> option: ElementHandle.hover.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-hover-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-hover-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.hover.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-hover-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-hover-trial-input-trial" aria-hidden="true">#</a> option: ElementHandle.hover.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-elementhandle-hover-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-hover-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: ElementHandle.hover.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.28</li></ul><h2 id="async-method-elementhandle-innerhtml" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-innerhtml" aria-hidden="true">#</a> async method: ElementHandle.innerHTML</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Returns the <code>element.innerHTML</code>.</p><h2 id="async-method-elementhandle-innertext" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-innertext" aria-hidden="true">#</a> async method: ElementHandle.innerText</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Returns the <code>element.innerText</code>.</p><h2 id="async-method-elementhandle-inputvalue" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-inputvalue" aria-hidden="true">#</a> async method: ElementHandle.inputValue</h2><ul><li>since: v1.13</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Returns <code>input.value</code> for the selected <code>&lt;input&gt;</code> or <code>&lt;textarea&gt;</code> or <code>&lt;select&gt;</code> element.</p>',26),qn=n("code",null,"<label>",-1),xn={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},En=l('<h3 id="option-elementhandle-inputvalue-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-inputvalue-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.inputValue.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.13</li></ul><h2 id="async-method-elementhandle-ischecked" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-ischecked" aria-hidden="true">#</a> async method: ElementHandle.isChecked</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[boolean]&gt;</li></ul><p>Returns whether the element is checked. Throws if the element is not a checkbox or radio input.</p><h2 id="async-method-elementhandle-isdisabled" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-isdisabled" aria-hidden="true">#</a> async method: ElementHandle.isDisabled</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[boolean]&gt;</li></ul>',9),Hn=n("h2",{id:"async-method-elementhandle-iseditable",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#async-method-elementhandle-iseditable","aria-hidden":"true"},"#"),e(" async method: ElementHandle.isEditable")],-1),Sn=n("ul",null,[n("li",null,"since: v1.8")],-1),An=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),Tn=n("h2",{id:"async-method-elementhandle-isenabled",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#async-method-elementhandle-isenabled","aria-hidden":"true"},"#"),e(" async method: ElementHandle.isEnabled")],-1),jn=n("ul",null,[n("li",null,"since: v1.8")],-1),Wn=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),In=n("h2",{id:"async-method-elementhandle-ishidden",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#async-method-elementhandle-ishidden","aria-hidden":"true"},"#"),e(" async method: ElementHandle.isHidden")],-1),On=n("ul",null,[n("li",null,"since: v1.8")],-1),Pn=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),Dn=n("h2",{id:"async-method-elementhandle-isvisible",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#async-method-elementhandle-isvisible","aria-hidden":"true"},"#"),e(" async method: ElementHandle.isVisible")],-1),Un=n("ul",null,[n("li",null,"since: v1.8")],-1),Fn=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),Cn=l('<h2 id="async-method-elementhandle-ownerframe" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-ownerframe" aria-hidden="true">#</a> async method: ElementHandle.ownerFrame</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Frame]&gt;</li></ul><p>Returns the frame containing the given element.</p><h2 id="async-method-elementhandle-press" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-press" aria-hidden="true">#</a> async method: ElementHandle.press</h2><ul><li>since: v1.8</li></ul><p>Focuses the element, and then uses [<code>method: Keyboard.down</code>] and [<code>method: Keyboard.up</code>].</p>',7),zn=n("code",null,"param: key",-1),Mn=n("br",null,null,-1),Rn={href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key",target:"_blank",rel:"noopener noreferrer"},Ln=n("br",null,null,-1),Bn=n("code",null,"param: key",-1),Vn=n("br",null,null,-1),$n={href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values",target:"_blank",rel:"noopener noreferrer"},Nn=l('<p><code>F1</code> - <code>F12</code>, <code>Digit0</code>- <code>Digit9</code>, <code>KeyA</code>- <code>KeyZ</code>, <code>Backquote</code>, <code>Minus</code>, <code>Equal</code>, <code>Backslash</code>, <code>Backspace</code>, <code>Tab</code>,<br><code>Delete</code>, <code>Escape</code>, <code>ArrowDown</code>, <code>End</code>, <code>Enter</code>, <code>Home</code>, <code>Insert</code>, <code>PageDown</code>, <code>PageUp</code>, <code>ArrowRight</code>, <code>ArrowUp</code>, etc.</p><p>Following modification shortcuts are also supported: <code>Shift</code>, <code>Control</code>, <code>Alt</code>, <code>Meta</code>, <code>ShiftLeft</code>.</p><p>Holding down <code>Shift</code> will type the text that corresponds to the [<code>param: key</code>] in the upper case.</p><p>If [<code>param: key</code>] is a single character, it is case-sensitive, so the values <code>a</code> and <code>A</code> will generate different<br> respective texts.</p><p>Shortcuts such as <code>key: &quot;Control+o&quot;</code> or <code>key: &quot;Control+Shift+T&quot;</code> are supported as well. When specified with the<br> modifier, modifier is pressed and being held while the subsequent key is being pressed.</p><h3 id="param-elementhandle-press-key" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-press-key" aria-hidden="true">#</a> param: ElementHandle.press.key</h3><ul><li>since: v1.8</li></ul><ul><li><code>key</code> &lt;[string]&gt;</li></ul><p>Name of the key to press or a character to generate, such as <code>ArrowLeft</code> or <code>a</code>.</p><h3 id="option-elementhandle-press-delay" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-press-delay" aria-hidden="true">#</a> option: ElementHandle.press.delay</h3><ul><li>since: v1.8</li></ul><ul><li><code>delay</code> &lt;[float]&gt;</li></ul><p>Time to wait between <code>keydown</code> and <code>keyup</code> in milliseconds. Defaults to 0.</p><h3 id="option-elementhandle-press-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-press-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: ElementHandle.press.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-press-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-press-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.press.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-elementhandle-queryselector" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-queryselector" aria-hidden="true">#</a> async method: ElementHandle.querySelector</h2><ul><li>since: v1.9</li><li>langs: <ul><li>alias-python: query_selector</li><li>alias-js: $</li></ul></li></ul><ul><li>returns: &lt;[null]|[ElementHandle]&gt;</li></ul><p>The method finds an element matching the specified selector in the <code>ElementHandle</code>&#39;s subtree. If no elements match the selector,<br> returns <code>null</code>.</p><h3 id="param-elementhandle-queryselector-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-queryselector-selector-query-selector" aria-hidden="true">#</a> param: ElementHandle.querySelector.selector = %%-query-selector-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-elementhandle-queryselectorall" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-queryselectorall" aria-hidden="true">#</a> async method: ElementHandle.querySelectorAll</h2><ul><li>since: v1.9</li><li>langs: <ul><li>alias-python: query_selector_all</li><li>alias-js: $$</li></ul></li></ul><ul><li>returns: &lt;[Array]&lt;[ElementHandle]&gt;&gt;</li></ul><p>The method finds all elements matching the specified selector in the <code>ElementHandle</code>s subtree. If no elements match the selector,<br> returns empty array.</p><h3 id="param-elementhandle-queryselectorall-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-queryselectorall-selector-query-selector" aria-hidden="true">#</a> param: ElementHandle.querySelectorAll.selector = %%-query-selector-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-elementhandle-screenshot" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-screenshot" aria-hidden="true">#</a> async method: ElementHandle.screenshot</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Buffer]&gt;</li></ul><p>This method captures a screenshot of the page, clipped to the size and position of this particular element. If the element is covered by other elements, it will not be actually visible on the screenshot. If the element is a scrollable container, only the currently scrolled content will be visible on the screenshot.</p>',33),Kn=n("br",null,null,-1),Qn=n("p",null,"Returns the buffer with the captured screenshot.",-1),Jn=n("h3",{id:"option-elementhandle-screenshot-inline-screenshot-options-common-list-v1-8",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#option-elementhandle-screenshot-inline-screenshot-options-common-list-v1-8","aria-hidden":"true"},"#"),e(" option: ElementHandle.screenshot.-inline- = %%-screenshot-options-common-list-v1.8-%%")],-1),Yn=n("ul",null,[n("li",null,"since: v1.8")],-1),Gn=n("h2",{id:"async-method-elementhandle-scrollintoviewifneeded",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#async-method-elementhandle-scrollintoviewifneeded","aria-hidden":"true"},"#"),e(" async method: ElementHandle.scrollIntoViewIfNeeded")],-1),Xn=n("ul",null,[n("li",null,"since: v1.8")],-1),Zn=n("br",null,null,-1),ne=n("br",null,null,-1),ee={href:"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API",target:"_blank",rel:"noopener noreferrer"},ae=n("code",null,"ratio",-1),se=n("code",null,"elementHandle",-1),te=n("br",null,null,-1),oe={href:"https://developer.mozilla.org/en-US/docs/Web/API/Node/isConnected",target:"_blank",rel:"noopener noreferrer"},le=n("h3",{id:"option-elementhandle-scrollintoviewifneeded-timeout-input-timeout",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#option-elementhandle-scrollintoviewifneeded-timeout-input-timeout","aria-hidden":"true"},"#"),e(" option: ElementHandle.scrollIntoViewIfNeeded.timeout = %%-input-timeout-%%")],-1),ie=n("ul",null,[n("li",null,"since: v1.8")],-1),pe=n("h2",{id:"async-method-elementhandle-selectoption",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#async-method-elementhandle-selectoption","aria-hidden":"true"},"#"),e(" async method: ElementHandle.selectOption")],-1),ce=n("ul",null,[n("li",null,"since: v1.8")],-1),ue=n("ul",null,[n("li",null,"returns: <[Array]<[string]>>")],-1),de=n("code",null,"<select>",-1),re=n("code",null,"<select>",-1),he=n("code",null,"<label>",-1),ke={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},me=l(`<p>Returns the array of option values that have been successfully selected.</p><p>Triggers a <code>change</code> and <code>input</code> event once all the provided options have been selected.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// single selection matching the value</span>
handle<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&#39;blue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// single selection matching the label</span>
handle<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Blue&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// multiple selection</span>
handle<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// single selection matching the value</span>
handle<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// single selection matching the label</span>
handle<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SelectOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLabel</span><span class="token punctuation">(</span><span class="token string">&quot;Blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// multiple selection</span>
handle<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># single selection matching the value</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># single selection matching the label</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span>label<span class="token operator">=</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># multiple selection</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># single selection matching the value</span>
handle<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># single selection matching both the label</span>
handle<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span>label<span class="token operator">=</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># multiple selection</span>
handle<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// single selection matching the value</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">SelectOptionAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;blue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// single selection matching the label</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">SelectOptionAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SelectOptionValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Label <span class="token operator">=</span> <span class="token string">&quot;blue&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// multiple selection</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">SelectOptionAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// multiple selection for blue, red and second option</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">SelectOptionAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SelectOptionValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Label <span class="token operator">=</span> <span class="token string">&quot;blue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SelectOptionValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Index <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SelectOptionValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Value <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-elementhandle-selectoption-values-select-options-values" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-selectoption-values-select-options-values" aria-hidden="true">#</a> param: ElementHandle.selectOption.values = %%-select-options-values-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-selectoption-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-selectoption-force-input-force" aria-hidden="true">#</a> option: ElementHandle.selectOption.force = %%-input-force-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-elementhandle-selectoption-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-selectoption-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: ElementHandle.selectOption.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-selectoption-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-selectoption-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.selectOption.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-elementhandle-selectoption-element-python-select-options-element" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-selectoption-element-python-select-options-element" aria-hidden="true">#</a> param: ElementHandle.selectOption.element = %%-python-select-options-element-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-elementhandle-selectoption-index-python-select-options-index" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-selectoption-index-python-select-options-index" aria-hidden="true">#</a> param: ElementHandle.selectOption.index = %%-python-select-options-index-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-elementhandle-selectoption-value-python-select-options-value" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-selectoption-value-python-select-options-value" aria-hidden="true">#</a> param: ElementHandle.selectOption.value = %%-python-select-options-value-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-elementhandle-selectoption-label-python-select-options-label" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-selectoption-label-python-select-options-label" aria-hidden="true">#</a> param: ElementHandle.selectOption.label = %%-python-select-options-label-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-elementhandle-selecttext" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-selecttext" aria-hidden="true">#</a> async method: ElementHandle.selectText</h2><ul><li>since: v1.8</li></ul>`,26),ve=n("br",null,null,-1),be=n("code",null,"<label>",-1),ge={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},fe=l('<h3 id="option-elementhandle-selecttext-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-selecttext-force-input-force" aria-hidden="true">#</a> option: ElementHandle.selectText.force = %%-input-force-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-elementhandle-selecttext-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-selecttext-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.selectText.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-elementhandle-setchecked" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-setchecked" aria-hidden="true">#</a> async method: ElementHandle.setChecked</h2><ul><li>since: v1.15</li></ul><p>This method checks or unchecks an element by performing the following steps:</p>',7),ye=n("li",null,"Ensure that element is a checkbox or a radio input. If not, this method throws.",-1),we=n("li",null,"If the element already has the right checked state, this method returns immediately.",-1),_e=n("code",null,"option: force",-1),qe=n("br",null,null,-1),xe=n("li",null,"Scroll the element into view if needed.",-1),Ee=n("li",null,[e("Use ["),n("code",null,"property: Page.mouse"),e("] to click in the center of the element.")],-1),He=n("li",null,[e("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),e("] option is set.")],-1),Se=n("li",null,"Ensure that the element is now checked or unchecked. If not, this method throws.",-1),Ae=l('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="param-elementhandle-setchecked-checked-input-checked" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-setchecked-checked-input-checked" aria-hidden="true">#</a> param: ElementHandle.setChecked.checked = %%-input-checked-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-elementhandle-setchecked-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-setchecked-force-input-force" aria-hidden="true">#</a> option: ElementHandle.setChecked.force = %%-input-force-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-elementhandle-setchecked-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-setchecked-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: ElementHandle.setChecked.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-elementhandle-setchecked-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-setchecked-position-input-position" aria-hidden="true">#</a> option: ElementHandle.setChecked.position = %%-input-position-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-elementhandle-setchecked-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-setchecked-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.setChecked.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-elementhandle-setchecked-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-setchecked-trial-input-trial" aria-hidden="true">#</a> option: ElementHandle.setChecked.trial = %%-input-trial-%%</h3><ul><li>since: v1.15</li></ul><h2 id="async-method-elementhandle-setinputfiles" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-setinputfiles" aria-hidden="true">#</a> async method: ElementHandle.setInputFiles</h2><ul><li>since: v1.8</li></ul><p>Sets the value of the file input to these file paths or files. If some of the <code>filePaths</code> are relative paths, then they<br> are resolved relative to the current working directory. For empty array, clears the selected files.</p>',16),Te=n("br",null,null,-1),je={href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input",target:"_blank",rel:"noopener noreferrer"},We=n("code",null,"<label>",-1),Ie={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},Oe=l('<h3 id="param-elementhandle-setinputfiles-files-input-files" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-setinputfiles-files-input-files" aria-hidden="true">#</a> param: ElementHandle.setInputFiles.files = %%-input-files-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-setinputfiles-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-setinputfiles-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: ElementHandle.setInputFiles.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-setinputfiles-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-setinputfiles-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.setInputFiles.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-elementhandle-tap" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-tap" aria-hidden="true">#</a> async method: ElementHandle.tap</h2><ul><li>since: v1.8</li></ul><p>This method taps the element by performing the following steps:</p>',9),Pe=n("code",null,"option: force",-1),De=n("li",null,"Scroll the element into view if needed.",-1),Ue=n("li",null,[e("Use ["),n("code",null,"property: Page.touchscreen"),e("] to tap the center of the element, or the specified ["),n("code",null,"option: position"),e("].")],-1),Fe=n("li",null,[e("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),e("] option is set.")],-1),Ce=l(`<p>If the element is detached from the DOM at any moment during the action, this method throws.</p><p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><div class="hint-container note"><p class="hint-container-title">注</p><p><code>elementHandle.tap()</code> requires that the <code>hasTouch</code> option of the browser context be set to true.</p></div><h3 id="option-elementhandle-tap-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-tap-position-input-position" aria-hidden="true">#</a> option: ElementHandle.tap.position = %%-input-position-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-tap-modifiers-input-modifiers" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-tap-modifiers-input-modifiers" aria-hidden="true">#</a> option: ElementHandle.tap.modifiers = %%-input-modifiers-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-tap-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-tap-force-input-force" aria-hidden="true">#</a> option: ElementHandle.tap.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-tap-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-tap-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: ElementHandle.tap.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-tap-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-tap-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.tap.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-tap-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-tap-trial-input-trial" aria-hidden="true">#</a> option: ElementHandle.tap.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-elementhandle-textcontent" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-textcontent" aria-hidden="true">#</a> async method: ElementHandle.textContent</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[string]&gt;</li></ul><p>Returns the <code>node.textContent</code>.</p><h2 id="async-method-elementhandle-type" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-type" aria-hidden="true">#</a> async method: ElementHandle.type</h2><ul><li>since: v1.8</li></ul><p>Focuses the element, and then sends a <code>keydown</code>, <code>keypress</code>/<code>input</code>, and <code>keyup</code> event for each character in the text.</p><p>To press a special key, like <code>Control</code> or <code>ArrowDown</code>, use [<code>method: ElementHandle.press</code>].</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Types instantly</span>
<span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;World&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>elementHandle<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Types instantly</span>
elementHandle<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;World&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ElementHandle<span class="token punctuation">.</span>TypeOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setDelay</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> element_handle<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span> <span class="token comment"># types instantly</span>
<span class="token keyword">await</span> element_handle<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment"># types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>element_handle<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span> <span class="token comment"># types instantly</span>
element_handle<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment"># types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">TypeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Types instantly</span>
<span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">TypeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;World&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Delay <span class="token operator">=</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>An example of typing into a text field and then submitting the form:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> elementHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;some text&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">press</span><span class="token punctuation">(</span><span class="token string">&#39;Enter&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ElementHandle</span> elementHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
elementHandle<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;some text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
elementHandle<span class="token punctuation">.</span><span class="token function">press</span><span class="token punctuation">(</span><span class="token string">&quot;Enter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>element_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> element_handle<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;some text&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> element_handle<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&quot;Enter&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>element_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span>
element_handle<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;some text&quot;</span><span class="token punctuation">)</span>
element_handle<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&quot;Enter&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> elementHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">QuerySelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">TypeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;some text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">PressAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Enter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-elementhandle-type-text" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-type-text" aria-hidden="true">#</a> param: ElementHandle.type.text</h3><ul><li>since: v1.8</li></ul><ul><li><code>text</code> &lt;[string]&gt;</li></ul><p>A text to type into a focused element.</p><h3 id="option-elementhandle-type-delay" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-type-delay" aria-hidden="true">#</a> option: ElementHandle.type.delay</h3><ul><li>since: v1.8</li></ul><ul><li><code>delay</code> &lt;[float]&gt;</li></ul><p>Time to wait between key presses in milliseconds. Defaults to 0.</p><h3 id="option-elementhandle-type-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-type-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: ElementHandle.type.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-type-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-type-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.type.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-elementhandle-uncheck" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-uncheck" aria-hidden="true">#</a> async method: ElementHandle.uncheck</h2><ul><li>since: v1.8</li></ul><p>This method checks the element by performing the following steps:</p>`,50),ze=n("li",null,[e("Ensure that element is a checkbox or a radio input. If not, this method throws. If the element is already"),n("br"),e(" unchecked, this method returns immediately.")],-1),Me=n("code",null,"option: force",-1),Re=n("li",null,"Scroll the element into view if needed.",-1),Le=n("li",null,[e("Use ["),n("code",null,"property: Page.mouse"),e("] to click in the center of the element.")],-1),Be=n("li",null,[e("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),e("] option is set.")],-1),Ve=n("li",null,"Ensure that the element is now unchecked. If not, this method throws.",-1),$e=l('<p>If the element is detached from the DOM at any moment during the action, this method throws.</p><p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="option-elementhandle-uncheck-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-uncheck-position-input-position" aria-hidden="true">#</a> option: ElementHandle.uncheck.position = %%-input-position-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-elementhandle-uncheck-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-uncheck-force-input-force" aria-hidden="true">#</a> option: ElementHandle.uncheck.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-uncheck-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-uncheck-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: ElementHandle.uncheck.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-uncheck-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-uncheck-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.uncheck.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-uncheck-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-uncheck-trial-input-trial" aria-hidden="true">#</a> option: ElementHandle.uncheck.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-elementhandle-waitforelementstate" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-waitforelementstate" aria-hidden="true">#</a> async method: ElementHandle.waitForElementState</h2><ul><li>since: v1.8</li></ul><p>Returns when the element satisfies the [<code>param: state</code>].</p>',15),Ne=n("code",null,"param: state",-1),Ke=n("br",null,null,-1),Qe=n("code",null,'"hidden"',-1),Je=n("code",null,'"visible"',-1),Ye=n("code",null,'"hidden"',-1),Ge=n("br",null,null,-1),Xe=n("code",null,'"stable"',-1),Ze=n("br",null,null,-1),na=n("code",null,'"enabled"',-1),ea=n("code",null,'"disabled"',-1),aa=n("code",null,'"editable"',-1),sa=l(`<p>If the element does not satisfy the condition for the [<code>option: timeout</code>] milliseconds, this method will throw.</p><h3 id="param-elementhandle-waitforelementstate-state" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-waitforelementstate-state" aria-hidden="true">#</a> param: ElementHandle.waitForElementState.state</h3><ul><li>since: v1.8</li></ul><ul><li><code>state</code> &lt;[ElementState]&lt;&quot;visible&quot;|&quot;hidden&quot;|&quot;stable&quot;|&quot;enabled&quot;|&quot;disabled&quot;|&quot;editable&quot;&gt;&gt;</li></ul><p>A state to wait for, see below for more details.</p><h3 id="option-elementhandle-waitforelementstate-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-waitforelementstate-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.waitForElementState.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-elementhandle-waitforselector" tabindex="-1"><a class="header-anchor" href="#async-method-elementhandle-waitforselector" aria-hidden="true">#</a> async method: ElementHandle.waitForSelector</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[ElementHandle]&gt;</li></ul><p>Returns element specified by selector when it satisfies [<code>option: state</code>] option. Returns <code>null</code> if waiting for <code>hidden</code><br> or <code>detached</code>.</p><p>Wait for the [<code>param: selector</code>] relative to the element handle to satisfy [<code>option: state</code>] option (either<br> appear/disappear from dom, or become visible/hidden). If at the moment of calling the method [<code>param: selector</code>] already<br> satisfies the condition, the method will return immediately. If the selector doesn&#39;t satisfy the condition for the<br> [<code>option: timeout</code>] milliseconds, the function will throw.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> div <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Waiting for the &#39;span&#39; selector relative to the div.</span>
<span class="token keyword">const</span> span <span class="token operator">=</span> <span class="token keyword">await</span> div<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token string">&#39;attached&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ElementHandle</span> div <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Waiting for the &quot;span&quot; selector relative to the div.</span>
<span class="token class-name">ElementHandle</span> span <span class="token operator">=</span> div<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ElementHandle<span class="token punctuation">.</span>WaitForSelectorOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token class-name">WaitForSelectorState</span><span class="token punctuation">.</span><span class="token constant">ATTACHED</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span>
div <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># waiting for the &quot;span&quot; selector relative to the div.</span>
span <span class="token operator">=</span> <span class="token keyword">await</span> div<span class="token punctuation">.</span>wait_for_selector<span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">,</span> state<span class="token operator">=</span><span class="token string">&quot;attached&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span>
div <span class="token operator">=</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># waiting for the &quot;span&quot; selector relative to the div.</span>
span <span class="token operator">=</span> div<span class="token punctuation">.</span>wait_for_selector<span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">,</span> state<span class="token operator">=</span><span class="token string">&quot;attached&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetContentAsync</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> div <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">QuerySelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Waiting for the &quot;span&quot; selector relative to the div.</span>
<span class="token class-name"><span class="token keyword">var</span></span> span <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">WaitForSelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">,</span> WaitForSelectorState<span class="token punctuation">.</span>Attached<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">注</p><p>This method does not work across navigations, use [<code>method: Page.waitForSelector</code>] instead.</p></div><h3 id="param-elementhandle-waitforselector-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-elementhandle-waitforselector-selector-query-selector" aria-hidden="true">#</a> param: ElementHandle.waitForSelector.selector = %%-query-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-waitforselector-state-wait-for-selector-state" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-waitforselector-state-wait-for-selector-state" aria-hidden="true">#</a> option: ElementHandle.waitForSelector.state = %%-wait-for-selector-state-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-waitforselector-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-waitforselector-timeout-input-timeout" aria-hidden="true">#</a> option: ElementHandle.waitForSelector.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-elementhandle-waitforselector-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-elementhandle-waitforselector-strict-input-strict" aria-hidden="true">#</a> option: ElementHandle.waitForSelector.strict = %%-input-strict-%%</h3><ul><li>since: v1.15</li></ul>`,27);function ta(oa,la){const o=i("ExternalLinkIcon"),s=i("RouterLink");return c(),u("div",null,[r,n("p",null,[e("Scrolling affects the returned bounding box, similarly to"),h,n("a",k,[e("Element.getBoundingClientRect"),a(o)]),e(". That"),m,e(" means "),v,e(" and/or "),b,e(" may be negative.")]),n("p",null,[e("Elements from child frames return the bounding box relative to the main frame, unlike the"),g,n("a",f,[e("Element.getBoundingClientRect"),a(o)]),e(".")]),y,n("ol",null,[w,n("li",null,[e("Wait for "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks on the element, unless ["),_,e("] option is set.")]),q,x,E,H]),S,n("ol",null,[n("li",null,[e("Wait for "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks on the element, unless ["),A,e("] option is set.")]),T,j,W]),I,n("ol",null,[n("li",null,[e("Wait for "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks on the element, unless ["),O,e("] option is set.")]),P]),D,n("p",null,[e("The snippet below dispatches the "),U,e(" event on the element. Regardless of the visibility state of the element, "),F,C,e(" is dispatched. This is equivalent to calling"),z,n("a",M,[e("element.click()"),a(o)]),e(".")]),R,n("ul",null,[n("li",null,[n("a",L,[e("DragEvent"),a(o)])]),n("li",null,[n("a",B,[e("FocusEvent"),a(o)])]),n("li",null,[n("a",V,[e("KeyboardEvent"),a(o)])]),n("li",null,[n("a",$,[e("MouseEvent"),a(o)])]),n("li",null,[n("a",N,[e("PointerEvent"),a(o)])]),n("li",null,[n("a",K,[e("TouchEvent"),a(o)])]),n("li",null,[n("a",Q,[e("Event"),a(o)])])]),J,n("p",null,[e("This method waits for "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks, focuses the element, fills it and triggers an "),Y,e(" event after filling. Note that you can pass an empty string to clear the input field.")]),n("p",null,[e("If the target element is not an "),G,e(", "),X,e(" or "),Z,e(" element, this method throws an error. However, if the element is inside the "),nn,e(" element that has an associated "),n("a",en,[e("control"),a(o)]),e(", the control will be filled instead.")]),an,n("p",null,[e("Calls "),n("a",sn,[e("focus"),a(o)]),e(" on the element.")]),tn,on,ln,pn,n("h3",cn,[un,e(" param: "),n("a",dn,[e("ElementHandle.getAttribute.name"),a(o)])]),rn,hn,kn,mn,vn,bn,n("ol",null,[n("li",null,[e("Wait for "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks on the element, unless ["),gn,e("] option is set.")]),fn,yn,wn]),_n,n("p",null,[e("Throws for non-input elements. However, if the element is inside the "),qn,e(" element that has an associated "),n("a",xn,[e("control"),a(o)]),e(", returns the value of the control.")]),En,n("p",null,[e("Returns whether the element is disabled, the opposite of "),a(s,{to:"/book/playwright/actionability.html#enabled"},{default:t(()=>[e("enabled")]),_:1}),e(".")]),Hn,Sn,An,n("p",null,[e("Returns whether the element is "),a(s,{to:"/book/playwright/actionability.html#editable"},{default:t(()=>[e("editable")]),_:1}),e(".")]),Tn,jn,Wn,n("p",null,[e("Returns whether the element is "),a(s,{to:"/book/playwright/actionability.html#enabled"},{default:t(()=>[e("enabled")]),_:1}),e(".")]),In,On,Pn,n("p",null,[e("Returns whether the element is hidden, the opposite of "),a(s,{to:"/book/playwright/actionability.html#visible"},{default:t(()=>[e("visible")]),_:1}),e(".")]),Dn,Un,Fn,n("p",null,[e("Returns whether the element is "),a(s,{to:"/book/playwright/actionability.html#visible"},{default:t(()=>[e("visible")]),_:1}),e(".")]),Cn,n("p",null,[e("["),zn,e("] can specify the intended"),Mn,n("a",Rn,[e("keyboardEvent.key"),a(o)]),e(" value or a single character to"),Ln,e(" generate the text for. A superset of the ["),Bn,e("] values can be found"),Vn,n("a",$n,[e("here"),a(o)]),e(". Examples of the keys are:")]),Nn,n("p",null,[e("This method waits for the "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks, then scrolls element into view before taking a"),Kn,e(" screenshot. If the element is detached from DOM, the method throws an error.")]),Qn,Jn,Yn,Gn,Xn,n("p",null,[e("This method waits for "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks, then tries to scroll element into view, unless it is"),Zn,e(" completely visible as defined by"),ne,n("a",ee,[e("IntersectionObserver"),a(o)]),e("'s "),ae,e(".")]),n("p",null,[e("Throws when "),se,e(" does not point to an element"),te,n("a",oe,[e("connected"),a(o)]),e(" to a Document or a ShadowRoot.")]),le,ie,pe,ce,ue,n("p",null,[e("This method waits for "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks, waits until all specified options are present in the "),de,e(" element and selects these options.")]),n("p",null,[e("If the target element is not a "),re,e(" element, this method throws an error. However, if the element is inside the "),he,e(" element that has an associated "),n("a",ke,[e("control"),a(o)]),e(", the control will be used instead.")]),me,n("p",null,[e("This method waits for "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks, then focuses the element and selects all its text"),ve,e(" content.")]),n("p",null,[e("If the element is inside the "),be,e(" element that has an associated "),n("a",ge,[e("control"),a(o)]),e(", focuses and selects text in the control instead.")]),fe,n("ol",null,[ye,we,n("li",null,[e("Wait for "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks on the matched element, unless ["),_e,e("] option is"),qe,e(" set. If the element is detached during the checks, the whole action is retried.")]),xe,Ee,He,Se]),Ae,n("p",null,[e("This method expects [ElementHandle] to point to an"),Te,n("a",je,[e("input element"),a(o)]),e(". However, if the element is inside the "),We,e(" element that has an associated "),n("a",Ie,[e("control"),a(o)]),e(", targets the control instead.")]),Oe,n("ol",null,[n("li",null,[e("Wait for "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks on the element, unless ["),Pe,e("] option is set.")]),De,Ue,Fe]),Ce,n("ol",null,[ze,n("li",null,[e("Wait for "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks on the element, unless ["),Me,e("] option is set.")]),Re,Le,Be,Ve]),$e,n("p",null,[e("Depending on the ["),Ne,e("] parameter, this method waits for one of the "),a(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability")]),_:1}),e(" checks"),Ke,e(" to pass. This method throws when the element is detached while waiting, unless waiting for the "),Qe,e(" state.")]),n("ul",null,[n("li",null,[Je,e(" Wait until the element is "),a(s,{to:"/book/playwright/actionability.html#visible"},{default:t(()=>[e("visible")]),_:1}),e(".")]),n("li",null,[Ye,e(" Wait until the element is "),a(s,{to:"/book/playwright/actionability.html#visible"},{default:t(()=>[e("not visible")]),_:1}),e(" or"),Ge,a(s,{to:"/book/playwright/actionability.html#attached"},{default:t(()=>[e("not attached")]),_:1}),e(". Note that waiting for hidden does not throw when the element detaches.")]),n("li",null,[Xe,e(" Wait until the element is both "),a(s,{to:"/book/playwright/actionability.html#visible"},{default:t(()=>[e("visible")]),_:1}),e(" and"),Ze,a(s,{to:"/book/playwright/actionability.html#stable"},{default:t(()=>[e("stable")]),_:1}),e(".")]),n("li",null,[na,e(" Wait until the element is "),a(s,{to:"/book/playwright/actionability.html#enabled"},{default:t(()=>[e("enabled")]),_:1}),e(".")]),n("li",null,[ea,e(" Wait until the element is "),a(s,{to:"/book/playwright/actionability.html#enabled"},{default:t(()=>[e("not enabled")]),_:1}),e(".")]),n("li",null,[aa,e(" Wait until the element is "),a(s,{to:"/book/playwright/actionability.html#editable"},{default:t(()=>[e("editable")]),_:1}),e(".")])]),sa])}const ca=p(d,[["render",ta],["__file","class-elementhandle.html.vue"]]);export{ca as default};
