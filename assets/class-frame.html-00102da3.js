import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c as r,a as n,b as a,d as s,w as t,f as o}from"./app-207e7d61.js";const u={},d=o(`<h1 id="class-frame" tabindex="-1"><a class="header-anchor" href="#class-frame" aria-hidden="true">#</a> class: Frame</h1><ul><li>since: v1.8</li></ul><p>At every point of time, page exposes its current frame tree via the [<code>method: Page.mainFrame</code>] and<br> [<code>method: Frame.childFrames</code>] methods.</p><p>[Frame] object&#39;s lifecycle is controlled by three events, dispatched on the page object:</p><ul><li>[<code>event: Page.frameAttached</code>] - fired when the frame gets attached to the page. A Frame can be attached to the page<br> only once.</li><li>[<code>event: Page.frameNavigated</code>] - fired when the frame commits navigation to a different URL.</li><li>[<code>event: Page.frameDetached</code>] - fired when the frame gets detached from the page. A Frame can be detached from the<br> page only once.</li></ul><p>An example of dumping frame tree:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> firefox <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Or &#39;chromium&#39; or &#39;webkit&#39;.</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> firefox<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://www.google.com/chrome/browser/canary.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">dumpFrameTree</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">mainFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">dumpFrameTree</span><span class="token punctuation">(</span><span class="token parameter">frame<span class="token punctuation">,</span> indent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>indent <span class="token operator">+</span> frame<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> child <span class="token keyword">of</span> frame<span class="token punctuation">.</span><span class="token function">childFrames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">dumpFrameTree</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> indent <span class="token operator">+</span> <span class="token string">&#39;  &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>playwright<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Playwright</span> playwright <span class="token operator">=</span> <span class="token class-name">Playwright</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BrowserType</span> firefox <span class="token operator">=</span> playwright<span class="token punctuation">.</span><span class="token function">firefox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Browser</span> browser <span class="token operator">=</span> firefox<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Page</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.google.com/chrome/browser/canary.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">dumpFrameTree</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">mainFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">dumpFrameTree</span><span class="token punctuation">(</span><span class="token class-name">Frame</span> frame<span class="token punctuation">,</span> <span class="token class-name">String</span> indent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>indent <span class="token operator">+</span> frame<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Frame</span> child <span class="token operator">:</span> frame<span class="token punctuation">.</span><span class="token function">childFrames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">dumpFrameTree</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> indent <span class="token operator">+</span> <span class="token string">&quot;  &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    firefox <span class="token operator">=</span> playwright<span class="token punctuation">.</span>firefox
    browser <span class="token operator">=</span> <span class="token keyword">await</span> firefox<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://www.theverge.com&quot;</span><span class="token punctuation">)</span>
    dump_frame_tree<span class="token punctuation">(</span>page<span class="token punctuation">.</span>main_frame<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">dump_frame_tree</span><span class="token punctuation">(</span>frame<span class="token punctuation">,</span> indent<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>indent <span class="token operator">+</span> frame<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39;@&#39;</span> <span class="token operator">+</span> frame<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    <span class="token keyword">for</span> child <span class="token keyword">in</span> frame<span class="token punctuation">.</span>child_frames<span class="token punctuation">:</span>
        dump_frame_tree<span class="token punctuation">(</span>child<span class="token punctuation">,</span> indent <span class="token operator">+</span> <span class="token string">&quot;    &quot;</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    firefox <span class="token operator">=</span> playwright<span class="token punctuation">.</span>firefox
    browser <span class="token operator">=</span> firefox<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://www.theverge.com&quot;</span><span class="token punctuation">)</span>
    dump_frame_tree<span class="token punctuation">(</span>page<span class="token punctuation">.</span>main_frame<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
    browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">dump_frame_tree</span><span class="token punctuation">(</span>frame<span class="token punctuation">,</span> indent<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>indent <span class="token operator">+</span> frame<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39;@&#39;</span> <span class="token operator">+</span> frame<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    <span class="token keyword">for</span> child <span class="token keyword">in</span> frame<span class="token punctuation">.</span>child_frames<span class="token punctuation">:</span>
        dump_frame_tree<span class="token punctuation">(</span>child<span class="token punctuation">,</span> indent <span class="token operator">+</span> <span class="token string">&quot;    &quot;</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
    run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">FrameExamples</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Firefox<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.bing.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">DumpFrameTree</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>MainFrame<span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">DumpFrameTree</span><span class="token punctuation">(</span><span class="token class-name">IFrame</span> frame<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> indent<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">indent</span><span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">frame<span class="token punctuation">.</span>Url</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> child <span class="token keyword">in</span> frame<span class="token punctuation">.</span>ChildFrames<span class="token punctuation">)</span>
            <span class="token function">DumpFrameTree</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> indent <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-method-frame-addscripttag" tabindex="-1"><a class="header-anchor" href="#async-method-frame-addscripttag" aria-hidden="true">#</a> async method: Frame.addScriptTag</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[ElementHandle]&gt;</li></ul><p>Returns the added tag when the script&#39;s onload fires or when the script content was injected into frame.</p><p>Adds a <code>&lt;script&gt;</code> tag into the page with the desired url or content.</p><h3 id="option-frame-addscripttag-url" tabindex="-1"><a class="header-anchor" href="#option-frame-addscripttag-url" aria-hidden="true">#</a> option: Frame.addScriptTag.url</h3><ul><li>since: v1.8</li></ul><ul><li><code>url</code> &lt;[string]&gt;</li></ul><p>URL of a script to be added.</p><h3 id="option-frame-addscripttag-path" tabindex="-1"><a class="header-anchor" href="#option-frame-addscripttag-path" aria-hidden="true">#</a> option: Frame.addScriptTag.path</h3><ul><li>since: v1.8</li></ul><ul><li><code>path</code> &lt;[path]&gt;</li></ul><p>Path to the JavaScript file to be injected into frame. If <code>path</code> is a relative path, then it is resolved relative to the<br> current working directory.</p><h3 id="option-frame-addscripttag-content" tabindex="-1"><a class="header-anchor" href="#option-frame-addscripttag-content" aria-hidden="true">#</a> option: Frame.addScriptTag.content</h3><ul><li>since: v1.8</li></ul><ul><li><code>content</code> &lt;[string]&gt;</li></ul><p>Raw JavaScript content to be injected into frame.</p><h3 id="option-frame-addscripttag-type" tabindex="-1"><a class="header-anchor" href="#option-frame-addscripttag-type" aria-hidden="true">#</a> option: Frame.addScriptTag.type</h3><ul><li>since: v1.8</li></ul><ul><li><code>type</code> &lt;[string]&gt;</li></ul>`,31),k=n("br",null,null,-1),m={href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script",target:"_blank",rel:"noopener noreferrer"},h=o('<h2 id="async-method-frame-addstyletag" tabindex="-1"><a class="header-anchor" href="#async-method-frame-addstyletag" aria-hidden="true">#</a> async method: Frame.addStyleTag</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[ElementHandle]&gt;</li></ul><p>Returns the added tag when the stylesheet&#39;s onload fires or when the CSS content was injected into frame.</p><p>Adds a <code>&lt;link rel=&quot;stylesheet&quot;&gt;</code> tag into the page with the desired url or a <code>&lt;style type=&quot;text/css&quot;&gt;</code> tag with the<br> content.</p><h3 id="option-frame-addstyletag-url" tabindex="-1"><a class="header-anchor" href="#option-frame-addstyletag-url" aria-hidden="true">#</a> option: Frame.addStyleTag.url</h3><ul><li>since: v1.8</li></ul><ul><li><code>url</code> &lt;[string]&gt;</li></ul><p>URL of the <code>&lt;link&gt;</code> tag.</p><h3 id="option-frame-addstyletag-path" tabindex="-1"><a class="header-anchor" href="#option-frame-addstyletag-path" aria-hidden="true">#</a> option: Frame.addStyleTag.path</h3><ul><li>since: v1.8</li></ul><ul><li><code>path</code> &lt;[path]&gt;</li></ul><p>Path to the CSS file to be injected into frame. If <code>path</code> is a relative path, then it is resolved relative to the<br> current working directory.</p><h3 id="option-frame-addstyletag-content" tabindex="-1"><a class="header-anchor" href="#option-frame-addstyletag-content" aria-hidden="true">#</a> option: Frame.addStyleTag.content</h3><ul><li>since: v1.8</li></ul><ul><li><code>content</code> &lt;[string]&gt;</li></ul><p>Raw CSS content to be injected into frame.</p><h2 id="async-method-frame-check" tabindex="-1"><a class="header-anchor" href="#async-method-frame-check" aria-hidden="true">#</a> async method: Frame.check</h2>',18),v=n("li",null,"since: v1.8",-1),f=n("code",null,"method: Locator.check",-1),g=n("p",null,[a("This method checks an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),b=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),y=n("li",null,[a("Ensure that matched element is a checkbox or a radio input. If not, this method throws. If the element is already"),n("br"),a(" checked, this method returns immediately.")],-1),w=n("code",null,"option: force",-1),x=n("br",null,null,-1),_=n("li",null,"Scroll the element into view if needed.",-1),q=n("li",null,[a("Use ["),n("code",null,"property: Page.mouse"),a("] to click in the center of the element.")],-1),F=n("li",null,[a("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),a("] option is set.")],-1),j=n("li",null,"Ensure that the element is now checked. If not, this method throws.",-1),T=o('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="param-frame-check-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-check-selector-input-selector" aria-hidden="true">#</a> param: Frame.check.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-check-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-frame-check-force-input-force" aria-hidden="true">#</a> option: Frame.check.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-check-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-check-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.check.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-check-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-frame-check-position-input-position" aria-hidden="true">#</a> option: Frame.check.position = %%-input-position-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-frame-check-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-check-strict-input-strict" aria-hidden="true">#</a> option: Frame.check.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-check-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-check-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.check.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-check-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-frame-check-trial-input-trial" aria-hidden="true">#</a> option: Frame.check.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="method-frame-childframes" tabindex="-1"><a class="header-anchor" href="#method-frame-childframes" aria-hidden="true">#</a> method: Frame.childFrames</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Array]&lt;[Frame]&gt;&gt;</li></ul><h2 id="async-method-frame-click" tabindex="-1"><a class="header-anchor" href="#async-method-frame-click" aria-hidden="true">#</a> async method: Frame.click</h2>',19),S=n("li",null,"since: v1.8",-1),A=n("code",null,"method: Locator.click",-1),H=n("p",null,[a("This method clicks an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),L=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),E=n("code",null,"option: force",-1),U=n("br",null,null,-1),P=n("li",null,"Scroll the element into view if needed.",-1),R=n("li",null,[a("Use ["),n("code",null,"property: Page.mouse"),a("] to click in the center of the element, or the specified ["),n("code",null,"option: position"),a("].")],-1),W=n("li",null,[a("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),a("] option is set.")],-1),I=o('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="param-frame-click-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-click-selector-input-selector" aria-hidden="true">#</a> param: Frame.click.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-click-button-input-button" tabindex="-1"><a class="header-anchor" href="#option-frame-click-button-input-button" aria-hidden="true">#</a> option: Frame.click.button = %%-input-button-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-click-clickcount-input-click-count" tabindex="-1"><a class="header-anchor" href="#option-frame-click-clickcount-input-click-count" aria-hidden="true">#</a> option: Frame.click.clickCount = %%-input-click-count-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-click-delay-input-down-up-delay" tabindex="-1"><a class="header-anchor" href="#option-frame-click-delay-input-down-up-delay" aria-hidden="true">#</a> option: Frame.click.delay = %%-input-down-up-delay-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-click-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-frame-click-force-input-force" aria-hidden="true">#</a> option: Frame.click.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-click-modifiers-input-modifiers" tabindex="-1"><a class="header-anchor" href="#option-frame-click-modifiers-input-modifiers" aria-hidden="true">#</a> option: Frame.click.modifiers = %%-input-modifiers-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-click-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-click-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.click.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-click-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-frame-click-position-input-position" aria-hidden="true">#</a> option: Frame.click.position = %%-input-position-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-click-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-click-strict-input-strict" aria-hidden="true">#</a> option: Frame.click.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-click-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-click-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.click.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-click-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-frame-click-trial-input-trial" aria-hidden="true">#</a> option: Frame.click.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-frame-content" tabindex="-1"><a class="header-anchor" href="#async-method-frame-content" aria-hidden="true">#</a> async method: Frame.content</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Gets the full HTML contents of the frame, including the doctype.</p><h2 id="async-method-frame-dblclick" tabindex="-1"><a class="header-anchor" href="#async-method-frame-dblclick" aria-hidden="true">#</a> async method: Frame.dblclick</h2>',28),C=n("li",null,"since: v1.8",-1),O=n("code",null,"method: Locator.dblclick",-1),D=n("li",null,[a("langs: "),n("ul",null,[n("li",null,"alias-csharp: DblClickAsync")])],-1),M=n("p",null,[a("This method double clicks an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),B=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),z=n("code",null,"option: force",-1),N=n("br",null,null,-1),V=o("<li>Scroll the element into view if needed.</li><li>Use [<code>property: Page.mouse</code>] to double click in the center of the element, or the specified [<code>option: position</code>].</li><li>Wait for initiated navigations to either succeed or fail, unless [<code>option: noWaitAfter</code>] option is set. Note that<br> if the first click of the <code>dblclick()</code> triggers a navigation event, this method will throw.</li>",3),J=o('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><div class="hint-container note"><p class="hint-container-title">注</p><p><code>frame.dblclick()</code> dispatches two <code>click</code> events and a single <code>dblclick</code> event.</p></div><h3 id="param-frame-dblclick-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-dblclick-selector-input-selector" aria-hidden="true">#</a> param: Frame.dblclick.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-dblclick-button-input-button" tabindex="-1"><a class="header-anchor" href="#option-frame-dblclick-button-input-button" aria-hidden="true">#</a> option: Frame.dblclick.button = %%-input-button-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-dblclick-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-frame-dblclick-force-input-force" aria-hidden="true">#</a> option: Frame.dblclick.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-dblclick-delay-input-down-up-delay" tabindex="-1"><a class="header-anchor" href="#option-frame-dblclick-delay-input-down-up-delay" aria-hidden="true">#</a> option: Frame.dblclick.delay = %%-input-down-up-delay-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-dblclick-modifiers-input-modifiers" tabindex="-1"><a class="header-anchor" href="#option-frame-dblclick-modifiers-input-modifiers" aria-hidden="true">#</a> option: Frame.dblclick.modifiers = %%-input-modifiers-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-dblclick-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-dblclick-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.dblclick.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-dblclick-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-frame-dblclick-position-input-position" aria-hidden="true">#</a> option: Frame.dblclick.position = %%-input-position-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-dblclick-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-dblclick-strict-input-strict" aria-hidden="true">#</a> option: Frame.dblclick.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-dblclick-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-dblclick-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.dblclick.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-dblclick-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-frame-dblclick-trial-input-trial" aria-hidden="true">#</a> option: Frame.dblclick.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-frame-dispatchevent" tabindex="-1"><a class="header-anchor" href="#async-method-frame-dispatchevent" aria-hidden="true">#</a> async method: Frame.dispatchEvent</h2>',23),$=n("li",null,"since: v1.8",-1),K=n("code",null,"method: Locator.dispatchEvent",-1),G=n("code",null,"click",-1),Y=n("code",null,"click",-1),Z=n("br",null,null,-1),Q=n("br",null,null,-1),X={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click",target:"_blank",rel:"noopener noreferrer"},nn=o(`<p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&#39;button#submit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>frame<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&quot;button#submit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span>dispatch_event<span class="token punctuation">(</span><span class="token string">&quot;button#submit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>frame<span class="token punctuation">.</span>dispatch_event<span class="token punctuation">(</span><span class="token string">&quot;button#submit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">DispatchEventAsync</span><span class="token punctuation">(</span><span class="token string">&quot;button#submit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Under the hood, it creates an instance of an event based on the given [<code>param: type</code>], initializes it with<br> [<code>param: eventInit</code>] properties and dispatches it on the element. Events are <code>composed</code>, <code>cancelable</code> and bubble by<br> default.</p><p>Since [<code>param: eventInit</code>] is event-specific, please refer to the events documentation for the lists of initial<br> properties:</p>`,8),an={href:"https://developer.mozilla.org/en-US/docs/Web/API/DragEvent/DragEvent",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent/FocusEvent",target:"_blank",rel:"noopener noreferrer"},en={href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent",target:"_blank",rel:"noopener noreferrer"},on={href:"https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/PointerEvent",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/TouchEvent",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://developer.mozilla.org/en-US/docs/Web/API/Event/Event",target:"_blank",rel:"noopener noreferrer"},ln=o(`<p>You can also specify <code>JSHandle</code> as the property value if you want live objects to be passed into the event:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Note you can only create DataTransfer in Chromium and Firefox</span>
<span class="token keyword">const</span> dataTransfer <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">DataTransfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&#39;#source&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dragstart&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> dataTransfer <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Note you can only create DataTransfer in Chromium and Firefox</span>
<span class="token class-name">JSHandle</span> dataTransfer <span class="token operator">=</span> frame<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; new DataTransfer()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> arg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arg<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;dataTransfer&quot;</span><span class="token punctuation">,</span> dataTransfer<span class="token punctuation">)</span><span class="token punctuation">;</span>
frame<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dragstart&quot;</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># note you can only create data_transfer in chromium and firefox</span>
data_transfer <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;new DataTransfer()&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span>dispatch_event<span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dragstart&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&quot;dataTransfer&quot;</span><span class="token punctuation">:</span> data_transfer <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># note you can only create data_transfer in chromium and firefox</span>
data_transfer <span class="token operator">=</span> frame<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;new DataTransfer()&quot;</span><span class="token punctuation">)</span>
frame<span class="token punctuation">.</span>dispatch_event<span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dragstart&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&quot;dataTransfer&quot;</span><span class="token punctuation">:</span> data_transfer <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Note you can only create DataTransfer in Chromium and Firefox</span>
<span class="token class-name"><span class="token keyword">var</span></span> dataTransfer <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; new DataTransfer()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">DispatchEventAsync</span><span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dragstart&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> dataTransfer <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-frame-dispatchevent-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-dispatchevent-selector-input-selector" aria-hidden="true">#</a> param: Frame.dispatchEvent.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-dispatchevent-type" tabindex="-1"><a class="header-anchor" href="#param-frame-dispatchevent-type" aria-hidden="true">#</a> param: Frame.dispatchEvent.type</h3><ul><li>since: v1.8</li></ul><ul><li><code>type</code> &lt;[string]&gt;</li></ul><p>DOM event type: <code>&quot;click&quot;</code>, <code>&quot;dragstart&quot;</code>, etc.</p><h3 id="param-frame-dispatchevent-eventinit" tabindex="-1"><a class="header-anchor" href="#param-frame-dispatchevent-eventinit" aria-hidden="true">#</a> param: Frame.dispatchEvent.eventInit</h3><ul><li>since: v1.8</li></ul><ul><li><code>eventInit</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional event-specific initialization properties.</p><h3 id="option-frame-dispatchevent-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-dispatchevent-strict-input-strict" aria-hidden="true">#</a> option: Frame.dispatchEvent.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-dispatchevent-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-dispatchevent-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.dispatchEvent.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-draganddrop" tabindex="-1"><a class="header-anchor" href="#async-method-frame-draganddrop" aria-hidden="true">#</a> async method: Frame.dragAndDrop</h2><ul><li>since: v1.13</li></ul><h3 id="param-frame-draganddrop-source-input-source" tabindex="-1"><a class="header-anchor" href="#param-frame-draganddrop-source-input-source" aria-hidden="true">#</a> param: Frame.dragAndDrop.source = %%-input-source-%%</h3><ul><li>since: v1.13</li></ul><h3 id="param-frame-draganddrop-target-input-target" tabindex="-1"><a class="header-anchor" href="#param-frame-draganddrop-target-input-target" aria-hidden="true">#</a> param: Frame.dragAndDrop.target = %%-input-target-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-frame-draganddrop-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-frame-draganddrop-force-input-force" aria-hidden="true">#</a> option: Frame.dragAndDrop.force = %%-input-force-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-frame-draganddrop-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-draganddrop-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.dragAndDrop.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-frame-draganddrop-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-draganddrop-strict-input-strict" aria-hidden="true">#</a> option: Frame.dragAndDrop.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-draganddrop-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-draganddrop-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.dragAndDrop.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-frame-draganddrop-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-frame-draganddrop-trial-input-trial" aria-hidden="true">#</a> option: Frame.dragAndDrop.trial = %%-input-trial-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-frame-draganddrop-sourceposition-input-source-position" tabindex="-1"><a class="header-anchor" href="#option-frame-draganddrop-sourceposition-input-source-position" aria-hidden="true">#</a> option: Frame.dragAndDrop.sourcePosition = %%-input-source-position-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-draganddrop-targetposition-input-target-position" tabindex="-1"><a class="header-anchor" href="#option-frame-draganddrop-targetposition-input-target-position" aria-hidden="true">#</a> option: Frame.dragAndDrop.targetPosition = %%-input-target-position-%%</h3><ul><li>since: v1.14</li></ul><h2 id="async-method-frame-evalonselector" tabindex="-1"><a class="header-anchor" href="#async-method-frame-evalonselector" aria-hidden="true">#</a> async method: Frame.evalOnSelector</h2><ul><li>since: v1.9</li><li>discouraged: This method does not wait for the element to pass the actionability<br> checks and therefore can lead to the flaky tests. Use [<code>method: Locator.evaluate</code>], other [Locator] helper methods or web-first assertions instead.</li><li>langs: <ul><li>alias-python: eval_on_selector</li><li>alias-js: $eval</li></ul></li></ul><ul><li>returns: &lt;[Serializable]&gt;</li></ul><p>Returns the return value of [<code>param: expression</code>].</p><p>The method finds an element matching the specified selector within the frame and passes it as a first argument to<br> [<code>param: expression</code>]. If no<br> elements match the selector, the method throws an error.</p><p>If [<code>param: expression</code>] returns a [Promise], then [<code>method: Frame.evalOnSelector</code>] would wait for the promise to resolve and return its<br> value.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> searchValue <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">$eval</span><span class="token punctuation">(</span><span class="token string">&#39;#search&#39;</span><span class="token punctuation">,</span> <span class="token parameter">el</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> preloadHref <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">$eval</span><span class="token punctuation">(</span><span class="token string">&#39;link[rel=preload]&#39;</span><span class="token punctuation">,</span> <span class="token parameter">el</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">$eval</span><span class="token punctuation">(</span><span class="token string">&#39;.main-container&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> suffix</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>outerHTML <span class="token operator">+</span> suffix<span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> searchValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> frame<span class="token punctuation">.</span><span class="token function">evalOnSelector</span><span class="token punctuation">(</span><span class="token string">&quot;#search&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> preloadHref <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> frame<span class="token punctuation">.</span><span class="token function">evalOnSelector</span><span class="token punctuation">(</span><span class="token string">&quot;link[rel=preload]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> html <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> frame<span class="token punctuation">.</span><span class="token function">evalOnSelector</span><span class="token punctuation">(</span><span class="token string">&quot;.main-container&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(e, suffix) =&gt; e.outerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>search_value <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;#search&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.value&quot;</span><span class="token punctuation">)</span>
preload_href <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;link[rel=preload]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.href&quot;</span><span class="token punctuation">)</span>
html <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;.main-container&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(e, suffix) =&gt; e.outerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>search_value <span class="token operator">=</span> frame<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;#search&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.value&quot;</span><span class="token punctuation">)</span>
preload_href <span class="token operator">=</span> frame<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;link[rel=preload]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.href&quot;</span><span class="token punctuation">)</span>
html <span class="token operator">=</span> frame<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;.main-container&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(e, suffix) =&gt; e.outerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> searchValue <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvalOnSelectorAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;#search&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> preloadHref <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvalOnSelectorAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;link[rel=preload]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> html <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">EvalOnSelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;.main-container&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(e, suffix) =&gt; e.outerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-frame-evalonselector-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-evalonselector-selector-query-selector" aria-hidden="true">#</a> param: Frame.evalOnSelector.selector = %%-query-selector-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-frame-evalonselector-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-frame-evalonselector-expression-evaluate-expression" aria-hidden="true">#</a> param: Frame.evalOnSelector.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-frame-evalonselector-expression-js-evalonselector-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-frame-evalonselector-expression-js-evalonselector-pagefunction" aria-hidden="true">#</a> param: Frame.evalOnSelector.expression = %%-js-evalonselector-pagefunction-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-frame-evalonselector-arg" tabindex="-1"><a class="header-anchor" href="#param-frame-evalonselector-arg" aria-hidden="true">#</a> param: Frame.evalOnSelector.arg</h3><ul><li>since: v1.9</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h3 id="option-frame-evalonselector-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-evalonselector-strict-input-strict" aria-hidden="true">#</a> option: Frame.evalOnSelector.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h2 id="async-method-frame-evalonselectorall" tabindex="-1"><a class="header-anchor" href="#async-method-frame-evalonselectorall" aria-hidden="true">#</a> async method: Frame.evalOnSelectorAll</h2><ul><li>since: v1.9</li><li>discouraged: In most cases, [<code>method: Locator.evaluateAll</code>],<br> other [Locator] helper methods and web-first assertions do a better job.</li><li>langs: <ul><li>alias-python: eval_on_selector_all</li><li>alias-js: $$eval</li></ul></li></ul><ul><li>returns: &lt;[Serializable]&gt;</li></ul><p>Returns the return value of [<code>param: expression</code>].</p><p>The method finds all elements matching the specified selector within the frame and passes an array of matched elements<br> as a first argument to [<code>param: expression</code>].</p><p>If [<code>param: expression</code>] returns a [Promise], then [<code>method: Frame.evalOnSelectorAll</code>] would wait for the promise to resolve and return its<br> value.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> divsCounts <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">$$eval</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">divs<span class="token punctuation">,</span> min</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> divs<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> min<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> divsCounts <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">)</span> page<span class="token punctuation">.</span><span class="token function">evalOnSelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(divs, min) =&gt; divs.length &gt;= min&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>divs_counts <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span>eval_on_selector_all<span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(divs, min) =&gt; divs.length &gt;= min&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>divs_counts <span class="token operator">=</span> frame<span class="token punctuation">.</span>eval_on_selector_all<span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(divs, min) =&gt; divs.length &gt;= min&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> divsCount <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvalOnSelectorAllAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(divs, min) =&gt; divs.length &gt;= min&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="param-frame-evalonselectorall-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-evalonselectorall-selector-query-selector" aria-hidden="true">#</a> param: Frame.evalOnSelectorAll.selector = %%-query-selector-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-frame-evalonselectorall-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-frame-evalonselectorall-expression-evaluate-expression" aria-hidden="true">#</a> param: Frame.evalOnSelectorAll.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-frame-evalonselectorall-expression-js-evalonselectorall-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-frame-evalonselectorall-expression-js-evalonselectorall-pagefunction" aria-hidden="true">#</a> param: Frame.evalOnSelectorAll.expression = %%-js-evalonselectorall-pagefunction-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-frame-evalonselectorall-arg" tabindex="-1"><a class="header-anchor" href="#param-frame-evalonselectorall-arg" aria-hidden="true">#</a> param: Frame.evalOnSelectorAll.arg</h3><ul><li>since: v1.9</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h2 id="async-method-frame-evaluate" tabindex="-1"><a class="header-anchor" href="#async-method-frame-evaluate" aria-hidden="true">#</a> async method: Frame.evaluate</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Serializable]&gt;</li></ul><p>Returns the return value of [<code>param: expression</code>].</p><p>If the function passed to the [<code>method: Frame.evaluate</code>] returns a [Promise], then [<code>method: Frame.evaluate</code>] would wait for the promise to<br> resolve and return its value.</p><p>If the function passed to the [<code>method: Frame.evaluate</code>] returns a non-[Serializable] value, then<br> [<code>method: Frame.evaluate</code>] returns <code>undefined</code>. Playwright also supports transferring some<br> additional values that are not serializable by <code>JSON</code>: <code>-0</code>, <code>NaN</code>, <code>Infinity</code>, <code>-Infinity</code>.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>x <span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints &quot;56&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Object</span> result <span class="token operator">=</span> frame<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;([x, y]) =&gt; {\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  return Promise.resolve(x * y);\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints &quot;56&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>result <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;([x, y]) =&gt; Promise.resolve(x * y)&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># prints &quot;56&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>result <span class="token operator">=</span> frame<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;([x, y]) =&gt; Promise.resolve(x * y)&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># prints &quot;56&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvaluateAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;([x, y]) =&gt; Promise.resolve(x * y)&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>A string can also be passed in instead of a function.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&#39;1 + 2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints &quot;3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;1 + 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints &quot;3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> frame<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;1 + 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># prints &quot;3&quot;</span>
x <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> frame<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;1 + </span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># prints &quot;11&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;1 + 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># prints &quot;3&quot;</span>
x <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;1 + </span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># prints &quot;11&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvaluateAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;1 + 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints &quot;3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>[ElementHandle] instances can be passed as an argument to the [<code>method: Frame.evaluate</code>]:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> bodyHandle <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&#39;document.body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>body<span class="token punctuation">,</span> suffix<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> body<span class="token punctuation">.</span>innerHTML <span class="token operator">+</span> suffix<span class="token punctuation">,</span> <span class="token punctuation">[</span>bodyHandle<span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> bodyHandle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ElementHandle</span> bodyHandle <span class="token operator">=</span> frame<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;document.body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> html <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> frame<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;([body, suffix]) =&gt; body.innerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>bodyHandle<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bodyHandle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>body_handle <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;document.body&quot;</span><span class="token punctuation">)</span>
html <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;([body, suffix]) =&gt; body.innerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>body_handle<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> body_handle<span class="token punctuation">.</span>dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>body_handle <span class="token operator">=</span> frame<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;document.body&quot;</span><span class="token punctuation">)</span>
html <span class="token operator">=</span> frame<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;([body, suffix]) =&gt; body.innerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>body_handle<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
body_handle<span class="token punctuation">.</span>dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> bodyHandle <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;document.body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> html <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvaluateAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;([body, suffix]) =&gt; body.innerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">object</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> bodyHandle<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> bodyHandle<span class="token punctuation">.</span><span class="token function">DisposeAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-frame-evaluate-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-frame-evaluate-expression-evaluate-expression" aria-hidden="true">#</a> param: Frame.evaluate.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-evaluate-expression-js-evaluate-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-frame-evaluate-expression-js-evaluate-pagefunction" aria-hidden="true">#</a> param: Frame.evaluate.expression = %%-js-evaluate-pagefunction-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-evaluate-arg" tabindex="-1"><a class="header-anchor" href="#param-frame-evaluate-arg" aria-hidden="true">#</a> param: Frame.evaluate.arg</h3><ul><li>since: v1.8</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h2 id="async-method-frame-evaluatehandle" tabindex="-1"><a class="header-anchor" href="#async-method-frame-evaluatehandle" aria-hidden="true">#</a> async method: Frame.evaluateHandle</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[JSHandle]&gt;</li></ul><p>Returns the return value of [<code>param: expression</code>] as a [JSHandle].</p><p>The only difference between [<code>method: Frame.evaluate</code>] and [<code>method: Frame.evaluateHandle</code>] is that<br> [<code>method: Frame.evaluateHandle</code>] returns [JSHandle].</p><p>If the function, passed to the [<code>method: Frame.evaluateHandle</code>], returns a [Promise], then<br> [<code>method: Frame.evaluateHandle</code>] would wait for the promise to resolve and return its value.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> aWindowHandle <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
aWindowHandle<span class="token punctuation">;</span> <span class="token comment">// Handle for the window object.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Handle for the window object.</span>
<span class="token class-name">JSHandle</span> aWindowHandle <span class="token operator">=</span> frame<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; Promise.resolve(window)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a_window_handle <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;Promise.resolve(window)&quot;</span><span class="token punctuation">)</span>
a_window_handle <span class="token comment"># handle for the window object.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a_window_handle <span class="token operator">=</span> frame<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;Promise.resolve(window)&quot;</span><span class="token punctuation">)</span>
a_window_handle <span class="token comment"># handle for the window object.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Handle for the window object.</span>
<span class="token class-name"><span class="token keyword">var</span></span> aWindowHandle <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; Promise.resolve(window)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>A string can also be passed in instead of a function.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> aHandle <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&#39;document&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Handle for the &#39;document&#39;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">JSHandle</span> aHandle <span class="token operator">=</span> frame<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Handle for the &quot;document&quot;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">)</span> <span class="token comment"># handle for the &quot;document&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">)</span> <span class="token comment"># handle for the &quot;document&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> docHandle <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Handle for the \`document\`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>[JSHandle] instances can be passed as an argument to the [<code>method: Frame.evaluateHandle</code>]:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> aHandle <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> resultHandle <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>body<span class="token punctuation">,</span> suffix<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> body<span class="token punctuation">.</span>innerHTML <span class="token operator">+</span> suffix<span class="token punctuation">,</span> <span class="token punctuation">[</span>aHandle<span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> resultHandle<span class="token punctuation">.</span><span class="token function">jsonValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> resultHandle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">JSHandle</span> aHandle <span class="token operator">=</span> frame<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; document.body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">JSHandle</span> resultHandle <span class="token operator">=</span> frame<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;([body, suffix]) =&gt; body.innerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>aHandle<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resultHandle<span class="token punctuation">.</span><span class="token function">jsonValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
resultHandle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;document.body&quot;</span><span class="token punctuation">)</span>
result_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;body =&gt; body.innerHTML&quot;</span><span class="token punctuation">,</span> a_handle<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> result_handle<span class="token punctuation">.</span>json_value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> result_handle<span class="token punctuation">.</span>dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;document.body&quot;</span><span class="token punctuation">)</span>
result_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;body =&gt; body.innerHTML&quot;</span><span class="token punctuation">,</span> a_handle<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result_handle<span class="token punctuation">.</span>json_value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
result_handle<span class="token punctuation">.</span>dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> handle <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; document.body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> resultHandle <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;([body, suffix]) =&gt; body.innerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> handle<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> resultHandle<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">JsonValueAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> resultHandle<span class="token punctuation">.</span><span class="token function">DisposeAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-frame-evaluatehandle-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-frame-evaluatehandle-expression-evaluate-expression" aria-hidden="true">#</a> param: Frame.evaluateHandle.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-evaluatehandle-expression-js-evaluate-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-frame-evaluatehandle-expression-js-evaluate-pagefunction" aria-hidden="true">#</a> param: Frame.evaluateHandle.expression = %%-js-evaluate-pagefunction-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-evaluatehandle-arg" tabindex="-1"><a class="header-anchor" href="#param-frame-evaluatehandle-arg" aria-hidden="true">#</a> param: Frame.evaluateHandle.arg</h3><ul><li>since: v1.8</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h2 id="async-method-frame-fill" tabindex="-1"><a class="header-anchor" href="#async-method-frame-fill" aria-hidden="true">#</a> async method: Frame.fill</h2>`,151),rn=n("li",null,"since: v1.8",-1),un=n("code",null,"method: Locator.fill",-1),dn=n("code",null,"param: selector",-1),kn=n("code",null,"input",-1),mn=n("code",null,"<input>",-1),hn=n("code",null,"<textarea>",-1),vn=n("code",null,"[contenteditable]",-1),fn=n("code",null,"<label>",-1),gn={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},bn=o('<p>To send fine-grained keyboard events, use [<code>method: Frame.type</code>].</p><h3 id="param-frame-fill-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-fill-selector-input-selector" aria-hidden="true">#</a> param: Frame.fill.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-fill-value" tabindex="-1"><a class="header-anchor" href="#param-frame-fill-value" aria-hidden="true">#</a> param: Frame.fill.value</h3><ul><li>since: v1.8</li></ul><ul><li><code>value</code> &lt;[string]&gt;</li></ul><p>Value to fill for the <code>&lt;input&gt;</code>, <code>&lt;textarea&gt;</code> or <code>[contenteditable]</code> element.</p><h3 id="option-frame-fill-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-frame-fill-force-input-force" aria-hidden="true">#</a> option: Frame.fill.force = %%-input-force-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-frame-fill-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-fill-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.fill.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-fill-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-fill-strict-input-strict" aria-hidden="true">#</a> option: Frame.fill.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-fill-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-fill-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.fill.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-focus" tabindex="-1"><a class="header-anchor" href="#async-method-frame-focus" aria-hidden="true">#</a> async method: Frame.focus</h2>',16),yn=n("li",null,"since: v1.8",-1),wn=n("code",null,"method: Locator.focus",-1),xn=o(`<p>This method fetches an element with [<code>param: selector</code>] and focuses it. If there&#39;s no element matching<br> [<code>param: selector</code>], the method waits until a matching element appears in the DOM.</p><h3 id="param-frame-focus-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-focus-selector-input-selector" aria-hidden="true">#</a> param: Frame.focus.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-focus-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-focus-strict-input-strict" aria-hidden="true">#</a> option: Frame.focus.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-focus-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-focus-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.focus.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-frameelement" tabindex="-1"><a class="header-anchor" href="#async-method-frame-frameelement" aria-hidden="true">#</a> async method: Frame.frameElement</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[ElementHandle]&gt;</li></ul><p>Returns the <code>frame</code> or <code>iframe</code> element handle which corresponds to this frame.</p><p>This is an inverse of [<code>method: ElementHandle.contentFrame</code>]. Note that returned handle actually belongs to the parent<br> frame.</p><p>This method throws an error if the frame has been detached before <code>frameElement()</code> returns.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> frameElement <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">frameElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> contentFrame <span class="token operator">=</span> <span class="token keyword">await</span> frameElement<span class="token punctuation">.</span><span class="token function">contentFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>frame <span class="token operator">===</span> contentFrame<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// -&gt; true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ElementHandle</span> frameElement <span class="token operator">=</span> frame<span class="token punctuation">.</span><span class="token function">frameElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Frame</span> contentFrame <span class="token operator">=</span> frameElement<span class="token punctuation">.</span><span class="token function">contentFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>frame <span class="token operator">==</span> contentFrame<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// -&gt; true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>frame_element <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span>frame_element<span class="token punctuation">(</span><span class="token punctuation">)</span>
content_frame <span class="token operator">=</span> <span class="token keyword">await</span> frame_element<span class="token punctuation">.</span>content_frame<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> frame <span class="token operator">==</span> content_frame
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>frame_element <span class="token operator">=</span> frame<span class="token punctuation">.</span>frame_element<span class="token punctuation">(</span><span class="token punctuation">)</span>
content_frame <span class="token operator">=</span> frame_element<span class="token punctuation">.</span>content_frame<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> frame <span class="token operator">==</span> content_frame
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> frameElement <span class="token operator">=</span> <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">FrameElementAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> contentFrame <span class="token operator">=</span> <span class="token keyword">await</span> frameElement<span class="token punctuation">.</span><span class="token function">ContentFrameAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>frame <span class="token operator">==</span> contentFrame<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -&gt; True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="method-frame-framelocator" tabindex="-1"><a class="header-anchor" href="#method-frame-framelocator" aria-hidden="true">#</a> method: Frame.frameLocator</h2><ul><li>since: v1.17</li></ul><ul><li>returns: &lt;[FrameLocator]&gt;</li></ul><p>When working with iframes, you can create a frame locator that will enter the iframe and allow selecting elements<br> in that iframe.</p><p><strong>Usage</strong></p><p>Following snippet locates element with text &quot;Submit&quot; in the iframe with id <code>my-frame</code>, like <code>&lt;iframe id=&quot;my-frame&quot;&gt;</code>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> frame<span class="token punctuation">.</span><span class="token function">frameLocator</span><span class="token punctuation">(</span><span class="token string">&#39;#my-iframe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Locator</span> locator <span class="token operator">=</span> frame<span class="token punctuation">.</span><span class="token function">frameLocator</span><span class="token punctuation">(</span><span class="token string">&quot;#my-iframe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
locator<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>locator <span class="token operator">=</span> frame<span class="token punctuation">.</span>frame_locator<span class="token punctuation">(</span><span class="token string">&quot;#my-iframe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>locator <span class="token operator">=</span> frame<span class="token punctuation">.</span>frame_locator<span class="token punctuation">(</span><span class="token string">&quot;#my-iframe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span>
locator<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> frame<span class="token punctuation">.</span><span class="token function">FrameLocator</span><span class="token punctuation">(</span><span class="token string">&quot;#my-iframe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-frame-framelocator-selector-find-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-framelocator-selector-find-selector" aria-hidden="true">#</a> param: Frame.frameLocator.selector = %%-find-selector-%%</h3><ul><li>since: v1.17</li></ul><h2 id="async-method-frame-getattribute" tabindex="-1"><a class="header-anchor" href="#async-method-frame-getattribute" aria-hidden="true">#</a> async method: Frame.getAttribute</h2>`,33),_n=n("li",null,"since: v1.8",-1),qn=n("code",null,"method: Locator.getAttribute",-1),Fn=n("ul",null,[n("li",null,"returns: <[null]|[string]>")],-1),jn=n("p",null,"Returns element attribute value.",-1),Tn=n("h3",{id:"param-frame-getattribute-selector-input-selector",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#param-frame-getattribute-selector-input-selector","aria-hidden":"true"},"#"),a(" param: Frame.getAttribute.selector = %%-input-selector-%%")],-1),Sn=n("ul",null,[n("li",null,"since: v1.8")],-1),An={id:"param-frame-getattribute-name",tabindex:"-1"},Hn=n("a",{class:"header-anchor",href:"#param-frame-getattribute-name","aria-hidden":"true"},"#",-1),Ln={href:"http://Frame.getAttribute.name",target:"_blank",rel:"noopener noreferrer"},En=o('<ul><li>since: v1.8</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Attribute name to get the value for.</p><h3 id="option-frame-getattribute-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-getattribute-strict-input-strict" aria-hidden="true">#</a> option: Frame.getAttribute.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-getattribute-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-getattribute-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.getAttribute.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="method-frame-getbyalttext" tabindex="-1"><a class="header-anchor" href="#method-frame-getbyalttext" aria-hidden="true">#</a> method: Frame.getByAltText</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-alt-text-%%</p><h3 id="param-frame-getbyalttext-text-locator-get-by-text-text" tabindex="-1"><a class="header-anchor" href="#param-frame-getbyalttext-text-locator-get-by-text-text" aria-hidden="true">#</a> param: Frame.getByAltText.text = %%-locator-get-by-text-text-%%</h3><h3 id="option-frame-getbyalttext-exact-locator-get-by-text-exact" tabindex="-1"><a class="header-anchor" href="#option-frame-getbyalttext-exact-locator-get-by-text-exact" aria-hidden="true">#</a> option: Frame.getByAltText.exact = %%-locator-get-by-text-exact-%%</h3><h2 id="method-frame-getbylabel" tabindex="-1"><a class="header-anchor" href="#method-frame-getbylabel" aria-hidden="true">#</a> method: Frame.getByLabel</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-label-text-%%</p><h3 id="param-frame-getbylabel-text-locator-get-by-text-text" tabindex="-1"><a class="header-anchor" href="#param-frame-getbylabel-text-locator-get-by-text-text" aria-hidden="true">#</a> param: Frame.getByLabel.text = %%-locator-get-by-text-text-%%</h3><h3 id="option-frame-getbylabel-exact-locator-get-by-text-exact" tabindex="-1"><a class="header-anchor" href="#option-frame-getbylabel-exact-locator-get-by-text-exact" aria-hidden="true">#</a> option: Frame.getByLabel.exact = %%-locator-get-by-text-exact-%%</h3><h2 id="method-frame-getbyplaceholder" tabindex="-1"><a class="header-anchor" href="#method-frame-getbyplaceholder" aria-hidden="true">#</a> method: Frame.getByPlaceholder</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-placeholder-text-%%</p><h3 id="param-frame-getbyplaceholder-text-locator-get-by-text-text" tabindex="-1"><a class="header-anchor" href="#param-frame-getbyplaceholder-text-locator-get-by-text-text" aria-hidden="true">#</a> param: Frame.getByPlaceholder.text = %%-locator-get-by-text-text-%%</h3><h3 id="option-frame-getbyplaceholder-exact-locator-get-by-text-exact" tabindex="-1"><a class="header-anchor" href="#option-frame-getbyplaceholder-exact-locator-get-by-text-exact" aria-hidden="true">#</a> option: Frame.getByPlaceholder.exact = %%-locator-get-by-text-exact-%%</h3><h2 id="method-frame-getbyrole" tabindex="-1"><a class="header-anchor" href="#method-frame-getbyrole" aria-hidden="true">#</a> method: Frame.getByRole</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-role-%%</p><h3 id="param-frame-getbyrole-role-locator-get-by-role-role" tabindex="-1"><a class="header-anchor" href="#param-frame-getbyrole-role-locator-get-by-role-role" aria-hidden="true">#</a> param: Frame.getByRole.role = %%-locator-get-by-role-role-%%</h3><h3 id="option-frame-getbyrole-inline-locator-get-by-role-option-list-v1-27" tabindex="-1"><a class="header-anchor" href="#option-frame-getbyrole-inline-locator-get-by-role-option-list-v1-27" aria-hidden="true">#</a> option: Frame.getByRole.-inline- = %%-locator-get-by-role-option-list-v1.27-%%</h3><ul><li>since: v1.27</li></ul><h3 id="option-frame-getbyrole-exact-locator-get-by-role-option-exact" tabindex="-1"><a class="header-anchor" href="#option-frame-getbyrole-exact-locator-get-by-role-option-exact" aria-hidden="true">#</a> option: Frame.getByRole.exact = %%-locator-get-by-role-option-exact-%%</h3><h2 id="method-frame-getbytestid" tabindex="-1"><a class="header-anchor" href="#method-frame-getbytestid" aria-hidden="true">#</a> method: Frame.getByTestId</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-test-id-%%</p><h3 id="param-frame-getbytestid-testid-locator-get-by-test-id-test-id" tabindex="-1"><a class="header-anchor" href="#param-frame-getbytestid-testid-locator-get-by-test-id-test-id" aria-hidden="true">#</a> param: Frame.getByTestId.testId = %%-locator-get-by-test-id-test-id-%%</h3><ul><li>since: v1.27</li></ul><h2 id="method-frame-getbytext" tabindex="-1"><a class="header-anchor" href="#method-frame-getbytext" aria-hidden="true">#</a> method: Frame.getByText</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-text-%%</p><h3 id="param-frame-getbytext-text-locator-get-by-text-text" tabindex="-1"><a class="header-anchor" href="#param-frame-getbytext-text-locator-get-by-text-text" aria-hidden="true">#</a> param: Frame.getByText.text = %%-locator-get-by-text-text-%%</h3><h3 id="option-frame-getbytext-exact-locator-get-by-text-exact" tabindex="-1"><a class="header-anchor" href="#option-frame-getbytext-exact-locator-get-by-text-exact" aria-hidden="true">#</a> option: Frame.getByText.exact = %%-locator-get-by-text-exact-%%</h3><h2 id="method-frame-getbytitle" tabindex="-1"><a class="header-anchor" href="#method-frame-getbytitle" aria-hidden="true">#</a> method: Frame.getByTitle</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-title-%%</p><h3 id="param-frame-getbytitle-text-locator-get-by-text-text" tabindex="-1"><a class="header-anchor" href="#param-frame-getbytitle-text-locator-get-by-text-text" aria-hidden="true">#</a> param: Frame.getByTitle.text = %%-locator-get-by-text-text-%%</h3><h3 id="option-frame-getbytitle-exact-locator-get-by-text-exact" tabindex="-1"><a class="header-anchor" href="#option-frame-getbytitle-exact-locator-get-by-text-exact" aria-hidden="true">#</a> option: Frame.getByTitle.exact = %%-locator-get-by-text-exact-%%</h3><h2 id="async-method-frame-goto" tabindex="-1"><a class="header-anchor" href="#async-method-frame-goto" aria-hidden="true">#</a> async method: Frame.goto</h2><ul><li>since: v1.8</li><li>langs: <ul><li>alias-java: navigate</li></ul></li></ul><ul><li>returns: &lt;[null]|[Response]&gt;</li></ul><p>Returns the main resource response. In case of multiple redirects, the navigation will resolve with the response of the<br> last redirect.</p><p>The method will throw an error if:</p><ul><li>there&#39;s an SSL error (e.g. in case of self-signed certificates).</li><li>target URL is invalid.</li><li>the [<code>option: timeout</code>] is exceeded during navigation.</li><li>the remote server does not respond or is unreachable.</li><li>the main resource failed to load.</li></ul><p>The method will not throw an error when any valid HTTP status code is returned by the remote server, including 404<br> &quot;Not Found&quot; and 500 &quot;Internal Server Error&quot;. The status code for such responses can be retrieved by calling<br> [<code>method: Response.status</code>].</p><div class="hint-container note"><p class="hint-container-title">注</p><p>The method either throws an error or returns a main resource response. The only exceptions are navigation to<br><code>about:blank</code> or navigation to the same URL with a different hash, which would succeed and return <code>null</code>.</p></div>',59),Un={class:"hint-container note"},Pn=n("p",{class:"hint-container-title"},"注",-1),Rn=n("br",null,null,-1),Wn={href:"https://bugs.chromium.org/p/chromium/issues/detail?id=761295",target:"_blank",rel:"noopener noreferrer"},In=o('<h3 id="param-frame-goto-url" tabindex="-1"><a class="header-anchor" href="#param-frame-goto-url" aria-hidden="true">#</a> param: Frame.goto.url</h3><ul><li>since: v1.8</li></ul><ul><li><code>url</code> &lt;[string]&gt;</li></ul><p>URL to navigate frame to. The url should include scheme, e.g. <code>https://</code>.</p><h3 id="option-frame-goto-waituntil-navigation-wait-until" tabindex="-1"><a class="header-anchor" href="#option-frame-goto-waituntil-navigation-wait-until" aria-hidden="true">#</a> option: Frame.goto.waitUntil = %%-navigation-wait-until-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-goto-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-goto-timeout-navigation-timeout" aria-hidden="true">#</a> option: Frame.goto.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-goto-referer" tabindex="-1"><a class="header-anchor" href="#option-frame-goto-referer" aria-hidden="true">#</a> option: Frame.goto.referer</h3><ul><li>since: v1.8</li></ul><ul><li><code>referer</code> &lt;[string]&gt;</li></ul><p>Referer header value. If provided it will take preference over the referer header value set by<br> [<code>method: Page.setExtraHTTPHeaders</code>].</p><h2 id="async-method-frame-hover" tabindex="-1"><a class="header-anchor" href="#async-method-frame-hover" aria-hidden="true">#</a> async method: Frame.hover</h2>',13),Cn=n("li",null,"since: v1.8",-1),On=n("code",null,"method: Locator.hover",-1),Dn=n("p",null,[a("This method hovers over an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),Mn=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),Bn=n("code",null,"option: force",-1),zn=n("br",null,null,-1),Nn=n("li",null,"Scroll the element into view if needed.",-1),Vn=n("li",null,[a("Use ["),n("code",null,"property: Page.mouse"),a("] to hover over the center of the element, or the specified ["),n("code",null,"option: position"),a("].")],-1),Jn=n("li",null,[a("Wait for initiated navigations to either succeed or fail, unless "),n("code",null,"noWaitAfter"),a(" option is set.")],-1),$n=o('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="param-frame-hover-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-hover-selector-input-selector" aria-hidden="true">#</a> param: Frame.hover.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-hover-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-frame-hover-position-input-position" aria-hidden="true">#</a> option: Frame.hover.position = %%-input-position-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-hover-modifiers-input-modifiers" tabindex="-1"><a class="header-anchor" href="#option-frame-hover-modifiers-input-modifiers" aria-hidden="true">#</a> option: Frame.hover.modifiers = %%-input-modifiers-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-hover-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-frame-hover-force-input-force" aria-hidden="true">#</a> option: Frame.hover.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-hover-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-hover-strict-input-strict" aria-hidden="true">#</a> option: Frame.hover.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-hover-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-hover-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.hover.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-hover-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-frame-hover-trial-input-trial" aria-hidden="true">#</a> option: Frame.hover.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-frame-hover-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-hover-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.hover.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.28</li></ul><h2 id="async-method-frame-innerhtml" tabindex="-1"><a class="header-anchor" href="#async-method-frame-innerhtml" aria-hidden="true">#</a> async method: Frame.innerHTML</h2>',18),Kn=n("li",null,"since: v1.8",-1),Gn=n("code",null,"method: Locator.innerHTML",-1),Yn=o('<ul><li>returns: &lt;[string]&gt;</li></ul><p>Returns <code>element.innerHTML</code>.</p><h3 id="param-frame-innerhtml-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-innerhtml-selector-input-selector" aria-hidden="true">#</a> param: Frame.innerHTML.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-innerhtml-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-innerhtml-strict-input-strict" aria-hidden="true">#</a> option: Frame.innerHTML.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-innerhtml-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-innerhtml-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.innerHTML.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-innertext" tabindex="-1"><a class="header-anchor" href="#async-method-frame-innertext" aria-hidden="true">#</a> async method: Frame.innerText</h2>',9),Zn=n("li",null,"since: v1.8",-1),Qn=n("code",null,"method: Locator.innerText",-1),Xn=o('<ul><li>returns: &lt;[string]&gt;</li></ul><p>Returns <code>element.innerText</code>.</p><h3 id="param-frame-innertext-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-innertext-selector-input-selector" aria-hidden="true">#</a> param: Frame.innerText.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-innertext-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-innertext-strict-input-strict" aria-hidden="true">#</a> option: Frame.innerText.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-innertext-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-innertext-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.innerText.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-inputvalue" tabindex="-1"><a class="header-anchor" href="#async-method-frame-inputvalue" aria-hidden="true">#</a> async method: Frame.inputValue</h2>',9),na=n("li",null,"since: v1.13",-1),aa=n("code",null,"method: Locator.inputValue",-1),sa=n("ul",null,[n("li",null,"returns: <[string]>")],-1),ea=n("p",null,[a("Returns "),n("code",null,"input.value"),a(" for the selected "),n("code",null,"<input>"),a(" or "),n("code",null,"<textarea>"),a(" or "),n("code",null,"<select>"),a(" element.")],-1),ta=n("code",null,"<label>",-1),oa={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},ia=o('<h3 id="param-frame-inputvalue-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-inputvalue-selector-input-selector" aria-hidden="true">#</a> param: Frame.inputValue.selector = %%-input-selector-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-frame-inputvalue-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-inputvalue-strict-input-strict" aria-hidden="true">#</a> option: Frame.inputValue.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-inputvalue-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-inputvalue-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.inputValue.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.13</li></ul><h2 id="async-method-frame-ischecked" tabindex="-1"><a class="header-anchor" href="#async-method-frame-ischecked" aria-hidden="true">#</a> async method: Frame.isChecked</h2>',7),pa=n("li",null,"since: v1.8",-1),ca=n("code",null,"method: Locator.isChecked",-1),la=o('<ul><li>returns: &lt;[boolean]&gt;</li></ul><p>Returns whether the element is checked. Throws if the element is not a checkbox or radio input.</p><h3 id="param-frame-ischecked-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-ischecked-selector-input-selector" aria-hidden="true">#</a> param: Frame.isChecked.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-ischecked-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-ischecked-strict-input-strict" aria-hidden="true">#</a> option: Frame.isChecked.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-ischecked-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-ischecked-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.isChecked.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="method-frame-isdetached" tabindex="-1"><a class="header-anchor" href="#method-frame-isdetached" aria-hidden="true">#</a> method: Frame.isDetached</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[boolean]&gt;</li></ul><p>Returns <code>true</code> if the frame has been detached, or <code>false</code> otherwise.</p><h2 id="async-method-frame-isdisabled" tabindex="-1"><a class="header-anchor" href="#async-method-frame-isdisabled" aria-hidden="true">#</a> async method: Frame.isDisabled</h2>',13),ra=n("li",null,"since: v1.8",-1),ua=n("code",null,"method: Locator.isDisabled",-1),da=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),ka=o('<h3 id="param-frame-isdisabled-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-isdisabled-selector-input-selector" aria-hidden="true">#</a> param: Frame.isDisabled.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-isdisabled-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-isdisabled-strict-input-strict" aria-hidden="true">#</a> option: Frame.isDisabled.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-isdisabled-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-isdisabled-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.isDisabled.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-iseditable" tabindex="-1"><a class="header-anchor" href="#async-method-frame-iseditable" aria-hidden="true">#</a> async method: Frame.isEditable</h2>',7),ma=n("li",null,"since: v1.8",-1),ha=n("code",null,"method: Locator.isEditable",-1),va=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),fa=o('<h3 id="param-frame-iseditable-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-iseditable-selector-input-selector" aria-hidden="true">#</a> param: Frame.isEditable.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-iseditable-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-iseditable-strict-input-strict" aria-hidden="true">#</a> option: Frame.isEditable.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-iseditable-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-iseditable-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.isEditable.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-isenabled" tabindex="-1"><a class="header-anchor" href="#async-method-frame-isenabled" aria-hidden="true">#</a> async method: Frame.isEnabled</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[boolean]&gt;</li></ul>',9),ga=o('<h3 id="param-frame-isenabled-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-isenabled-selector-input-selector" aria-hidden="true">#</a> param: Frame.isEnabled.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-isenabled-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-isenabled-strict-input-strict" aria-hidden="true">#</a> option: Frame.isEnabled.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-isenabled-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-isenabled-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.isEnabled.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-ishidden" tabindex="-1"><a class="header-anchor" href="#async-method-frame-ishidden" aria-hidden="true">#</a> async method: Frame.isHidden</h2>',7),ba=n("li",null,"since: v1.8",-1),ya=n("code",null,"method: Locator.isHidden",-1),wa=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),xa=n("code",null,"option: selector",-1),_a=o('<h3 id="param-frame-ishidden-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-ishidden-selector-input-selector" aria-hidden="true">#</a> param: Frame.isHidden.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-ishidden-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-ishidden-strict-input-strict" aria-hidden="true">#</a> option: Frame.isHidden.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-ishidden-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-ishidden-timeout" aria-hidden="true">#</a> option: Frame.isHidden.timeout</h3><ul><li>since: v1.8</li><li>deprecated: This option is ignored. [<code>method: Frame.isHidden</code>] does not wait for the element to become hidden and returns immediately.</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><h2 id="async-method-frame-isvisible" tabindex="-1"><a class="header-anchor" href="#async-method-frame-isvisible" aria-hidden="true">#</a> async method: Frame.isVisible</h2>',8),qa=n("li",null,"since: v1.8",-1),Fa=n("code",null,"method: Locator.isVisible",-1),ja=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),Ta=n("code",null,"option: selector",-1),Sa=o('<h3 id="param-frame-isvisible-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-isvisible-selector-input-selector" aria-hidden="true">#</a> param: Frame.isVisible.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-isvisible-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-isvisible-strict-input-strict" aria-hidden="true">#</a> option: Frame.isVisible.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-isvisible-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-isvisible-timeout" aria-hidden="true">#</a> option: Frame.isVisible.timeout</h3><ul><li>since: v1.8</li><li>deprecated: This option is ignored. [<code>method: Frame.isVisible</code>] does not wait for the element to become visible and returns immediately.</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><h2 id="method-frame-locator" tabindex="-1"><a class="header-anchor" href="#method-frame-locator" aria-hidden="true">#</a> method: Frame.locator</h2><ul><li>since: v1.14</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-root-locator-%%</p>',11),Aa=n("h3",{id:"param-frame-locator-selector-find-selector",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#param-frame-locator-selector-find-selector","aria-hidden":"true"},"#"),a(" param: Frame.locator.selector = %%-find-selector-%%")],-1),Ha=n("ul",null,[n("li",null,"since: v1.14")],-1),La=n("h3",{id:"option-frame-locator-inline-locator-options-list-v1-14",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#option-frame-locator-inline-locator-options-list-v1-14","aria-hidden":"true"},"#"),a(" option: Frame.locator.-inline- = %%-locator-options-list-v1.14-%%")],-1),Ea=n("ul",null,[n("li",null,"since: v1.14")],-1),Ua={id:"method-frame-name",tabindex:"-1"},Pa=n("a",{class:"header-anchor",href:"#method-frame-name","aria-hidden":"true"},"#",-1),Ra={href:"http://Frame.name",target:"_blank",rel:"noopener noreferrer"},Wa=o('<ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Returns frame&#39;s name attribute as specified in the tag.</p><p>If the name is empty, returns the id attribute instead.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>This value is calculated once when the frame is created, and will not update if the attribute is changed later.</p></div><h2 id="method-frame-page" tabindex="-1"><a class="header-anchor" href="#method-frame-page" aria-hidden="true">#</a> method: Frame.page</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Page]&gt;</li></ul><p>Returns the page containing this frame.</p><h2 id="method-frame-parentframe" tabindex="-1"><a class="header-anchor" href="#method-frame-parentframe" aria-hidden="true">#</a> method: Frame.parentFrame</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Frame]&gt;</li></ul><p>Parent frame, if any. Detached frames and main frames return <code>null</code>.</p><h2 id="async-method-frame-press" tabindex="-1"><a class="header-anchor" href="#async-method-frame-press" aria-hidden="true">#</a> async method: Frame.press</h2>',14),Ia=n("li",null,"since: v1.8",-1),Ca=n("code",null,"method: Locator.press",-1),Oa=n("code",null,"param: key",-1),Da=n("br",null,null,-1),Ma={href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key",target:"_blank",rel:"noopener noreferrer"},Ba=n("br",null,null,-1),za=n("code",null,"param: key",-1),Na=n("br",null,null,-1),Va={href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values",target:"_blank",rel:"noopener noreferrer"},Ja=o('<p><code>F1</code> - <code>F12</code>, <code>Digit0</code>- <code>Digit9</code>, <code>KeyA</code>- <code>KeyZ</code>, <code>Backquote</code>, <code>Minus</code>, <code>Equal</code>, <code>Backslash</code>, <code>Backspace</code>, <code>Tab</code>,<br><code>Delete</code>, <code>Escape</code>, <code>ArrowDown</code>, <code>End</code>, <code>Enter</code>, <code>Home</code>, <code>Insert</code>, <code>PageDown</code>, <code>PageUp</code>, <code>ArrowRight</code>, <code>ArrowUp</code>, etc.</p><p>Following modification shortcuts are also supported: <code>Shift</code>, <code>Control</code>, <code>Alt</code>, <code>Meta</code>, <code>ShiftLeft</code>.</p><p>Holding down <code>Shift</code> will type the text that corresponds to the [<code>param: key</code>] in the upper case.</p><p>If [<code>param: key</code>] is a single character, it is case-sensitive, so the values <code>a</code> and <code>A</code> will generate different<br> respective texts.</p><p>Shortcuts such as <code>key: &quot;Control+o&quot;</code> or <code>key: &quot;Control+Shift+T&quot;</code> are supported as well. When specified with the<br> modifier, modifier is pressed and being held while the subsequent key is being pressed.</p><h3 id="param-frame-press-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-press-selector-input-selector" aria-hidden="true">#</a> param: Frame.press.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-press-key" tabindex="-1"><a class="header-anchor" href="#param-frame-press-key" aria-hidden="true">#</a> param: Frame.press.key</h3><ul><li>since: v1.8</li></ul><ul><li><code>key</code> &lt;[string]&gt;</li></ul><p>Name of the key to press or a character to generate, such as <code>ArrowLeft</code> or <code>a</code>.</p><h3 id="option-frame-press-delay" tabindex="-1"><a class="header-anchor" href="#option-frame-press-delay" aria-hidden="true">#</a> option: Frame.press.delay</h3><ul><li>since: v1.8</li></ul><ul><li><code>delay</code> &lt;[float]&gt;</li></ul><p>Time to wait between <code>keydown</code> and <code>keyup</code> in milliseconds. Defaults to 0.</p><h3 id="option-frame-press-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-press-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.press.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-press-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-press-strict-input-strict" aria-hidden="true">#</a> option: Frame.press.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-press-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-press-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.press.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-queryselector" tabindex="-1"><a class="header-anchor" href="#async-method-frame-queryselector" aria-hidden="true">#</a> async method: Frame.querySelector</h2>',22),$a=n("li",null,"since: v1.9",-1),Ka=n("code",null,"method: Frame.locator",-1),Ga=n("li",null,[a("langs: "),n("ul",null,[n("li",null,"alias-python: query_selector"),n("li",null,"alias-js: $")])],-1),Ya=o('<ul><li>returns: &lt;[null]|[ElementHandle]&gt;</li></ul><p>Returns the ElementHandle pointing to the frame element.</p><p>:::caution<br> The use of [ElementHandle] is discouraged, use [Locator] objects and web-first assertions instead.<br> :::</p><p>The method finds an element matching the specified selector within the frame. If no elements match the selector,<br> returns <code>null</code>.</p><h3 id="param-frame-queryselector-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-queryselector-selector-query-selector" aria-hidden="true">#</a> param: Frame.querySelector.selector = %%-query-selector-%%</h3><ul><li>since: v1.9</li></ul><h3 id="option-frame-queryselector-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-queryselector-strict-input-strict" aria-hidden="true">#</a> option: Frame.querySelector.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h2 id="async-method-frame-queryselectorall" tabindex="-1"><a class="header-anchor" href="#async-method-frame-queryselectorall" aria-hidden="true">#</a> async method: Frame.querySelectorAll</h2>',9),Za=n("li",null,"since: v1.9",-1),Qa=n("code",null,"method: Frame.locator",-1),Xa=n("li",null,[a("langs: "),n("ul",null,[n("li",null,"alias-python: query_selector_all"),n("li",null,"alias-js: $$")])],-1),ns=o('<ul><li>returns: &lt;[Array]&lt;[ElementHandle]&gt;&gt;</li></ul><p>Returns the ElementHandles pointing to the frame elements.</p><p>:::caution<br> The use of [ElementHandle] is discouraged, use [Locator] objects instead.<br> :::</p><p>The method finds all elements matching the specified selector within the frame. If no elements match the selector,<br> returns empty array.</p><h3 id="param-frame-queryselectorall-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-queryselectorall-selector-query-selector" aria-hidden="true">#</a> param: Frame.querySelectorAll.selector = %%-query-selector-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-frame-selectoption" tabindex="-1"><a class="header-anchor" href="#async-method-frame-selectoption" aria-hidden="true">#</a> async method: Frame.selectOption</h2>',7),as=n("li",null,"since: v1.8",-1),ss=n("code",null,"method: Locator.selectOption",-1),es=n("ul",null,[n("li",null,"returns: <[Array]<[string]>>")],-1),ts=n("code",null,"param: selector",-1),os=n("code",null,"<select>",-1),is=n("code",null,"<select>",-1),ps=n("code",null,"<label>",-1),cs={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},ls=o(`<p>Returns the array of option values that have been successfully selected.</p><p>Triggers a <code>change</code> and <code>input</code> event once all the provided options have been selected.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// single selection matching the value</span>
frame<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&#39;select#colors&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// single selection matching both the value and the label</span>
frame<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&#39;select#colors&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Blue&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// multiple selection</span>
frame<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&#39;select#colors&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// single selection matching the value</span>
frame<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// single selection matching both the value and the label</span>
frame<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SelectOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLabel</span><span class="token punctuation">(</span><span class="token string">&quot;Blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// multiple selection</span>
frame<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># single selection matching the value</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># single selection matching the label</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># multiple selection</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> value<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># single selection matching the value</span>
frame<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># single selection matching both the label</span>
frame<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># multiple selection</span>
frame<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> value<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// single selection matching the value</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">SelectOptionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;blue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// single selection matching both the value and the label</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">SelectOptionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SelectOptionValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Label <span class="token operator">=</span> <span class="token string">&quot;blue&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// multiple selection</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">SelectOptionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-frame-selectoption-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-selectoption-selector-query-selector" aria-hidden="true">#</a> param: Frame.selectOption.selector = %%-query-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-selectoption-values-select-options-values" tabindex="-1"><a class="header-anchor" href="#param-frame-selectoption-values-select-options-values" aria-hidden="true">#</a> param: Frame.selectOption.values = %%-select-options-values-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-selectoption-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-frame-selectoption-force-input-force" aria-hidden="true">#</a> option: Frame.selectOption.force = %%-input-force-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-frame-selectoption-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-selectoption-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.selectOption.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-selectoption-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-selectoption-strict-input-strict" aria-hidden="true">#</a> option: Frame.selectOption.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-selectoption-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-selectoption-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.selectOption.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-selectoption-element-python-select-options-element" tabindex="-1"><a class="header-anchor" href="#param-frame-selectoption-element-python-select-options-element" aria-hidden="true">#</a> param: Frame.selectOption.element = %%-python-select-options-element-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-selectoption-index-python-select-options-index" tabindex="-1"><a class="header-anchor" href="#param-frame-selectoption-index-python-select-options-index" aria-hidden="true">#</a> param: Frame.selectOption.index = %%-python-select-options-index-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-selectoption-value-python-select-options-value" tabindex="-1"><a class="header-anchor" href="#param-frame-selectoption-value-python-select-options-value" aria-hidden="true">#</a> param: Frame.selectOption.value = %%-python-select-options-value-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-selectoption-label-python-select-options-label" tabindex="-1"><a class="header-anchor" href="#param-frame-selectoption-label-python-select-options-label" aria-hidden="true">#</a> param: Frame.selectOption.label = %%-python-select-options-label-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-setchecked" tabindex="-1"><a class="header-anchor" href="#async-method-frame-setchecked" aria-hidden="true">#</a> async method: Frame.setChecked</h2>`,29),rs=n("li",null,"since: v1.15",-1),us=n("code",null,"method: Locator.setChecked",-1),ds=n("p",null,[a("This method checks or unchecks an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),ks=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),ms=n("li",null,"Ensure that matched element is a checkbox or a radio input. If not, this method throws.",-1),hs=n("li",null,"If the element already has the right checked state, this method returns immediately.",-1),vs=n("code",null,"option: force",-1),fs=n("br",null,null,-1),gs=n("li",null,"Scroll the element into view if needed.",-1),bs=n("li",null,[a("Use ["),n("code",null,"property: Page.mouse"),a("] to click in the center of the element.")],-1),ys=n("li",null,[a("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),a("] option is set.")],-1),ws=n("li",null,"Ensure that the element is now checked or unchecked. If not, this method throws.",-1),xs=o('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="param-frame-setchecked-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-setchecked-selector-input-selector" aria-hidden="true">#</a> param: Frame.setChecked.selector = %%-input-selector-%%</h3><ul><li>since: v1.15</li></ul><h3 id="param-frame-setchecked-checked-input-checked" tabindex="-1"><a class="header-anchor" href="#param-frame-setchecked-checked-input-checked" aria-hidden="true">#</a> param: Frame.setChecked.checked = %%-input-checked-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-frame-setchecked-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-frame-setchecked-force-input-force" aria-hidden="true">#</a> option: Frame.setChecked.force = %%-input-force-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-frame-setchecked-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-setchecked-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.setChecked.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-frame-setchecked-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-frame-setchecked-position-input-position" aria-hidden="true">#</a> option: Frame.setChecked.position = %%-input-position-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-frame-setchecked-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-setchecked-strict-input-strict" aria-hidden="true">#</a> option: Frame.setChecked.strict = %%-input-strict-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-frame-setchecked-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-setchecked-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.setChecked.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-frame-setchecked-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-frame-setchecked-trial-input-trial" aria-hidden="true">#</a> option: Frame.setChecked.trial = %%-input-trial-%%</h3><ul><li>since: v1.15</li></ul><h2 id="async-method-frame-setcontent" tabindex="-1"><a class="header-anchor" href="#async-method-frame-setcontent" aria-hidden="true">#</a> async method: Frame.setContent</h2><ul><li>since: v1.8</li></ul><h3 id="param-frame-setcontent-html" tabindex="-1"><a class="header-anchor" href="#param-frame-setcontent-html" aria-hidden="true">#</a> param: Frame.setContent.html</h3><ul><li>since: v1.8</li></ul><ul><li><code>html</code> &lt;[string]&gt;</li></ul><p>HTML markup to assign to the page.</p><h3 id="option-frame-setcontent-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-setcontent-timeout-navigation-timeout" aria-hidden="true">#</a> option: Frame.setContent.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-setcontent-waituntil-navigation-wait-until" tabindex="-1"><a class="header-anchor" href="#option-frame-setcontent-waituntil-navigation-wait-until" aria-hidden="true">#</a> option: Frame.setContent.waitUntil = %%-navigation-wait-until-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-setinputfiles" tabindex="-1"><a class="header-anchor" href="#async-method-frame-setinputfiles" aria-hidden="true">#</a> async method: Frame.setInputFiles</h2>',28),_s=n("li",null,"since: v1.8",-1),qs=n("code",null,"method: Locator.setInputFiles",-1),Fs=n("p",null,[a("Sets the value of the file input to these file paths or files. If some of the "),n("code",null,"filePaths"),a(" are relative paths, then they"),n("br"),a(" are resolved relative to the current working directory. For empty array, clears the selected files.")],-1),js=n("code",null,"param: selector",-1),Ts=n("br",null,null,-1),Ss={href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input",target:"_blank",rel:"noopener noreferrer"},As=n("code",null,"<label>",-1),Hs={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},Ls=o('<h3 id="param-frame-setinputfiles-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-setinputfiles-selector-input-selector" aria-hidden="true">#</a> param: Frame.setInputFiles.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-setinputfiles-files-input-files" tabindex="-1"><a class="header-anchor" href="#param-frame-setinputfiles-files-input-files" aria-hidden="true">#</a> param: Frame.setInputFiles.files = %%-input-files-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-setinputfiles-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-setinputfiles-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.setInputFiles.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-setinputfiles-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-setinputfiles-strict-input-strict" aria-hidden="true">#</a> option: Frame.setInputFiles.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-setinputfiles-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-setinputfiles-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.setInputFiles.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-tap" tabindex="-1"><a class="header-anchor" href="#async-method-frame-tap" aria-hidden="true">#</a> async method: Frame.tap</h2>',11),Es=n("li",null,"since: v1.8",-1),Us=n("code",null,"method: Locator.tap",-1),Ps=n("p",null,[a("This method taps an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),Rs=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),Ws=n("code",null,"option: force",-1),Is=n("br",null,null,-1),Cs=n("li",null,"Scroll the element into view if needed.",-1),Os=n("li",null,[a("Use ["),n("code",null,"property: Page.touchscreen"),a("] to tap the center of the element, or the specified ["),n("code",null,"option: position"),a("].")],-1),Ds=n("li",null,[a("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),a("] option is set.")],-1),Ms=o('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><div class="hint-container note"><p class="hint-container-title">注</p><p><code>frame.tap()</code> requires that the <code>hasTouch</code> option of the browser context be set to true.</p></div><h3 id="param-frame-tap-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-tap-selector-input-selector" aria-hidden="true">#</a> param: Frame.tap.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-tap-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-frame-tap-force-input-force" aria-hidden="true">#</a> option: Frame.tap.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-tap-modifiers-input-modifiers" tabindex="-1"><a class="header-anchor" href="#option-frame-tap-modifiers-input-modifiers" aria-hidden="true">#</a> option: Frame.tap.modifiers = %%-input-modifiers-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-tap-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-tap-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.tap.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-tap-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-frame-tap-position-input-position" aria-hidden="true">#</a> option: Frame.tap.position = %%-input-position-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-tap-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-tap-strict-input-strict" aria-hidden="true">#</a> option: Frame.tap.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-tap-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-tap-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.tap.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-tap-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-frame-tap-trial-input-trial" aria-hidden="true">#</a> option: Frame.tap.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-frame-textcontent" tabindex="-1"><a class="header-anchor" href="#async-method-frame-textcontent" aria-hidden="true">#</a> async method: Frame.textContent</h2>',19),Bs=n("li",null,"since: v1.8",-1),zs=n("code",null,"method: Locator.textContent",-1),Ns=o('<ul><li>returns: &lt;[null]|[string]&gt;</li></ul><p>Returns <code>element.textContent</code>.</p><h3 id="param-frame-textcontent-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-textcontent-selector-input-selector" aria-hidden="true">#</a> param: Frame.textContent.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-textcontent-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-textcontent-strict-input-strict" aria-hidden="true">#</a> option: Frame.textContent.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-textcontent-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-textcontent-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.textContent.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-title" tabindex="-1"><a class="header-anchor" href="#async-method-frame-title" aria-hidden="true">#</a> async method: Frame.title</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Returns the page title.</p><h2 id="async-method-frame-type" tabindex="-1"><a class="header-anchor" href="#async-method-frame-type" aria-hidden="true">#</a> async method: Frame.type</h2>',13),Vs=n("li",null,"since: v1.8",-1),Js=n("code",null,"method: Locator.type",-1),$s=o(`<p>Sends a <code>keydown</code>, <code>keypress</code>/<code>input</code>, and <code>keyup</code> event for each character in the text. <code>frame.type</code> can be used to<br> send fine-grained keyboard events. To fill values in form fields, use [<code>method: Frame.fill</code>].</p><p>To press a special key, like <code>Control</code> or <code>ArrowDown</code>, use [<code>method: Keyboard.press</code>].</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;#mytextarea&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Types instantly</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;#mytextarea&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Types instantly</span>
frame<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Types slower, like a user</span>
frame<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Frame<span class="token punctuation">.</span>TypeOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setDelay</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span> <span class="token comment"># types instantly</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment"># types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>frame<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span> <span class="token comment"># types instantly</span>
frame<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment"># types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">TypeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// types instantly</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">TypeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Delay <span class="token operator">=</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-frame-type-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-type-selector-input-selector" aria-hidden="true">#</a> param: Frame.type.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-type-text" tabindex="-1"><a class="header-anchor" href="#param-frame-type-text" aria-hidden="true">#</a> param: Frame.type.text</h3><ul><li>since: v1.8</li></ul><ul><li><code>text</code> &lt;[string]&gt;</li></ul><p>A text to type into a focused element.</p><h3 id="option-frame-type-delay" tabindex="-1"><a class="header-anchor" href="#option-frame-type-delay" aria-hidden="true">#</a> option: Frame.type.delay</h3><ul><li>since: v1.8</li></ul><ul><li><code>delay</code> &lt;[float]&gt;</li></ul><p>Time to wait between key presses in milliseconds. Defaults to 0.</p><h3 id="option-frame-type-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-type-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.type.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-type-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-type-strict-input-strict" aria-hidden="true">#</a> option: Frame.type.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-type-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-type-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.type.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-uncheck" tabindex="-1"><a class="header-anchor" href="#async-method-frame-uncheck" aria-hidden="true">#</a> async method: Frame.uncheck</h2>`,25),Ks=n("li",null,"since: v1.8",-1),Gs=n("code",null,"method: Locator.uncheck",-1),Ys=n("p",null,[a("This method checks an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),Zs=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),Qs=n("li",null,[a("Ensure that matched element is a checkbox or a radio input. If not, this method throws. If the element is already"),n("br"),a(" unchecked, this method returns immediately.")],-1),Xs=n("code",null,"option: force",-1),ne=n("br",null,null,-1),ae=n("li",null,"Scroll the element into view if needed.",-1),se=n("li",null,[a("Use ["),n("code",null,"property: Page.mouse"),a("] to click in the center of the element.")],-1),ee=n("li",null,[a("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),a("] option is set.")],-1),te=n("li",null,"Ensure that the element is now unchecked. If not, this method throws.",-1),oe=o(`<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="param-frame-uncheck-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-uncheck-selector-input-selector" aria-hidden="true">#</a> param: Frame.uncheck.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-uncheck-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-frame-uncheck-force-input-force" aria-hidden="true">#</a> option: Frame.uncheck.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-uncheck-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-frame-uncheck-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Frame.uncheck.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-uncheck-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-frame-uncheck-position-input-position" aria-hidden="true">#</a> option: Frame.uncheck.position = %%-input-position-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-frame-uncheck-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-uncheck-strict-input-strict" aria-hidden="true">#</a> option: Frame.uncheck.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-uncheck-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-uncheck-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.uncheck.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-uncheck-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-frame-uncheck-trial-input-trial" aria-hidden="true">#</a> option: Frame.uncheck.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="method-frame-url" tabindex="-1"><a class="header-anchor" href="#method-frame-url" aria-hidden="true">#</a> method: Frame.url</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Returns frame&#39;s url.</p><h2 id="async-method-frame-waitforfunction" tabindex="-1"><a class="header-anchor" href="#async-method-frame-waitforfunction" aria-hidden="true">#</a> async method: Frame.waitForFunction</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[JSHandle]&gt;</li></ul><p>Returns when the [<code>param: expression</code>] returns a truthy value, returns that value.</p><p><strong>Usage</strong></p><p>The [<code>method: Frame.waitForFunction</code>] can be used to observe viewport size change:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> firefox <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Or &#39;chromium&#39; or &#39;webkit&#39;.</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> firefox<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> watchDog <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">mainFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">waitForFunction</span><span class="token punctuation">(</span><span class="token string">&#39;window.innerWidth &lt; 100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  page<span class="token punctuation">.</span><span class="token function">setViewportSize</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> watchDog<span class="token punctuation">;</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>playwright<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Playwright</span> playwright <span class="token operator">=</span> <span class="token class-name">Playwright</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BrowserType</span> firefox <span class="token operator">=</span> playwright<span class="token punctuation">.</span><span class="token function">firefox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Browser</span> browser <span class="token operator">=</span> firefox<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Page</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">setViewportSize</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">mainFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">waitForFunction</span><span class="token punctuation">(</span><span class="token string">&quot;window.innerWidth &lt; 100&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;window.x = 0; setTimeout(() =&gt; { window.x = 100 }, 1000);&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>main_frame<span class="token punctuation">.</span>wait_for_function<span class="token punctuation">(</span><span class="token string">&quot;() =&gt; window.x &gt; 0&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;window.x = 0; setTimeout(() =&gt; { window.x = 100 }, 1000);&quot;</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>main_frame<span class="token punctuation">.</span>wait_for_function<span class="token punctuation">(</span><span class="token string">&quot;() =&gt; window.x &gt; 0&quot;</span><span class="token punctuation">)</span>
    browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
    run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">FrameExamples</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Firefox<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetViewportSizeAsync</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> page<span class="token punctuation">.</span>MainFrame<span class="token punctuation">.</span><span class="token function">WaitForFunctionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;window.innerWidth &lt; 100&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To pass an argument to the predicate of <code>frame.waitForFunction</code> function:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> selector <span class="token operator">=</span> <span class="token string">&#39;.foo&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">waitForFunction</span><span class="token punctuation">(</span><span class="token parameter">selector</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">,</span> selector<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> selector <span class="token operator">=</span> <span class="token string">&quot;.foo&quot;</span><span class="token punctuation">;</span>
frame<span class="token punctuation">.</span><span class="token function">waitForFunction</span><span class="token punctuation">(</span><span class="token string">&quot;selector =&gt; !!document.querySelector(selector)&quot;</span><span class="token punctuation">,</span> selector<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>selector <span class="token operator">=</span> <span class="token string">&quot;.foo&quot;</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span>wait_for_function<span class="token punctuation">(</span><span class="token string">&quot;selector =&gt; !!document.querySelector(selector)&quot;</span><span class="token punctuation">,</span> selector<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>selector <span class="token operator">=</span> <span class="token string">&quot;.foo&quot;</span>
frame<span class="token punctuation">.</span>wait_for_function<span class="token punctuation">(</span><span class="token string">&quot;selector =&gt; !!document.querySelector(selector)&quot;</span><span class="token punctuation">,</span> selector<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> selector <span class="token operator">=</span> <span class="token string">&quot;.foo&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>MainFrame<span class="token punctuation">.</span><span class="token function">WaitForFunctionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;selector =&gt; !!document.querySelector(selector)&quot;</span><span class="token punctuation">,</span> selector<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-frame-waitforfunction-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-frame-waitforfunction-expression-evaluate-expression" aria-hidden="true">#</a> param: Frame.waitForFunction.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-waitforfunction-expression-js-evaluate-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-frame-waitforfunction-expression-js-evaluate-pagefunction" aria-hidden="true">#</a> param: Frame.waitForFunction.expression = %%-js-evaluate-pagefunction-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-waitforfunction-arg" tabindex="-1"><a class="header-anchor" href="#param-frame-waitforfunction-arg" aria-hidden="true">#</a> param: Frame.waitForFunction.arg</h3><ul><li>since: v1.8</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h3 id="option-frame-waitforfunction-polling-js-python-wait-for-function-polling" tabindex="-1"><a class="header-anchor" href="#option-frame-waitforfunction-polling-js-python-wait-for-function-polling" aria-hidden="true">#</a> option: Frame.waitForFunction.polling = %%-js-python-wait-for-function-polling-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-waitforfunction-polling-csharp-java-wait-for-function-polling" tabindex="-1"><a class="header-anchor" href="#option-frame-waitforfunction-polling-csharp-java-wait-for-function-polling" aria-hidden="true">#</a> option: Frame.waitForFunction.polling = %%-csharp-java-wait-for-function-polling-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-waitforfunction-timeout-wait-for-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-waitforfunction-timeout-wait-for-timeout" aria-hidden="true">#</a> option: Frame.waitForFunction.timeout = %%-wait-for-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-waitforloadstate" tabindex="-1"><a class="header-anchor" href="#async-method-frame-waitforloadstate" aria-hidden="true">#</a> async method: Frame.waitForLoadState</h2><ul><li>since: v1.8</li></ul><p>Waits for the required load state to be reached.</p><p>This returns when the frame reaches a required load state, <code>load</code> by default. The navigation must have been committed<br> when this method is called. If current document has already reached the required state, resolves immediately.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Click triggers navigation.</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">waitForLoadState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Waits for &#39;load&#39; state by default.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>frame<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Click triggers navigation.</span>
frame<span class="token punctuation">.</span><span class="token function">waitForLoadState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Waits for &quot;load&quot; state by default.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span> <span class="token comment"># click triggers navigation.</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span>wait_for_load_state<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># the promise resolves after &quot;load&quot; event.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>frame<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span> <span class="token comment"># click triggers navigation.</span>
frame<span class="token punctuation">.</span>wait_for_load_state<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># the promise resolves after &quot;load&quot; event.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">WaitForLoadStateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Defaults to LoadState.Load</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-frame-waitforloadstate-state-wait-for-load-state-state" tabindex="-1"><a class="header-anchor" href="#param-frame-waitforloadstate-state-wait-for-load-state-state" aria-hidden="true">#</a> param: Frame.waitForLoadState.state = %%-wait-for-load-state-state-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-waitforloadstate-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-waitforloadstate-timeout-navigation-timeout" aria-hidden="true">#</a> option: Frame.waitForLoadState.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-waitfornavigation" tabindex="-1"><a class="header-anchor" href="#async-method-frame-waitfornavigation" aria-hidden="true">#</a> async method: Frame.waitForNavigation</h2><ul><li>since: v1.8</li><li>langs: <ul><li>alias-python: expect_navigation</li><li>alias-csharp: RunAndWaitForNavigation</li></ul></li></ul><ul><li>returns: &lt;[null]|[Response]&gt;</li></ul><p>Waits for the frame navigation and returns the main resource response. In case of multiple redirects, the navigation<br> will resolve with the response of the last redirect. In case of navigation to a different anchor or navigation due to<br> History API usage, the navigation will resolve with <code>null</code>.</p><p><strong>Usage</strong></p><p>This method waits for the frame to navigate to a new URL. It is useful for when you run code which will indirectly cause<br> the frame to navigate. Consider this example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Start waiting for navigation before clicking. Note no await.</span>
<span class="token keyword">const</span> navigationPromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForNavigation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Navigate after timeout&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> navigationPromise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// The method returns after navigation has finished</span>
frame<span class="token punctuation">.</span><span class="token function">waitForNavigation</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Clicking the link will indirectly cause a navigation</span>
  frame<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&quot;a.delayed-navigation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> frame<span class="token punctuation">.</span>expect_navigation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> frame<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;a.delayed-navigation&quot;</span><span class="token punctuation">)</span> <span class="token comment"># clicking the link will indirectly cause a navigation</span>
<span class="token comment"># Resolves after navigation has finished</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> frame<span class="token punctuation">.</span>expect_navigation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    frame<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;a.delayed-navigation&quot;</span><span class="token punctuation">)</span> <span class="token comment"># clicking the link will indirectly cause a navigation</span>
<span class="token comment"># Resolves after navigation has finished</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">RunAndWaitForNavigationAsync</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Clicking the link will indirectly cause a navigation.</span>
    <span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token string">&quot;a.delayed-navigation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Resolves after navigation has finished</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,75),ie={class:"hint-container note"},pe=n("p",{class:"hint-container-title"},"注",-1),ce={href:"https://developer.mozilla.org/en-US/docs/Web/API/History_API",target:"_blank",rel:"noopener noreferrer"},le=n("br",null,null,-1),re=o(`<h2 id="async-method-frame-waitfornavigation-1" tabindex="-1"><a class="header-anchor" href="#async-method-frame-waitfornavigation-1" aria-hidden="true">#</a> async method: Frame.waitForNavigation</h2><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&lt;[Response]&gt;&gt;</li></ul><h3 id="param-frame-waitfornavigation-action-csharp-wait-for-event-action" tabindex="-1"><a class="header-anchor" href="#param-frame-waitfornavigation-action-csharp-wait-for-event-action" aria-hidden="true">#</a> param: Frame.waitForNavigation.action = %%-csharp-wait-for-event-action-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-frame-waitfornavigation-url-wait-for-navigation-url" tabindex="-1"><a class="header-anchor" href="#option-frame-waitfornavigation-url-wait-for-navigation-url" aria-hidden="true">#</a> option: Frame.waitForNavigation.url = %%-wait-for-navigation-url-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-waitfornavigation-waituntil-navigation-wait-until" tabindex="-1"><a class="header-anchor" href="#option-frame-waitfornavigation-waituntil-navigation-wait-until" aria-hidden="true">#</a> option: Frame.waitForNavigation.waitUntil = %%-navigation-wait-until-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-waitfornavigation-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-waitfornavigation-timeout-navigation-timeout" aria-hidden="true">#</a> option: Frame.waitForNavigation.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-frame-waitfornavigation-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-frame-waitfornavigation-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: Frame.waitForNavigation.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-frame-waitforselector" tabindex="-1"><a class="header-anchor" href="#async-method-frame-waitforselector" aria-hidden="true">#</a> async method: Frame.waitForSelector</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[ElementHandle]&gt;</li></ul><p>Returns when element specified by selector satisfies [<code>option: state</code>] option. Returns <code>null</code> if waiting for <code>hidden</code> or<br><code>detached</code>.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>Playwright automatically waits for element to be ready before performing an action. Using<br> [Locator] objects and web-first assertions make the code wait-for-selector-free.</p></div><p>Wait for the [<code>param: selector</code>] to satisfy [<code>option: state</code>] option (either appear/disappear from dom, or become<br> visible/hidden). If at the moment of calling the method [<code>param: selector</code>] already satisfies the condition, the method<br> will return immediately. If the selector doesn&#39;t satisfy the condition for the [<code>option: timeout</code>] milliseconds, the<br> function will throw.</p><p><strong>Usage</strong></p><p>This method works across navigations:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> chromium <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Or &#39;firefox&#39; or &#39;webkit&#39;.</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> currentURL <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token string">&#39;https://google.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;https://bbc.com&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span>currentURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">mainFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Loaded image: &#39;</span> <span class="token operator">+</span> <span class="token keyword">await</span> element<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>playwright<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Playwright</span> playwright <span class="token operator">=</span> <span class="token class-name">Playwright</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BrowserType</span> chromium <span class="token operator">=</span> playwright<span class="token punctuation">.</span><span class="token function">chromium</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Browser</span> browser <span class="token operator">=</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Page</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> currentURL <span class="token operator">:</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;https://google.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://bbc.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span>currentURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ElementHandle</span> element <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">mainFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded image: &quot;</span> <span class="token operator">+</span> element<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    chromium <span class="token operator">=</span> playwright<span class="token punctuation">.</span>chromium
    browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> current_url <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&quot;https://google.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://bbc.com&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span>current_url<span class="token punctuation">,</span> wait_until<span class="token operator">=</span><span class="token string">&quot;domcontentloaded&quot;</span><span class="token punctuation">)</span>
        element <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>main_frame<span class="token punctuation">.</span>wait_for_selector<span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded image: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token keyword">await</span> element<span class="token punctuation">.</span>get_attribute<span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    chromium <span class="token operator">=</span> playwright<span class="token punctuation">.</span>chromium
    browser <span class="token operator">=</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> current_url <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&quot;https://google.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://bbc.com&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span>current_url<span class="token punctuation">,</span> wait_until<span class="token operator">=</span><span class="token string">&quot;domcontentloaded&quot;</span><span class="token punctuation">)</span>
        element <span class="token operator">=</span> page<span class="token punctuation">.</span>main_frame<span class="token punctuation">.</span>wait_for_selector<span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded image: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>get_attribute<span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
    run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">FrameExamples</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Chromium<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> currentUrl <span class="token keyword">in</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;https://www.google.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://bbc.com&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span>currentUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
            element <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>MainFrame<span class="token punctuation">.</span><span class="token function">WaitForSelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Loaded image: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token keyword">await</span> element<span class="token punctuation">.</span><span class="token function">GetAttributeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-frame-waitforselector-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-frame-waitforselector-selector-query-selector" aria-hidden="true">#</a> param: Frame.waitForSelector.selector = %%-query-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-waitforselector-state-wait-for-selector-state" tabindex="-1"><a class="header-anchor" href="#option-frame-waitforselector-state-wait-for-selector-state" aria-hidden="true">#</a> option: Frame.waitForSelector.state = %%-wait-for-selector-state-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-frame-waitforselector-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-frame-waitforselector-strict-input-strict" aria-hidden="true">#</a> option: Frame.waitForSelector.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-frame-waitforselector-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-waitforselector-timeout-input-timeout" aria-hidden="true">#</a> option: Frame.waitForSelector.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-frame-waitfortimeout" tabindex="-1"><a class="header-anchor" href="#async-method-frame-waitfortimeout" aria-hidden="true">#</a> async method: Frame.waitForTimeout</h2><ul><li>since: v1.8</li></ul><p>Waits for the given [<code>param: timeout</code>] in milliseconds.</p><p>Note that <code>frame.waitForTimeout()</code> should only be used for debugging. Tests using the timer in production are going to<br> be flaky. Use signals such as network events, selectors becoming visible and others instead.</p><h3 id="param-frame-waitfortimeout-timeout" tabindex="-1"><a class="header-anchor" href="#param-frame-waitfortimeout-timeout" aria-hidden="true">#</a> param: Frame.waitForTimeout.timeout</h3><ul><li>since: v1.8</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>A timeout to wait for</p><h2 id="async-method-frame-waitforurl" tabindex="-1"><a class="header-anchor" href="#async-method-frame-waitforurl" aria-hidden="true">#</a> async method: Frame.waitForURL</h2><ul><li>since: v1.11</li></ul><p>Waits for the frame to navigate to the given URL.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&#39;a.delayed-navigation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Clicking the link will indirectly cause a navigation</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">waitForURL</span><span class="token punctuation">(</span><span class="token string">&#39;**/target.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>frame<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&quot;a.delayed-navigation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Clicking the link will indirectly cause a navigation</span>
frame<span class="token punctuation">.</span><span class="token function">waitForURL</span><span class="token punctuation">(</span><span class="token string">&quot;**/target.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;a.delayed-navigation&quot;</span><span class="token punctuation">)</span> <span class="token comment"># clicking the link will indirectly cause a navigation</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span>wait_for_url<span class="token punctuation">(</span><span class="token string">&quot;**/target.html&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>frame<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;a.delayed-navigation&quot;</span><span class="token punctuation">)</span> <span class="token comment"># clicking the link will indirectly cause a navigation</span>
frame<span class="token punctuation">.</span>wait_for_url<span class="token punctuation">(</span><span class="token string">&quot;**/target.html&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token string">&quot;a.delayed-navigation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// clicking the link will indirectly cause a navigation</span>
<span class="token keyword">await</span> frame<span class="token punctuation">.</span><span class="token function">WaitForURLAsync</span><span class="token punctuation">(</span><span class="token string">&quot;**/target.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-frame-waitforurl-url-wait-for-navigation-url" tabindex="-1"><a class="header-anchor" href="#param-frame-waitforurl-url-wait-for-navigation-url" aria-hidden="true">#</a> param: Frame.waitForURL.url = %%-wait-for-navigation-url-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-frame-waitforurl-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-frame-waitforurl-timeout-navigation-timeout" aria-hidden="true">#</a> option: Frame.waitForURL.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-frame-waitforurl-waituntil-navigation-wait-until" tabindex="-1"><a class="header-anchor" href="#option-frame-waitforurl-waituntil-navigation-wait-until" aria-hidden="true">#</a> option: Frame.waitForURL.waitUntil = %%-navigation-wait-until-%%</h3><ul><li>since: v1.11</li></ul>`,57);function ue(de,ke){const i=p("ExternalLinkIcon"),e=p("RouterLink");return l(),r("div",null,[d,n("p",null,[a("Script type. Use 'module' in order to load a Javascript ES6 module. See"),k,n("a",m,[a("script"),s(i)]),a(" for more details.")]),h,n("ul",null,[v,n("li",null,[a("discouraged: Use locator-based ["),f,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),g,n("ol",null,[b,y,n("li",null,[a("Wait for "),s(e,{to:"/book/playwright/actionability.html"},{default:t(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),w,a("] option is"),x,a(" set. If the element is detached during the checks, the whole action is retried.")]),_,q,F,j]),T,n("ul",null,[S,n("li",null,[a("discouraged: Use locator-based ["),A,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),H,n("ol",null,[L,n("li",null,[a("Wait for "),s(e,{to:"/book/playwright/actionability.html"},{default:t(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),E,a("] option is"),U,a(" set. If the element is detached during the checks, the whole action is retried.")]),P,R,W]),I,n("ul",null,[C,n("li",null,[a("discouraged: Use locator-based ["),O,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")]),D]),M,n("ol",null,[B,n("li",null,[a("Wait for "),s(e,{to:"/book/playwright/actionability.html"},{default:t(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),z,a("] option is"),N,a(" set. If the element is detached during the checks, the whole action is retried.")]),V]),J,n("ul",null,[$,n("li",null,[a("discouraged: Use locator-based ["),K,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),n("p",null,[a("The snippet below dispatches the "),G,a(" event on the element. Regardless of the visibility state of the element, "),Y,Z,a(" is dispatched. This is equivalent to calling"),Q,n("a",X,[a("element.click()"),s(i)]),a(".")]),nn,n("ul",null,[n("li",null,[n("a",an,[a("DragEvent"),s(i)])]),n("li",null,[n("a",sn,[a("FocusEvent"),s(i)])]),n("li",null,[n("a",en,[a("KeyboardEvent"),s(i)])]),n("li",null,[n("a",tn,[a("MouseEvent"),s(i)])]),n("li",null,[n("a",on,[a("PointerEvent"),s(i)])]),n("li",null,[n("a",pn,[a("TouchEvent"),s(i)])]),n("li",null,[n("a",cn,[a("Event"),s(i)])])]),ln,n("ul",null,[rn,n("li",null,[a("discouraged: Use locator-based ["),un,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),n("p",null,[a("This method waits for an element matching ["),dn,a("], waits for "),s(e,{to:"/book/playwright/actionability.html"},{default:t(()=>[a("actionability")]),_:1}),a(" checks, focuses the element, fills it and triggers an "),kn,a(" event after filling. Note that you can pass an empty string to clear the input field.")]),n("p",null,[a("If the target element is not an "),mn,a(", "),hn,a(" or "),vn,a(" element, this method throws an error. However, if the element is inside the "),fn,a(" element that has an associated "),n("a",gn,[a("control"),s(i)]),a(", the control will be filled instead.")]),bn,n("ul",null,[yn,n("li",null,[a("discouraged: Use locator-based ["),wn,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),xn,n("ul",null,[_n,n("li",null,[a("discouraged: Use locator-based ["),qn,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),Fn,jn,Tn,Sn,n("h3",An,[Hn,a(" param: "),n("a",Ln,[a("Frame.getAttribute.name"),s(i)])]),En,n("div",Un,[Pn,n("p",null,[a("Headless mode doesn't support navigation to a PDF document. See the"),Rn,n("a",Wn,[a("upstream issue"),s(i)]),a(".")])]),In,n("ul",null,[Cn,n("li",null,[a("discouraged: Use locator-based ["),On,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),Dn,n("ol",null,[Mn,n("li",null,[a("Wait for "),s(e,{to:"/book/playwright/actionability.html"},{default:t(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),Bn,a("] option is"),zn,a(" set. If the element is detached during the checks, the whole action is retried.")]),Nn,Vn,Jn]),$n,n("ul",null,[Kn,n("li",null,[a("discouraged: Use locator-based ["),Gn,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),Yn,n("ul",null,[Zn,n("li",null,[a("discouraged: Use locator-based ["),Qn,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),Xn,n("ul",null,[na,n("li",null,[a("discouraged: Use locator-based ["),aa,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),sa,ea,n("p",null,[a("Throws for non-input elements. However, if the element is inside the "),ta,a(" element that has an associated "),n("a",oa,[a("control"),s(i)]),a(", returns the value of the control.")]),ia,n("ul",null,[pa,n("li",null,[a("discouraged: Use locator-based ["),ca,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),la,n("ul",null,[ra,n("li",null,[a("discouraged: Use locator-based ["),ua,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),da,n("p",null,[a("Returns whether the element is disabled, the opposite of "),s(e,{to:"/book/playwright/actionability.html#enabled"},{default:t(()=>[a("enabled")]),_:1}),a(".")]),ka,n("ul",null,[ma,n("li",null,[a("discouraged: Use locator-based ["),ha,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),va,n("p",null,[a("Returns whether the element is "),s(e,{to:"/book/playwright/actionability.html#editable"},{default:t(()=>[a("editable")]),_:1}),a(".")]),fa,n("p",null,[a("Returns whether the element is "),s(e,{to:"/book/playwright/actionability.html#enabled"},{default:t(()=>[a("enabled")]),_:1}),a(".")]),ga,n("ul",null,[ba,n("li",null,[a("discouraged: Use locator-based ["),ya,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),wa,n("p",null,[a("Returns whether the element is hidden, the opposite of "),s(e,{to:"/book/playwright/actionability.html#visible"},{default:t(()=>[a("visible")]),_:1}),a(". ["),xa,a("] that does not match any elements is considered hidden.")]),_a,n("ul",null,[qa,n("li",null,[a("discouraged: Use locator-based ["),Fa,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),ja,n("p",null,[a("Returns whether the element is "),s(e,{to:"/book/playwright/actionability.html#visible"},{default:t(()=>[a("visible")]),_:1}),a(". ["),Ta,a("] that does not match any elements is considered not visible.")]),Sa,n("p",null,[s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("Learn more about locators")]),_:1}),a(".")]),Aa,Ha,La,Ea,n("h2",Ua,[Pa,a(" method: "),n("a",Ra,[a("Frame.name"),s(i)])]),Wa,n("ul",null,[Ia,n("li",null,[a("discouraged: Use locator-based ["),Ca,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),n("p",null,[a("["),Oa,a("] can specify the intended"),Da,n("a",Ma,[a("keyboardEvent.key"),s(i)]),a(" value or a single character to"),Ba,a(" generate the text for. A superset of the ["),za,a("] values can be found"),Na,n("a",Va,[a("here"),s(i)]),a(". Examples of the keys are:")]),Ja,n("ul",null,[$a,n("li",null,[a("discouraged: Use locator-based ["),Ka,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")]),Ga]),Ya,n("ul",null,[Za,n("li",null,[a("discouraged: Use locator-based ["),Qa,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")]),Xa]),ns,n("ul",null,[as,n("li",null,[a("discouraged: Use locator-based ["),ss,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),es,n("p",null,[a("This method waits for an element matching ["),ts,a("], waits for "),s(e,{to:"/book/playwright/actionability.html"},{default:t(()=>[a("actionability")]),_:1}),a(" checks, waits until all specified options are present in the "),os,a(" element and selects these options.")]),n("p",null,[a("If the target element is not a "),is,a(" element, this method throws an error. However, if the element is inside the "),ps,a(" element that has an associated "),n("a",cs,[a("control"),s(i)]),a(", the control will be used instead.")]),ls,n("ul",null,[rs,n("li",null,[a("discouraged: Use locator-based ["),us,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),ds,n("ol",null,[ks,ms,hs,n("li",null,[a("Wait for "),s(e,{to:"/book/playwright/actionability.html"},{default:t(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),vs,a("] option is"),fs,a(" set. If the element is detached during the checks, the whole action is retried.")]),gs,bs,ys,ws]),xs,n("ul",null,[_s,n("li",null,[a("discouraged: Use locator-based ["),qs,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),Fs,n("p",null,[a("This method expects ["),js,a("] to point to an"),Ts,n("a",Ss,[a("input element"),s(i)]),a(". However, if the element is inside the "),As,a(" element that has an associated "),n("a",Hs,[a("control"),s(i)]),a(", targets the control instead.")]),Ls,n("ul",null,[Es,n("li",null,[a("discouraged: Use locator-based ["),Us,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),Ps,n("ol",null,[Rs,n("li",null,[a("Wait for "),s(e,{to:"/book/playwright/actionability.html"},{default:t(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),Ws,a("] option is"),Is,a(" set. If the element is detached during the checks, the whole action is retried.")]),Cs,Os,Ds]),Ms,n("ul",null,[Bs,n("li",null,[a("discouraged: Use locator-based ["),zs,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),Ns,n("ul",null,[Vs,n("li",null,[a("discouraged: Use locator-based ["),Js,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),$s,n("ul",null,[Ks,n("li",null,[a("discouraged: Use locator-based ["),Gs,a("] instead. Read more about "),s(e,{to:"/book/playwright/locators.html"},{default:t(()=>[a("locators")]),_:1}),a(".")])]),Ys,n("ol",null,[Zs,Qs,n("li",null,[a("Wait for "),s(e,{to:"/book/playwright/actionability.html"},{default:t(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),Xs,a("] option is"),ne,a(" set. If the element is detached during the checks, the whole action is retried.")]),ae,se,ee,te]),oe,n("div",ie,[pe,n("p",null,[a("Usage of the "),n("a",ce,[a("History API"),s(i)]),a(" to change the URL is considered"),le,a(" a navigation.")])]),re])}const ve=c(u,[["render",ue],["__file","class-frame.html.vue"]]);export{ve as default};
