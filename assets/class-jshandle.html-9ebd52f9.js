import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,f as e}from"./app-207e7d61.js";const t={},p=e(`<h1 id="class-jshandle" tabindex="-1"><a class="header-anchor" href="#class-jshandle" aria-hidden="true">#</a> class: JSHandle</h1><ul><li>since: v1.8</li></ul><p>JSHandle represents an in-page JavaScript object. JSHandles can be created with the [<code>method: Page.evaluateHandle</code>]<br> method.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> windowHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> window<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">JSHandle</span> windowHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; window&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>window_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;window&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>window_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;window&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> windowHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; window&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>JSHandle prevents the referenced JavaScript object being garbage collected unless the handle is exposed with<br> [<code>method: JSHandle.dispose</code>]. JSHandles are auto-disposed when their origin frame gets navigated or the parent context<br> gets destroyed.</p><p>JSHandle instances can be used as an argument in [<code>method: Page.evalOnSelector</code>], [<code>method: Page.evaluate</code>] and<br> [<code>method: Page.evaluateHandle</code>] methods.</p><h2 id="method-jshandle-aselement" tabindex="-1"><a class="header-anchor" href="#method-jshandle-aselement" aria-hidden="true">#</a> method: JSHandle.asElement</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[ElementHandle]&gt;</li></ul><p>Returns either <code>null</code> or the object handle itself, if the object handle is an instance of [ElementHandle].</p><h2 id="async-method-jshandle-dispose" tabindex="-1"><a class="header-anchor" href="#async-method-jshandle-dispose" aria-hidden="true">#</a> async method: JSHandle.dispose</h2><ul><li>since: v1.8</li></ul><p>The <code>jsHandle.dispose</code> method stops referencing the element handle.</p><h2 id="async-method-jshandle-evaluate" tabindex="-1"><a class="header-anchor" href="#async-method-jshandle-evaluate" aria-hidden="true">#</a> async method: JSHandle.evaluate</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Serializable]&gt;</li></ul><p>Returns the return value of [<code>param: expression</code>].</p><p>This method passes this handle as the first argument to [<code>param: expression</code>].</p><p>If [<code>param: expression</code>] returns a [Promise], then <code>handle.evaluate</code> would wait for the promise to resolve and return<br> its value.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> tweetHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.tweet .retweets&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> tweetHandle<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token parameter">node</span> <span class="token operator">=&gt;</span> node<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&#39;10 retweets&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ElementHandle</span> tweetHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.tweet .retweets&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;10 retweets&quot;</span><span class="token punctuation">,</span> tweetHandle<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;node =&gt; node.innerText&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tweet_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;.tweet .retweets&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> <span class="token keyword">await</span> tweet_handle<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;node =&gt; node.innerText&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;10 retweets&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tweet_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;.tweet .retweets&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> tweet_handle<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;node =&gt; node.innerText&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;10 retweets&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> tweetHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">QuerySelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;.tweet .retweets&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Assert<span class="token punctuation">.</span><span class="token function">AreEqual</span><span class="token punctuation">(</span><span class="token string">&quot;10 retweets&quot;</span><span class="token punctuation">,</span> <span class="token keyword">await</span> tweetHandle<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;node =&gt; node.innerText&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-jshandle-evaluate-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-jshandle-evaluate-expression-evaluate-expression" aria-hidden="true">#</a> param: JSHandle.evaluate.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-jshandle-evaluate-expression-js-evaluate-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-jshandle-evaluate-expression-js-evaluate-pagefunction" aria-hidden="true">#</a> param: JSHandle.evaluate.expression = %%-js-evaluate-pagefunction-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-jshandle-evaluate-arg" tabindex="-1"><a class="header-anchor" href="#param-jshandle-evaluate-arg" aria-hidden="true">#</a> param: JSHandle.evaluate.arg</h3><ul><li>since: v1.8</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h2 id="async-method-jshandle-evaluatehandle" tabindex="-1"><a class="header-anchor" href="#async-method-jshandle-evaluatehandle" aria-hidden="true">#</a> async method: JSHandle.evaluateHandle</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[JSHandle]&gt;</li></ul><p>Returns the return value of [<code>param: expression</code>] as a [JSHandle].</p><p>This method passes this handle as the first argument to [<code>param: expression</code>].</p><p>The only difference between <code>jsHandle.evaluate</code> and <code>jsHandle.evaluateHandle</code> is that <code>jsHandle.evaluateHandle</code> returns [JSHandle].</p><p>If the function passed to the <code>jsHandle.evaluateHandle</code> returns a [Promise], then <code>jsHandle.evaluateHandle</code> would wait<br> for the promise to resolve and return its value.</p><p>See [<code>method: Page.evaluateHandle</code>] for more details.</p><h3 id="param-jshandle-evaluatehandle-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-jshandle-evaluatehandle-expression-evaluate-expression" aria-hidden="true">#</a> param: JSHandle.evaluateHandle.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-jshandle-evaluatehandle-expression-js-evaluate-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-jshandle-evaluatehandle-expression-js-evaluate-pagefunction" aria-hidden="true">#</a> param: JSHandle.evaluateHandle.expression = %%-js-evaluate-pagefunction-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-jshandle-evaluatehandle-arg" tabindex="-1"><a class="header-anchor" href="#param-jshandle-evaluatehandle-arg" aria-hidden="true">#</a> param: JSHandle.evaluateHandle.arg</h3><ul><li>since: v1.8</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h2 id="async-method-jshandle-getproperties" tabindex="-1"><a class="header-anchor" href="#async-method-jshandle-getproperties" aria-hidden="true">#</a> async method: JSHandle.getProperties</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Map]&lt;[string], [JSHandle]&gt;&gt;</li></ul><p>The method returns a map with <strong>own property names</strong> as keys and JSHandle instances for the property values.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>window<span class="token punctuation">,</span> document<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> properties <span class="token operator">=</span> <span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> windowHandle <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;window&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> documentHandle <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;document&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">JSHandle</span> handle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; ({window, document}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">JSHandle</span><span class="token punctuation">&gt;</span></span> properties <span class="token operator">=</span> handle<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">JSHandle</span> windowHandle <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;window&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">JSHandle</span> documentHandle <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
handle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;({window, document})&quot;</span><span class="token punctuation">)</span>
properties <span class="token operator">=</span> <span class="token keyword">await</span> handle<span class="token punctuation">.</span>get_properties<span class="token punctuation">(</span><span class="token punctuation">)</span>
window_handle <span class="token operator">=</span> properties<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;window&quot;</span><span class="token punctuation">)</span>
document_handle <span class="token operator">=</span> properties<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span>dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>handle <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;({window, document})&quot;</span><span class="token punctuation">)</span>
properties <span class="token operator">=</span> handle<span class="token punctuation">.</span>get_properties<span class="token punctuation">(</span><span class="token punctuation">)</span>
window_handle <span class="token operator">=</span> properties<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;window&quot;</span><span class="token punctuation">)</span>
document_handle <span class="token operator">=</span> properties<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">)</span>
handle<span class="token punctuation">.</span>dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; ({window, document}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> properties <span class="token operator">=</span> <span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">GetPropertiesAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> windowHandle <span class="token operator">=</span> properties<span class="token punctuation">[</span><span class="token string">&quot;window&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> documentHandle <span class="token operator">=</span> properties<span class="token punctuation">[</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">DisposeAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-method-jshandle-getproperty" tabindex="-1"><a class="header-anchor" href="#async-method-jshandle-getproperty" aria-hidden="true">#</a> async method: JSHandle.getProperty</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[JSHandle]&gt;</li></ul><p>Fetches a single property from the referenced object.</p><h3 id="param-jshandle-getproperty-propertyname" tabindex="-1"><a class="header-anchor" href="#param-jshandle-getproperty-propertyname" aria-hidden="true">#</a> param: JSHandle.getProperty.propertyName</h3><ul><li>since: v1.8</li></ul><ul><li><code>propertyName</code> &lt;[string]&gt;</li></ul><p>property to get</p><h2 id="async-method-jshandle-jsonvalue" tabindex="-1"><a class="header-anchor" href="#async-method-jshandle-jsonvalue" aria-hidden="true">#</a> async method: JSHandle.jsonValue</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Serializable]&gt;</li></ul><p>Returns a JSON representation of the object. If the object has a <code>toJSON</code> function, it <strong>will not be called</strong>.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>The method will return an empty JSON object if the referenced object is not stringifiable. It will throw an error if the<br> object has circular references.</p></div>`,76),o=[p];function l(c,i){return a(),s("div",null,o)}const r=n(t,[["render",l],["__file","class-jshandle.html.vue"]]);export{r as default};
