import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as u,a as n,b as s,d as a,w as p,f as t}from"./app-207e7d61.js";const r={},d=t(`<h1 id="class-locatorassertions" tabindex="-1"><a class="header-anchor" href="#class-locatorassertions" aria-hidden="true">#</a> class: LocatorAssertions</h1><ul><li>since: v1.17</li></ul><p>The [LocatorAssertions] class provides assertion methods that can be used to make assertions about the [Locator] state in the tests.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> test<span class="token punctuation">,</span> expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;status becomes submitted&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> page <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;.status&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveText</span><span class="token punctuation">(</span><span class="token string">&#39;Submitted&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>playwright<span class="token punctuation">.</span>assertions<span class="token punctuation">.</span></span><span class="token class-name">PlaywrightAssertions</span><span class="token punctuation">.</span><span class="token static">assertThat</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestLocator</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token annotation punctuation">@Test</span>
  <span class="token keyword">void</span> <span class="token function">statusBecomesSubmitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token class-name">AriaRole</span><span class="token punctuation">.</span><span class="token constant">BUTTON</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;.status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span><span class="token string">&quot;Submitted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> Page<span class="token punctuation">,</span> expect

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">test_status_becomes_submitted</span><span class="token punctuation">(</span>page<span class="token punctuation">:</span> Page<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token comment"># ..</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;.status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token string">&quot;Submitted&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> Page<span class="token punctuation">,</span> expect

<span class="token keyword">def</span> <span class="token function">test_status_becomes_submitted</span><span class="token punctuation">(</span>page<span class="token punctuation">:</span> Page<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token comment"># ..</span>
    page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;.status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token string">&quot;Submitted&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>RegularExpressions</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright<span class="token punctuation">.</span>NUnit</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">NUnit<span class="token punctuation">.</span>Framework</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">PlaywrightTests</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">TestFixture</span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExampleTests</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">PageTest</span></span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Test</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">StatusBecomesSubmitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// ..</span>
        <span class="token keyword">await</span> Page<span class="token punctuation">.</span><span class="token function">GetByRole</span><span class="token punctuation">(</span>AriaRole<span class="token punctuation">.</span>Button<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;.status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveTextAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Submitted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="property-locatorassertions-not" tabindex="-1"><a class="header-anchor" href="#property-locatorassertions-not" aria-hidden="true">#</a> property: LocatorAssertions.not</h2><ul><li>since: v1.20</li><li>langs: java, js, csharp</li></ul><ul><li>returns: &lt;[LocatorAssertions]&gt;</li></ul><p>Makes the assertion check for the opposite condition. For example, this code tests that the Locator doesn&#39;t contain text <code>&quot;error&quot;</code>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toContainText</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">containsText</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>Not<span class="token punctuation">.</span><span class="token function">ToContainTextAsync</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="async-method-locatorassertions-nottobechecked" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottobechecked" aria-hidden="true">#</a> async method: LocatorAssertions.NotToBeChecked</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toBeChecked</code>].</p><h3 id="option-locatorassertions-nottobechecked-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobechecked-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeChecked.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottobedisabled" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottobedisabled" aria-hidden="true">#</a> async method: LocatorAssertions.NotToBeDisabled</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toBeDisabled</code>].</p><h3 id="option-locatorassertions-nottobedisabled-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobedisabled-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeDisabled.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottobeeditable" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottobeeditable" aria-hidden="true">#</a> async method: LocatorAssertions.NotToBeEditable</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toBeEditable</code>].</p><h3 id="option-locatorassertions-nottobeeditable-editable" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobeeditable-editable" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeEditable.editable</h3><ul><li>since: v1.26</li></ul><ul><li><code>editable</code> &lt;[boolean]&gt;</li></ul><h3 id="option-locatorassertions-nottobeeditable-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobeeditable-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeEditable.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottobeempty" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottobeempty" aria-hidden="true">#</a> async method: LocatorAssertions.NotToBeEmpty</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toBeEmpty</code>].</p><h3 id="option-locatorassertions-nottobeempty-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobeempty-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeEmpty.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottobeenabled" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottobeenabled" aria-hidden="true">#</a> async method: LocatorAssertions.NotToBeEnabled</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toBeEnabled</code>].</p><h3 id="option-locatorassertions-nottobeenabled-enabled" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobeenabled-enabled" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeEnabled.enabled</h3><ul><li>since: v1.26</li></ul><ul><li><code>enabled</code> &lt;[boolean]&gt;</li></ul><h3 id="option-locatorassertions-nottobeenabled-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobeenabled-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeEnabled.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottobefocused" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottobefocused" aria-hidden="true">#</a> async method: LocatorAssertions.NotToBeFocused</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toBeFocused</code>].</p><h3 id="option-locatorassertions-nottobefocused-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobefocused-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeFocused.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottobehidden" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottobehidden" aria-hidden="true">#</a> async method: LocatorAssertions.NotToBeHidden</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toBeHidden</code>].</p><h3 id="option-locatorassertions-nottobehidden-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobehidden-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeHidden.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottobeinviewport" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottobeinviewport" aria-hidden="true">#</a> async method: LocatorAssertions.NotToBeInViewport</h2><ul><li>since: v1.31</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toBeInViewport</code>].</p><h3 id="option-locatorassertions-nottobeinviewport-ratio" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobeinviewport-ratio" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeInViewport.ratio</h3><ul><li>since: v1.31</li><li>langs: python</li></ul><ul><li><code>ratio</code> &lt;[float]&gt;</li></ul><h3 id="option-locatorassertions-nottobeinviewport-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobeinviewport-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeInViewport.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.31</li><li>langs: python</li></ul><h2 id="async-method-locatorassertions-nottobevisible" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottobevisible" aria-hidden="true">#</a> async method: LocatorAssertions.NotToBeVisible</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toBeVisible</code>].</p><h3 id="option-locatorassertions-nottobevisible-visible" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobevisible-visible" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeVisible.visible</h3><ul><li>since: v1.26</li></ul><ul><li><code>visible</code> &lt;[boolean]&gt;</li></ul><h3 id="option-locatorassertions-nottobevisible-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottobevisible-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToBeVisible.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottocontaintext" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottocontaintext" aria-hidden="true">#</a> async method: LocatorAssertions.NotToContainText</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toContainText</code>].</p><h3 id="param-locatorassertions-nottocontaintext-expected" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-nottocontaintext-expected" aria-hidden="true">#</a> param: LocatorAssertions.NotToContainText.expected</h3><ul><li>since: v1.18</li></ul><ul><li><code>expected</code> &lt;[string]|[RegExp]|[Array]&lt;[string]&gt;|[Array]&lt;[RegExp]&gt;|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Expected substring or RegExp or a list of those.</p><h3 id="option-locatorassertions-nottocontaintext-ignorecase" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottocontaintext-ignorecase" aria-hidden="true">#</a> option: LocatorAssertions.NotToContainText.ignoreCase</h3><ul><li>since: v1.23</li></ul><ul><li><code>ignoreCase</code> &lt;[boolean]&gt;</li></ul><p>Whether to perform case-insensitive match. [<code>option: ignoreCase</code>] option takes precedence over the corresponding regular expression flag if specified.</p><h3 id="option-locatorassertions-nottocontaintext-useinnertext" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottocontaintext-useinnertext" aria-hidden="true">#</a> option: LocatorAssertions.NotToContainText.useInnerText</h3><ul><li>since: v1.18</li></ul><ul><li><code>useInnerText</code> &lt;[boolean]&gt;</li></ul><p>Whether to use <code>element.innerText</code> instead of <code>element.textContent</code> when retrieving DOM node text.</p><h3 id="option-locatorassertions-nottocontaintext-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottocontaintext-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToContainText.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottohaveattribute" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottohaveattribute" aria-hidden="true">#</a> async method: LocatorAssertions.NotToHaveAttribute</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toHaveAttribute</code>].</p>`,92),k={id:"param-locatorassertions-nottohaveattribute-name",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#param-locatorassertions-nottohaveattribute-name","aria-hidden":"true"},"#",-1),h={href:"http://LocatorAssertions.NotToHaveAttribute.name",target:"_blank",rel:"noopener noreferrer"},m=t('<ul><li>since: v1.18</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Attribute name.</p><h3 id="param-locatorassertions-nottohaveattribute-value" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-nottohaveattribute-value" aria-hidden="true">#</a> param: LocatorAssertions.NotToHaveAttribute.value</h3><ul><li>since: v1.18</li></ul><ul><li><code>value</code> &lt;[string]|[RegExp]&gt;</li></ul><p>Expected attribute value.</p><h3 id="option-locatorassertions-nottohaveattribute-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottohaveattribute-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToHaveAttribute.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottohaveclass" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottohaveclass" aria-hidden="true">#</a> async method: LocatorAssertions.NotToHaveClass</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toHaveClass</code>].</p><h3 id="param-locatorassertions-nottohaveclass-expected" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-nottohaveclass-expected" aria-hidden="true">#</a> param: LocatorAssertions.NotToHaveClass.expected</h3><ul><li>since: v1.18</li></ul><ul><li><code>expected</code> &lt;[string]|[RegExp]|[Array]&lt;[string]&gt;|[Array]&lt;[RegExp]&gt;|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Expected class or RegExp or a list of those.</p><h3 id="option-locatorassertions-nottohaveclass-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottohaveclass-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToHaveClass.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottohavecount" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottohavecount" aria-hidden="true">#</a> async method: LocatorAssertions.NotToHaveCount</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toHaveCount</code>].</p><h3 id="param-locatorassertions-nottohavecount-count" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-nottohavecount-count" aria-hidden="true">#</a> param: LocatorAssertions.NotToHaveCount.count</h3><ul><li>since: v1.18</li></ul><ul><li><code>count</code> &lt;[int]&gt;</li></ul><p>Expected count.</p><h3 id="option-locatorassertions-nottohavecount-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottohavecount-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToHaveCount.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottohavecss" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottohavecss" aria-hidden="true">#</a> async method: LocatorAssertions.NotToHaveCSS</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toHaveCSS</code>].</p>',30),g={id:"param-locatorassertions-nottohavecss-name",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#param-locatorassertions-nottohavecss-name","aria-hidden":"true"},"#",-1),y={href:"http://LocatorAssertions.NotToHaveCSS.name",target:"_blank",rel:"noopener noreferrer"},x=t('<ul><li>since: v1.18</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>CSS property name.</p><h3 id="param-locatorassertions-nottohavecss-value" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-nottohavecss-value" aria-hidden="true">#</a> param: LocatorAssertions.NotToHaveCSS.value</h3><ul><li>since: v1.18</li></ul><ul><li><code>value</code> &lt;[string]|[RegExp]&gt;</li></ul><p>CSS property value.</p><h3 id="option-locatorassertions-nottohavecss-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottohavecss-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToHaveCSS.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottohaveid" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottohaveid" aria-hidden="true">#</a> async method: LocatorAssertions.NotToHaveId</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toHaveId</code>].</p>',12),f={id:"param-locatorassertions-nottohaveid-id",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#param-locatorassertions-nottohaveid-id","aria-hidden":"true"},"#",-1),q={href:"http://LocatorAssertions.NotToHaveId.id",target:"_blank",rel:"noopener noreferrer"},j=t('<ul><li>since: v1.18</li></ul><ul><li><code>id</code> &lt;[string]|[RegExp]&gt;</li></ul><p>Element id.</p><h3 id="option-locatorassertions-nottohaveid-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottohaveid-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToHaveId.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottohavejsproperty" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottohavejsproperty" aria-hidden="true">#</a> async method: LocatorAssertions.NotToHaveJSProperty</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toHaveJSProperty</code>].</p>',8),T={id:"param-locatorassertions-nottohavejsproperty-name",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#param-locatorassertions-nottohavejsproperty-name","aria-hidden":"true"},"#",-1),A={href:"http://LocatorAssertions.NotToHaveJSProperty.name",target:"_blank",rel:"noopener noreferrer"},L=t(`<ul><li>since: v1.18</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Property name.</p><h3 id="param-locatorassertions-nottohavejsproperty-value" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-nottohavejsproperty-value" aria-hidden="true">#</a> param: LocatorAssertions.NotToHaveJSProperty.value</h3><ul><li>since: v1.18</li></ul><ul><li><code>value</code> &lt;[any]&gt;</li></ul><p>Property value.</p><h3 id="option-locatorassertions-nottohavejsproperty-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottohavejsproperty-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToHaveJSProperty.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottohavetext" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottohavetext" aria-hidden="true">#</a> async method: LocatorAssertions.NotToHaveText</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toHaveText</code>].</p><h3 id="param-locatorassertions-nottohavetext-expected" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-nottohavetext-expected" aria-hidden="true">#</a> param: LocatorAssertions.NotToHaveText.expected</h3><ul><li>since: v1.18</li></ul><ul><li><code>expected</code> &lt;[string]|[RegExp]|[Array]&lt;[string]&gt;|[Array]&lt;[RegExp]&gt;|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Expected string or RegExp or a list of those.</p><h3 id="option-locatorassertions-nottohavetext-ignorecase" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottohavetext-ignorecase" aria-hidden="true">#</a> option: LocatorAssertions.NotToHaveText.ignoreCase</h3><ul><li>since: v1.23</li></ul><ul><li><code>ignoreCase</code> &lt;[boolean]&gt;</li></ul><p>Whether to perform case-insensitive match. [<code>option: ignoreCase</code>] option takes precedence over the corresponding regular expression flag if specified.</p><h3 id="option-locatorassertions-nottohavetext-useinnertext" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottohavetext-useinnertext" aria-hidden="true">#</a> option: LocatorAssertions.NotToHaveText.useInnerText</h3><ul><li>since: v1.18</li></ul><ul><li><code>useInnerText</code> &lt;[boolean]&gt;</li></ul><p>Whether to use <code>element.innerText</code> instead of <code>element.textContent</code> when retrieving DOM node text.</p><h3 id="option-locatorassertions-nottohavetext-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottohavetext-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToHaveText.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottohavevalue" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottohavevalue" aria-hidden="true">#</a> async method: LocatorAssertions.NotToHaveValue</h2><ul><li>since: v1.20</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toHaveValue</code>].</p><h3 id="param-locatorassertions-nottohavevalue-value" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-nottohavevalue-value" aria-hidden="true">#</a> param: LocatorAssertions.NotToHaveValue.value</h3><ul><li>since: v1.18</li></ul><ul><li><code>value</code> &lt;[string]|[RegExp]&gt;</li></ul><p>Expected value.</p><h3 id="option-locatorassertions-nottohavevalue-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottohavevalue-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToHaveValue.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-nottohavevalues" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-nottohavevalues" aria-hidden="true">#</a> async method: LocatorAssertions.NotToHaveValues</h2><ul><li>since: v1.23</li><li>langs: python</li></ul><p>The opposite of [<code>method: LocatorAssertions.toHaveValues</code>].</p><h3 id="param-locatorassertions-nottohavevalues-values" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-nottohavevalues-values" aria-hidden="true">#</a> param: LocatorAssertions.NotToHaveValues.values</h3><ul><li>since: v1.23</li></ul><ul><li><code>values</code> &lt;[Array]&lt;[string]&gt;|[Array]&lt;[RegExp]&gt;|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Expected options currently selected.</p><h3 id="option-locatorassertions-nottohavevalues-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-nottohavevalues-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.NotToHaveValues.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.23</li></ul><h2 id="async-method-locatorassertions-tobechecked" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tobechecked" aria-hidden="true">#</a> async method: LocatorAssertions.toBeChecked</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: isChecked</li></ul></li></ul><p>Ensures the [Locator] points to a checked input.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByLabel</span><span class="token punctuation">(</span><span class="token string">&#39;Subscribe to newsletter&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getByLabel</span><span class="token punctuation">(</span><span class="token string">&quot;Subscribe to newsletter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_label<span class="token punctuation">(</span><span class="token string">&quot;Subscribe to newsletter&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_checked<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_label<span class="token punctuation">(</span><span class="token string">&quot;Subscribe to newsletter&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_checked<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">GetByLabel</span><span class="token punctuation">(</span><span class="token string">&quot;Subscribe to newsletter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToBeCheckedAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-locatorassertions-tobechecked-checked" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobechecked-checked" aria-hidden="true">#</a> option: LocatorAssertions.toBeChecked.checked</h3><ul><li>since: v1.18</li></ul><ul><li><code>checked</code> &lt;[boolean]&gt;</li></ul><h3 id="option-locatorassertions-tobechecked-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobechecked-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeChecked.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tobechecked-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobechecked-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeChecked.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tobedisabled" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tobedisabled" aria-hidden="true">#</a> async method: LocatorAssertions.toBeDisabled</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: isDisabled</li></ul></li></ul>`,62),E=n("br",null,null,-1),H={href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-disabled",target:"_blank",rel:"noopener noreferrer"},B=n("br",null,null,-1),S=n("code",null,"button",-1),C=n("code",null,"input",-1),R=n("code",null,"select",-1),N=n("code",null,"textarea",-1),P=n("code",null,"option",-1),V=n("code",null,"optgroup",-1),I=n("br",null,null,-1),U=n("br",null,null,-1),W=t(`<p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;button.submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeDisabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;button.submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isDisabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button.submit&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_disabled<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button.submit&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_disabled<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;button.submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToBeDisabledAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-locatorassertions-tobedisabled-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobedisabled-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeDisabled.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tobedisabled-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobedisabled-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeDisabled.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tobeeditable" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tobeeditable" aria-hidden="true">#</a> async method: LocatorAssertions.toBeEditable</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: isEditable</li></ul></li></ul><p>Ensures the [Locator] points to an editable element.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;textbox&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeEditable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token class-name">AriaRole</span><span class="token punctuation">.</span><span class="token constant">TEXTBOX</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEditable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;textbox&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_editable<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;textbox&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_editable<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">GetByRole</span><span class="token punctuation">(</span>AriaRole<span class="token punctuation">.</span>Textbox<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToBeEditableAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-locatorassertions-tobeeditable-editable" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobeeditable-editable" aria-hidden="true">#</a> option: LocatorAssertions.toBeEditable.editable</h3><ul><li>since: v1.26</li></ul><ul><li><code>editable</code> &lt;[boolean]&gt;</li></ul><h3 id="option-locatorassertions-tobeeditable-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobeeditable-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeEditable.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tobeeditable-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobeeditable-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeEditable.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tobeempty" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tobeempty" aria-hidden="true">#</a> async method: LocatorAssertions.toBeEmpty</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: isEmpty</li></ul></li></ul><p>Ensures the [Locator] points to an empty editable element or to a DOM node that has no text.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;div.warning&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;div.warning&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;div.warning&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_empty<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;div.warning&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_empty<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;div.warning&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToBeEmptyAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-locatorassertions-tobeempty-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobeempty-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeEmpty.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tobeempty-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobeempty-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeEmpty.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tobeenabled" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tobeenabled" aria-hidden="true">#</a> async method: LocatorAssertions.toBeEnabled</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: isEnabled</li></ul></li></ul><p>Ensures the [Locator] points to an enabled element.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;button.submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;button.submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button.submit&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_enabled<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button.submit&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_enabled<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;button.submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeEnabledAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-locatorassertions-tobeenabled-enabled" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobeenabled-enabled" aria-hidden="true">#</a> option: LocatorAssertions.toBeEnabled.enabled</h3><ul><li>since: v1.26</li></ul><ul><li><code>enabled</code> &lt;[boolean]&gt;</li></ul><h3 id="option-locatorassertions-tobeenabled-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobeenabled-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeEnabled.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tobeenabled-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobeenabled-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeEnabled.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tobefocused" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tobefocused" aria-hidden="true">#</a> async method: LocatorAssertions.toBeFocused</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: isFocused</li></ul></li></ul><p>Ensures the [Locator] points to a focused DOM node.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;textbox&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token class-name">AriaRole</span><span class="token punctuation">.</span><span class="token constant">TEXTBOX</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;textbox&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_focused<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;textbox&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_focused<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">GetByRole</span><span class="token punctuation">(</span>AriaRole<span class="token punctuation">.</span>Textbox<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToBeFocusedAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-locatorassertions-tobefocused-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobefocused-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeFocused.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tobefocused-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobefocused-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeFocused.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tobehidden" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tobehidden" aria-hidden="true">#</a> async method: LocatorAssertions.toBeHidden</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: isHidden</li></ul></li></ul>`,70),M=t(`<p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;.my-element&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeHidden</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;.my-element&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;.my-element&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_hidden<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;.my-element&#39;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_hidden<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;.my-element&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToBeHiddenAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-locatorassertions-tobehidden-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobehidden-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeHidden.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tobehidden-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobehidden-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeHidden.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tobeinviewport" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tobeinviewport" aria-hidden="true">#</a> async method: LocatorAssertions.toBeInViewport</h2><ul><li>since: v1.31</li><li>langs: <ul><li>alias-java: isInViewport</li></ul></li></ul>`,12),D={href:"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API",target:"_blank",rel:"noopener noreferrer"},O=t(`<p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Make sure at least some part of element intersects viewport.</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInViewport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Make sure element is fully outside of viewport.</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toBeInViewport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Make sure that at least half of the element intersects viewport.</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeInViewport</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">ratio</span><span class="token operator">:</span> <span class="token number">0.5</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Locator</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token class-name">AriaRole</span><span class="token punctuation">.</span><span class="token constant">BUTTON</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Make sure at least some part of element intersects viewport.</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInViewport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Make sure element is fully outside of viewport.</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInViewport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Make sure that at least half of the element intersects viewport.</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInViewport</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LocatorAssertions<span class="token punctuation">.</span>IsInViewportOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setRatio</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">GetByRole</span><span class="token punctuation">(</span>AriaRole<span class="token punctuation">.</span>Button<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Make sure at least some part of element intersects viewport.</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToBeInViewportAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Make sure element is fully outside of viewport.</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>Not<span class="token punctuation">.</span><span class="token function">ToBeInViewportAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Make sure that at least half of the element intersects viewport.</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToBeInViewportAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Ratio <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># Make sure at least some part of element intersects viewport.</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_in_viewport<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Make sure element is fully outside of viewport.</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>not_to_be_in_viewport<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Make sure that at least half of the element intersects viewport.</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_in_viewport<span class="token punctuation">(</span>ratio<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># Make sure at least some part of element intersects viewport.</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_in_viewport<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Make sure element is fully outside of viewport.</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>not_to_be_in_viewport<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Make sure that at least half of the element intersects viewport.</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_in_viewport<span class="token punctuation">(</span>ratio<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-locatorassertions-tobeinviewport-ratio" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobeinviewport-ratio" aria-hidden="true">#</a> option: LocatorAssertions.toBeInViewport.ratio</h3><ul><li>since: v1.31</li></ul><ul><li><code>ratio</code> &lt;[float]&gt;</li></ul><p>The minimal ratio of the element to intersect viewport. If equals to <code>0</code>, then<br> element should intersect viewport at any positive ratio. Defaults to <code>0</code>.</p><h3 id="option-locatorassertions-tobeinviewport-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobeinviewport-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeInViewport.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.31</li></ul><h3 id="option-locatorassertions-tobeinviewport-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobeinviewport-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeInViewport.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.31</li></ul><h2 id="async-method-locatorassertions-tobevisible" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tobevisible" aria-hidden="true">#</a> async method: LocatorAssertions.toBeVisible</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: isVisible</li></ul></li></ul>`,16),G=t(`<p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;.my-element&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeVisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;.my-element&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isVisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;.my-element&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_visible<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;.my-element&#39;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_visible<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;.my-element&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToBeVisibleAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-locatorassertions-tobevisible-visible" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobevisible-visible" aria-hidden="true">#</a> option: LocatorAssertions.toBeVisible.visible</h3><ul><li>since: v1.26</li></ul><ul><li><code>visible</code> &lt;[boolean]&gt;</li></ul><h3 id="option-locatorassertions-tobevisible-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobevisible-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeVisible.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tobevisible-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tobevisible-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toBeVisible.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tocontaintext" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tocontaintext" aria-hidden="true">#</a> async method: LocatorAssertions.toContainText</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: containsText</li></ul></li></ul><p>Ensures the [Locator] points to an element that contains the given text. You can use regular expressions for the value as well.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;.title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContainText</span><span class="token punctuation">(</span><span class="token string">&#39;substring&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContainText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d messages</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;.title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">containsText</span><span class="token punctuation">(</span><span class="token string">&quot;substring&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;.title&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_contain_text<span class="token punctuation">(</span><span class="token string">&quot;substring&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_contain_text<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;\\d messages&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;.title&#39;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_contain_text<span class="token punctuation">(</span><span class="token string">&quot;substring&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_contain_text<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;\\d messages&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;.title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToContainTextAsync</span><span class="token punctuation">(</span><span class="token string">&quot;substring&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToContainTextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\d messages&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you pass an array as an expected value, the expectations are:</p><ol><li>Locator resolves to a list of elements.</li><li>Elements from a <strong>subset</strong> of this list contain text from the expected array, respectively.</li><li>The matching subset of elements has the same order as the expected array.</li><li>Each text value from the expected array is matched by some element from the list.</li></ol><p>For example, consider the following list:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Item Text 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Item Text 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Item Text 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Let&#39;s see how we can use the assertion:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ✓ Contains the right items in the right order</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;ul &gt; li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContainText</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Text 1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Text 3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Wrong order</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;ul &gt; li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContainText</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Text 3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Text 2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ No item contains this text</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;ul &gt; li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContainText</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Some 33&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Locator points to the outer list element, not to the list items</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContainText</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Text 3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// ✓ Contains the right items in the right order</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">containsText</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 4&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Wrong order</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">containsText</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ No item contains this text</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">containsText</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;Some 33&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Locator points to the outer list element, not to the list items</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">containsText</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

<span class="token comment"># ✓ Contains the right items in the right order</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_contain_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 4&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ✖ Wrong order</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_contain_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ✖ No item contains this text</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_contain_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Some 33&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ✖ Locator points to the outer list element, not to the list items</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_contain_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

<span class="token comment"># ✓ Contains the right items in the right order</span>
expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_contain_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 4&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ✖ Wrong order</span>
expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_contain_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ✖ No item contains this text</span>
expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_contain_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Some 33&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ✖ Locator points to the outer list element, not to the list items</span>
expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_contain_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// ✓ Contains the right items in the right order</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToContainTextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 4&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Wrong order</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToContainTextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ No item contains this text</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToContainTextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token string">&quot;Some 33&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Locator points to the outer list element, not to the list items</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToContainTextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-locatorassertions-tocontaintext-expected" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tocontaintext-expected" aria-hidden="true">#</a> param: LocatorAssertions.toContainText.expected</h3><ul><li>since: v1.18</li><li>langs: js</li></ul><ul><li><code>expected</code> &lt;[string]|[RegExp]|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Expected substring or RegExp or a list of those.</p><h3 id="param-locatorassertions-tocontaintext-expected-1" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tocontaintext-expected-1" aria-hidden="true">#</a> param: LocatorAssertions.toContainText.expected</h3><ul><li>since: v1.18</li><li>langs: python</li></ul><ul><li><code>expected</code> &lt;[string]|[RegExp]|[Array]&lt;[string]&gt;|[Array]&lt;[RegExp]&gt;|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Expected substring or RegExp or a list of those.</p><h3 id="param-locatorassertions-tocontaintext-expected-2" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tocontaintext-expected-2" aria-hidden="true">#</a> param: LocatorAssertions.toContainText.expected</h3><ul><li>since: v1.18</li><li>langs: java, csharp</li></ul><ul><li><code>expected</code> &lt;[string]|[RegExp]|[Array]&lt;[string]&gt;|[Array]&lt;[RegExp]&gt;&gt;</li></ul><p>Expected substring or RegExp or a list of those.</p><h3 id="option-locatorassertions-tocontaintext-ignorecase" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tocontaintext-ignorecase" aria-hidden="true">#</a> option: LocatorAssertions.toContainText.ignoreCase</h3><ul><li>since: v1.23</li></ul><ul><li><code>ignoreCase</code> &lt;[boolean]&gt;</li></ul><p>Whether to perform case-insensitive match. [<code>option: ignoreCase</code>] option takes precedence over the corresponding regular expression flag if specified.</p><h3 id="option-locatorassertions-tocontaintext-useinnertext" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tocontaintext-useinnertext" aria-hidden="true">#</a> option: LocatorAssertions.toContainText.useInnerText</h3><ul><li>since: v1.18</li></ul><ul><li><code>useInnerText</code> &lt;[boolean]&gt;</li></ul><p>Whether to use <code>element.innerText</code> instead of <code>element.textContent</code> when retrieving DOM node text.</p><h3 id="option-locatorassertions-tocontaintext-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tocontaintext-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toContainText.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tocontaintext-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tocontaintext-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toContainText.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tohaveattribute" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tohaveattribute" aria-hidden="true">#</a> async method: LocatorAssertions.toHaveAttribute</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: hasAttribute</li></ul></li></ul><p>Ensures the [Locator] points to an element with given attribute.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_attribute<span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_attribute<span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveAttributeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,65),J={id:"param-locatorassertions-tohaveattribute-name",tabindex:"-1"},F=n("a",{class:"header-anchor",href:"#param-locatorassertions-tohaveattribute-name","aria-hidden":"true"},"#",-1),X={href:"http://LocatorAssertions.toHaveAttribute.name",target:"_blank",rel:"noopener noreferrer"},z=t(`<ul><li>since: v1.18</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Attribute name.</p><h3 id="param-locatorassertions-tohaveattribute-value" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohaveattribute-value" aria-hidden="true">#</a> param: LocatorAssertions.toHaveAttribute.value</h3><ul><li>since: v1.18</li></ul><ul><li><code>value</code> &lt;[string]|[RegExp]&gt;</li></ul><p>Expected attribute value.</p><h3 id="option-locatorassertions-tohaveattribute-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohaveattribute-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveAttribute.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tohaveattribute-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohaveattribute-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveAttribute.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tohaveclass" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tohaveclass" aria-hidden="true">#</a> async method: LocatorAssertions.toHaveClass</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: hasClass</li></ul></li></ul><p>Ensures the [Locator] points to an element with given CSS classes. This needs to be a full match<br> or using a relaxed regular expression.</p><p><strong>Usage</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>selected row<span class="token punctuation">&#39;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>component<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;#component&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveClass</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">selected</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveClass</span><span class="token punctuation">(</span><span class="token string">&#39;selected row&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;#component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;selected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;#component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">&quot;selected row&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;#component&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_class<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;selected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_class<span class="token punctuation">(</span><span class="token string">&quot;selected row&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;#component&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_class<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;selected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_class<span class="token punctuation">(</span><span class="token string">&quot;selected row&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;#component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveClassAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex</span><span class="token punctuation">(</span><span class="token string">&quot;selected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveClassAsync</span><span class="token punctuation">(</span><span class="token string">&quot;selected row&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that if array is passed as an expected value, entire lists of elements can be asserted:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;list &gt; .component&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveClass</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;component&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;component selected&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;component&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;list &gt; .component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;component&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;component selected&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;component&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;list &gt; .component&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_class<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;component&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;component selected&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;component&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;list &gt; .component&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_class<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;component&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;component selected&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;component&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;list &gt; .component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveClassAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">{</span><span class="token string">&quot;component&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;component selected&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;component&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-locatorassertions-tohaveclass-expected" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohaveclass-expected" aria-hidden="true">#</a> param: LocatorAssertions.toHaveClass.expected</h3><ul><li>since: v1.18</li><li>langs: js</li></ul><ul><li><code>expected</code> &lt;[string]|[RegExp]|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Expected class or RegExp or a list of those.</p><h3 id="param-locatorassertions-tohaveclass-expected-1" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohaveclass-expected-1" aria-hidden="true">#</a> param: LocatorAssertions.toHaveClass.expected</h3><ul><li>since: v1.18</li><li>langs: python</li></ul><ul><li><code>expected</code> &lt;[string]|[RegExp]|[Array]&lt;[string]&gt;|[Array]&lt;[RegExp]&gt;|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Expected class or RegExp or a list of those.</p><h3 id="param-locatorassertions-tohaveclass-expected-2" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohaveclass-expected-2" aria-hidden="true">#</a> param: LocatorAssertions.toHaveClass.expected</h3><ul><li>since: v1.18</li><li>langs: java, csharp</li></ul><ul><li><code>expected</code> &lt;[string]|[RegExp]|[Array]&lt;[string]&gt;|[Array]&lt;[RegExp]&gt;&gt;</li></ul><p>Expected class or RegExp or a list of those.</p><h3 id="option-locatorassertions-tohaveclass-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohaveclass-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveClass.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tohaveclass-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohaveclass-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveClass.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tohavecount" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tohavecount" aria-hidden="true">#</a> async method: LocatorAssertions.toHaveCount</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: hasCount</li></ul></li></ul><p>Ensures the [Locator] resolves to an exact number of DOM nodes.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> list <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;list &gt; .component&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveCount</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;list &gt; .component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasCount</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;list &gt; .component&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_count<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;list &gt; .component&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_count<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;list &gt; .component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveCountAsync</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-locatorassertions-tohavecount-count" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohavecount-count" aria-hidden="true">#</a> param: LocatorAssertions.toHaveCount.count</h3><ul><li>since: v1.18</li></ul><ul><li><code>count</code> &lt;[int]&gt;</li></ul><p>Expected count.</p><h3 id="option-locatorassertions-tohavecount-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavecount-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveCount.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tohavecount-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavecount-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveCount.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tohavecss" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tohavecss" aria-hidden="true">#</a> async method: LocatorAssertions.toHaveCSS</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: hasCSS</li></ul></li></ul><p>Ensures the [Locator] resolves to an element with the given computed CSS style.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveCSS</span><span class="token punctuation">(</span><span class="token string">&#39;display&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;flex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token class-name">AriaRole</span><span class="token punctuation">.</span><span class="token constant">BUTTON</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasCSS</span><span class="token punctuation">(</span><span class="token string">&quot;display&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;flex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_css<span class="token punctuation">(</span><span class="token string">&quot;display&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;flex&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_css<span class="token punctuation">(</span><span class="token string">&quot;display&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;flex&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">GetByRole</span><span class="token punctuation">(</span>AriaRole<span class="token punctuation">.</span>Button<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveCSSAsync</span><span class="token punctuation">(</span><span class="token string">&quot;display&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;flex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,69),Y={id:"param-locatorassertions-tohavecss-name",tabindex:"-1"},K=n("a",{class:"header-anchor",href:"#param-locatorassertions-tohavecss-name","aria-hidden":"true"},"#",-1),Q={href:"http://LocatorAssertions.toHaveCSS.name",target:"_blank",rel:"noopener noreferrer"},Z=t(`<ul><li>since: v1.18</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>CSS property name.</p><h3 id="param-locatorassertions-tohavecss-value" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohavecss-value" aria-hidden="true">#</a> param: LocatorAssertions.toHaveCSS.value</h3><ul><li>since: v1.18</li></ul><ul><li><code>value</code> &lt;[string]|[RegExp]&gt;</li></ul><p>CSS property value.</p><h3 id="option-locatorassertions-tohavecss-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavecss-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveCSS.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tohavecss-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavecss-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveCSS.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tohaveid" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tohaveid" aria-hidden="true">#</a> async method: LocatorAssertions.toHaveId</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: hasId</li></ul></li></ul><p>Ensures the [Locator] points to an element with the given DOM Node ID.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;textbox&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveId</span><span class="token punctuation">(</span><span class="token string">&#39;lastname&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token class-name">AriaRole</span><span class="token punctuation">.</span><span class="token constant">TEXTBOX</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasId</span><span class="token punctuation">(</span><span class="token string">&quot;lastname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;textbox&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_id<span class="token punctuation">(</span><span class="token string">&quot;lastname&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;textbox&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_id<span class="token punctuation">(</span><span class="token string">&quot;lastname&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">GetByRole</span><span class="token punctuation">(</span>AriaRole<span class="token punctuation">.</span>Textbox<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveIdAsync</span><span class="token punctuation">(</span><span class="token string">&quot;lastname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,20),$={id:"param-locatorassertions-tohaveid-id",tabindex:"-1"},nn=n("a",{class:"header-anchor",href:"#param-locatorassertions-tohaveid-id","aria-hidden":"true"},"#",-1),sn={href:"http://LocatorAssertions.toHaveId.id",target:"_blank",rel:"noopener noreferrer"},an=t(`<ul><li>since: v1.18</li></ul><ul><li><code>id</code> &lt;[string]|[RegExp]&gt;</li></ul><p>Element id.</p><h3 id="option-locatorassertions-tohaveid-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohaveid-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveId.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tohaveid-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohaveid-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveId.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tohavejsproperty" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tohavejsproperty" aria-hidden="true">#</a> async method: LocatorAssertions.toHaveJSProperty</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: hasJSProperty</li></ul></li></ul><p>Ensures the [Locator] points to an element with given JavaScript property. Note that this property can be<br> of a primitive type as well as a plain serializable JavaScript object.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;.component&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveJSProperty</span><span class="token punctuation">(</span><span class="token string">&#39;loaded&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasJSProperty</span><span class="token punctuation">(</span><span class="token string">&quot;loaded&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;.component&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_js_property<span class="token punctuation">(</span><span class="token string">&quot;loaded&quot;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;.component&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_js_property<span class="token punctuation">(</span><span class="token string">&quot;loaded&quot;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;.component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveJSPropertyAsync</span><span class="token punctuation">(</span><span class="token string">&quot;loaded&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,16),tn={id:"param-locatorassertions-tohavejsproperty-name",tabindex:"-1"},on=n("a",{class:"header-anchor",href:"#param-locatorassertions-tohavejsproperty-name","aria-hidden":"true"},"#",-1),en={href:"http://LocatorAssertions.toHaveJSProperty.name",target:"_blank",rel:"noopener noreferrer"},pn=t(`<ul><li>since: v1.18</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Property name.</p><h3 id="param-locatorassertions-tohavejsproperty-value" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohavejsproperty-value" aria-hidden="true">#</a> param: LocatorAssertions.toHaveJSProperty.value</h3><ul><li>since: v1.18</li></ul><ul><li><code>value</code> &lt;[any]&gt;</li></ul><p>Property value.</p><h3 id="option-locatorassertions-tohavejsproperty-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavejsproperty-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveJSProperty.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tohavejsproperty-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavejsproperty-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveJSProperty.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tohavescreenshot-1" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tohavescreenshot-1" aria-hidden="true">#</a> async method: LocatorAssertions.toHaveScreenshot#1</h2><ul><li>since: v1.23</li><li>langs: js</li></ul><p>This function will wait until two consecutive locator screenshots<br> yield the same result, and then compare the last screenshot with the expectation.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveScreenshot</span><span class="token punctuation">(</span><span class="token string">&#39;image.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that screenshot assertions only work with Playwright test runner.</p>`,17),cn={id:"param-locatorassertions-tohavescreenshot-1-name",tabindex:"-1"},ln=n("a",{class:"header-anchor",href:"#param-locatorassertions-tohavescreenshot-1-name","aria-hidden":"true"},"#",-1),un={href:"http://1.name",target:"_blank",rel:"noopener noreferrer"},rn=t(`<ul><li>since: v1.23</li></ul><ul><li><code>name</code> &lt;[string]|[Array]&lt;[string]&gt;&gt;</li></ul><p>Snapshot name.</p><h3 id="option-locatorassertions-tohavescreenshot-1-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-1-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#1.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-1-animations-screenshot-option-animations-default-disabled" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-1-animations-screenshot-option-animations-default-disabled" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#1.animations = %%-screenshot-option-animations-default-disabled-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-1-caret-screenshot-option-caret" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-1-caret-screenshot-option-caret" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#1.caret = %%-screenshot-option-caret-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-1-mask-screenshot-option-mask" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-1-mask-screenshot-option-mask" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#1.mask = %%-screenshot-option-mask-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-1-omitbackground-screenshot-option-omit-background" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-1-omitbackground-screenshot-option-omit-background" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#1.omitBackground = %%-screenshot-option-omit-background-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-1-scale-screenshot-option-scale-default-css" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-1-scale-screenshot-option-scale-default-css" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#1.scale = %%-screenshot-option-scale-default-css-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-1-maxdiffpixels-assertions-max-diff-pixels" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-1-maxdiffpixels-assertions-max-diff-pixels" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#1.maxDiffPixels = %%-assertions-max-diff-pixels-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-1-maxdiffpixelratio-assertions-max-diff-pixel-ratio" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-1-maxdiffpixelratio-assertions-max-diff-pixel-ratio" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#1.maxDiffPixelRatio = %%-assertions-max-diff-pixel-ratio-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-1-threshold-assertions-threshold" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-1-threshold-assertions-threshold" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#1.threshold = %%-assertions-threshold-%%</h3><ul><li>since: v1.23</li></ul><h2 id="async-method-locatorassertions-tohavescreenshot-2" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tohavescreenshot-2" aria-hidden="true">#</a> async method: LocatorAssertions.toHaveScreenshot#2</h2><ul><li>since: v1.23</li><li>langs: js</li></ul><p>This function will wait until two consecutive locator screenshots<br> yield the same result, and then compare the last screenshot with the expectation.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveScreenshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that screenshot assertions only work with Playwright test runner.</p><h3 id="option-locatorassertions-tohavescreenshot-2-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-2-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#2.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-2-animations-screenshot-option-animations-default-disabled" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-2-animations-screenshot-option-animations-default-disabled" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#2.animations = %%-screenshot-option-animations-default-disabled-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-2-caret-screenshot-option-caret" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-2-caret-screenshot-option-caret" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#2.caret = %%-screenshot-option-caret-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-2-mask-screenshot-option-mask" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-2-mask-screenshot-option-mask" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#2.mask = %%-screenshot-option-mask-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-2-omitbackground-screenshot-option-omit-background" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-2-omitbackground-screenshot-option-omit-background" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#2.omitBackground = %%-screenshot-option-omit-background-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-2-scale-screenshot-option-scale-default-css" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-2-scale-screenshot-option-scale-default-css" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#2.scale = %%-screenshot-option-scale-default-css-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-2-maxdiffpixels-assertions-max-diff-pixels" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-2-maxdiffpixels-assertions-max-diff-pixels" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#2.maxDiffPixels = %%-assertions-max-diff-pixels-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-2-maxdiffpixelratio-assertions-max-diff-pixel-ratio" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-2-maxdiffpixelratio-assertions-max-diff-pixel-ratio" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#2.maxDiffPixelRatio = %%-assertions-max-diff-pixel-ratio-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavescreenshot-2-threshold-assertions-threshold" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavescreenshot-2-threshold-assertions-threshold" aria-hidden="true">#</a> option: LocatorAssertions.toHaveScreenshot#2.threshold = %%-assertions-threshold-%%</h3><ul><li>since: v1.23</li></ul><h2 id="async-method-locatorassertions-tohavetext" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tohavetext" aria-hidden="true">#</a> async method: LocatorAssertions.toHaveText</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: hasText</li></ul></li></ul><p>Ensures the [Locator] points to an element with the given text. You can use regular expressions for the value as well.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;.title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Welcome, Test User</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveText</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Welcome, .*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;.title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span><span class="token string">&quot;Welcome, Test User&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;.title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;Welcome, .*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;.title&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;Welcome, Test User&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;Welcome, .*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;.title&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;Welcome, Test User&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;Welcome, .*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;.title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveTextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex</span><span class="token punctuation">(</span><span class="token string">&quot;Welcome, Test User&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveTextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex</span><span class="token punctuation">(</span><span class="token string">&quot;Welcome, .*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you pass an array as an expected value, the expectations are:</p><ol><li>Locator resolves to a list of elements.</li><li>The number of elements equals the number of expected values in the array.</li><li>Elements from the list have text matching expected array values, one by one, in order.</li></ol><p>For example, consider the following list:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Text 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Text 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Text 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Let&#39;s see how we can use the assertion:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ✓ Has the right items in the right order</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;ul &gt; li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveText</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Text 1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Text 2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Text 3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Wrong order</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;ul &gt; li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveText</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Text 3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Text 2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Text 1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Last item does not match</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;ul &gt; li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveText</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Text 1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Text 2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Text&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Locator points to the outer list element, not to the list items</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveText</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Text 1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Text 2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Text 3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// ✓ Has the right items in the right order</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Wrong order</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Last item does not match</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Locator points to the outer list element, not to the list items</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

<span class="token comment"># ✓ Has the right items in the right order</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ✖ Wrong order</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ✖ Last item does not match</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ✖ Locator points to the outer list element, not to the list items</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

<span class="token comment"># ✓ Has the right items in the right order</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ✖ Wrong order</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ✖ Last item does not match</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># ✖ Locator points to the outer list element, not to the list items</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// ✓ Has the right items in the right order</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveTextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Wrong order</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveTextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Last item does not match</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul &gt; li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveTextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ✖ Locator points to the outer list element, not to the list items</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveTextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span><span class="token string">&quot;Text 1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Text 3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-locatorassertions-tohavetext-expected" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohavetext-expected" aria-hidden="true">#</a> param: LocatorAssertions.toHaveText.expected</h3><ul><li>since: v1.18</li><li>langs: js</li></ul><ul><li><code>expected</code> &lt;[string]|[RegExp]|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Expected string or RegExp or a list of those.</p><h3 id="param-locatorassertions-tohavetext-expected-1" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohavetext-expected-1" aria-hidden="true">#</a> param: LocatorAssertions.toHaveText.expected</h3><ul><li>since: v1.18</li><li>langs: python</li></ul><ul><li><code>expected</code> &lt;[string]|[RegExp]|[Array]&lt;[string]&gt;|[Array]&lt;[RegExp]&gt;|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Expected string or RegExp or a list of those.</p><h3 id="param-locatorassertions-tohavetext-expected-2" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohavetext-expected-2" aria-hidden="true">#</a> param: LocatorAssertions.toHaveText.expected</h3><ul><li>since: v1.18</li><li>langs: java, csharp</li></ul><ul><li><code>expected</code> &lt;[string]|[RegExp]|[Array]&lt;[string]&gt;|[Array]&lt;[RegExp]&gt;&gt;</li></ul><p>Expected string or RegExp or a list of those.</p><h3 id="option-locatorassertions-tohavetext-ignorecase" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavetext-ignorecase" aria-hidden="true">#</a> option: LocatorAssertions.toHaveText.ignoreCase</h3><ul><li>since: v1.23</li></ul><ul><li><code>ignoreCase</code> &lt;[boolean]&gt;</li></ul><p>Whether to perform case-insensitive match. [<code>option: ignoreCase</code>] option takes precedence over the corresponding regular expression flag if specified.</p><h3 id="option-locatorassertions-tohavetext-useinnertext" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavetext-useinnertext" aria-hidden="true">#</a> option: LocatorAssertions.toHaveText.useInnerText</h3><ul><li>since: v1.18</li></ul><ul><li><code>useInnerText</code> &lt;[boolean]&gt;</li></ul><p>Whether to use <code>element.innerText</code> instead of <code>element.textContent</code> when retrieving DOM node text.</p><h3 id="option-locatorassertions-tohavetext-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavetext-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveText.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tohavetext-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavetext-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveText.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tohavevalue" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tohavevalue" aria-hidden="true">#</a> async method: LocatorAssertions.toHaveValue</h2><ul><li>since: v1.20</li><li>langs: <ul><li>alias-java: hasValue</li></ul></li></ul><p>Ensures the [Locator] points to an element with the given input value. You can use regular expressions for the value as well.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;input[type=number]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveValue</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[0-9]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;input[type=number]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasValue</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;[0-9]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;input[type=number]&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_value<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;[0-9]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;input[type=number]&quot;</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_value<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;[0-9]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;input[type=number]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveValueAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex</span><span class="token punctuation">(</span><span class="token string">&quot;[0-9]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-locatorassertions-tohavevalue-value" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohavevalue-value" aria-hidden="true">#</a> param: LocatorAssertions.toHaveValue.value</h3><ul><li>since: v1.18</li></ul><ul><li><code>value</code> &lt;[string]|[RegExp]&gt;</li></ul><p>Expected value.</p><h3 id="option-locatorassertions-tohavevalue-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavevalue-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveValue.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h3 id="option-locatorassertions-tohavevalue-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavevalue-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveValue.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.18</li></ul><h2 id="async-method-locatorassertions-tohavevalues" tabindex="-1"><a class="header-anchor" href="#async-method-locatorassertions-tohavevalues" aria-hidden="true">#</a> async method: LocatorAssertions.toHaveValues</h2><ul><li>since: v1.23</li><li>langs: <ul><li>alias-java: hasValues</li></ul></li></ul><p>Ensures the [Locator] points to multi-select/combobox (i.e. a <code>select</code> with the <code>multiple</code> attribute) and the specified values are selected.</p><p><strong>Usage</strong></p><p>For example, given the following element:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>favorite-colors<span class="token punctuation">&quot;</span></span> <span class="token attr-name">multiple</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>R<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Red<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>G<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Green<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>B<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;id=favorite-colors&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;R&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;G&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveValues</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">R</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">G</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;id=favorite-colors&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;R&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;G&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;id=favorite-colors&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasValues</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Pattern</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;R&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;G&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;id=favorite-colors&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;R&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;G&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_values<span class="token punctuation">(</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;R&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;G&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;id=favorite-colors&quot;</span><span class="token punctuation">)</span>
locator<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;R&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;G&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_values<span class="token punctuation">(</span><span class="token punctuation">[</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;R&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;G&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> Page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;id=favorite-colors&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">SelectOptionAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token string">&quot;R&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;G&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveValuesAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex<span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex</span><span class="token punctuation">(</span><span class="token string">&quot;R&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex</span><span class="token punctuation">(</span><span class="token string">&quot;G&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-locatorassertions-tohavevalues-values" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohavevalues-values" aria-hidden="true">#</a> param: LocatorAssertions.toHaveValues.values</h3><ul><li>since: v1.23</li><li>langs: js</li></ul><ul><li><code>values</code> &lt;[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Expected options currently selected.</p><h3 id="param-locatorassertions-tohavevalues-values-1" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohavevalues-values-1" aria-hidden="true">#</a> param: LocatorAssertions.toHaveValues.values</h3><ul><li>since: v1.23</li><li>langs: python</li></ul><ul><li><code>values</code> &lt;[Array]&lt;[string]&gt;|[Array]&lt;[RegExp]&gt;|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Expected options currently selected.</p><h3 id="param-locatorassertions-tohavevalues-values-2" tabindex="-1"><a class="header-anchor" href="#param-locatorassertions-tohavevalues-values-2" aria-hidden="true">#</a> param: LocatorAssertions.toHaveValues.values</h3><ul><li>since: v1.23</li><li>langs: java, csharp</li></ul><ul><li><code>values</code> &lt;[Array]&lt;[string]&gt;|[Array]&lt;[RegExp]&gt;&gt;</li></ul><p>Expected options currently selected.</p><h3 id="option-locatorassertions-tohavevalues-timeout-js-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavevalues-timeout-js-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveValues.timeout = %%-js-assertions-timeout-%%</h3><ul><li>since: v1.23</li></ul><h3 id="option-locatorassertions-tohavevalues-timeout-csharp-java-python-assertions-timeout" tabindex="-1"><a class="header-anchor" href="#option-locatorassertions-tohavevalues-timeout-csharp-java-python-assertions-timeout" aria-hidden="true">#</a> option: LocatorAssertions.toHaveValues.timeout = %%-csharp-java-python-assertions-timeout-%%</h3><ul><li>since: v1.23</li></ul>`,132);function dn(kn,vn){const o=c("ExternalLinkIcon"),e=c("RouterLink");return l(),u("div",null,[d,n("h3",k,[v,s(" param: "),n("a",h,[s("LocatorAssertions.NotToHaveAttribute.name"),a(o)])]),m,n("h3",g,[b,s(" param: "),n("a",y,[s("LocatorAssertions.NotToHaveCSS.name"),a(o)])]),x,n("h3",f,[w,s(" param: "),n("a",q,[s("LocatorAssertions.NotToHaveId.id"),a(o)])]),j,n("h3",T,[_,s(" param: "),n("a",A,[s("LocatorAssertions.NotToHaveJSProperty.name"),a(o)])]),L,n("p",null,[s('Ensures the [Locator] points to a disabled element. Element is disabled if it has "disabled" attribute'),E,s(" or is disabled via "),n("a",H,[s("'aria-disabled'"),a(o)]),s("."),B,s(" Note that only native control elements such as HTML "),S,s(", "),C,s(", "),R,s(", "),N,s(", "),P,s(", "),V,I,s(' can be disabled by setting "disabled" attribute. "disabled" attribute on other elements is ignored'),U,s(" by the browser.")]),W,n("p",null,[s("Ensures that [Locator] either does not resolve to any DOM node, or resolves to a "),a(e,{to:"/book/playwright/actionability.html#visible"},{default:p(()=>[s("non-visible")]),_:1}),s(" one.")]),M,n("p",null,[s("Ensures the [Locator] points to an element that intersects viewport, according to the "),n("a",D,[s("intersection observer API"),a(o)]),s(".")]),O,n("p",null,[s("Ensures that [Locator] points to an "),a(e,{to:"/book/playwright/actionability.html#attached"},{default:p(()=>[s("attached")]),_:1}),s(" and "),a(e,{to:"/book/playwright/actionability.html#visible"},{default:p(()=>[s("visible")]),_:1}),s(" DOM node.")]),G,n("h3",J,[F,s(" param: "),n("a",X,[s("LocatorAssertions.toHaveAttribute.name"),a(o)])]),z,n("h3",Y,[K,s(" param: "),n("a",Q,[s("LocatorAssertions.toHaveCSS.name"),a(o)])]),Z,n("h3",$,[nn,s(" param: "),n("a",sn,[s("LocatorAssertions.toHaveId.id"),a(o)])]),an,n("h3",tn,[on,s(" param: "),n("a",en,[s("LocatorAssertions.toHaveJSProperty.name"),a(o)])]),pn,n("h3",cn,[ln,s(" param: LocatorAssertions.toHaveScreenshot#"),n("a",un,[s("1.name"),a(o)])]),rn])}const gn=i(r,[["render",dn],["__file","class-locatorassertions.html.vue"]]);export{gn as default};
