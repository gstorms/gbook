import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as i,c as r,a,b as n,d as t,f as s}from"./app-207e7d61.js";const p={},c=s(`<h1 id="class-logger" tabindex="-1"><a class="header-anchor" href="#class-logger" aria-hidden="true">#</a> class: Logger</h1><ul><li>since: v1.8</li><li>langs: js</li></ul><p>Playwright generates a lot of logs and they are accessible via the pluggable logger sink.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> chromium <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Or &#39;firefox&#39; or &#39;webkit&#39;.</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">logger</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">isEnabled</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> severity</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> name <span class="token operator">===</span> <span class="token string">&#39;browser&#39;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">log</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> severity<span class="token punctuation">,</span> message<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="method-logger-isenabled" tabindex="-1"><a class="header-anchor" href="#method-logger-isenabled" aria-hidden="true">#</a> method: Logger.isEnabled</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[boolean]&gt;</li></ul><p>Determines whether sink is interested in the logger with the given name and severity.</p>`,8),u={id:"param-logger-isenabled-name",tabindex:"-1"},g=a("a",{class:"header-anchor",href:"#param-logger-isenabled-name","aria-hidden":"true"},"#",-1),d={href:"http://Logger.isEnabled.name",target:"_blank",rel:"noopener noreferrer"},h=s('<ul><li>since: v1.8</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>logger name</p><h3 id="param-logger-isenabled-severity" tabindex="-1"><a class="header-anchor" href="#param-logger-isenabled-severity" aria-hidden="true">#</a> param: Logger.isEnabled.severity</h3><ul><li>since: v1.8</li></ul><ul><li><code>severity</code> &lt;[LogSeverity]&lt;&quot;verbose&quot;|&quot;info&quot;|&quot;warning&quot;|&quot;error&quot;&gt;&gt;</li></ul><h2 id="method-logger-log" tabindex="-1"><a class="header-anchor" href="#method-logger-log" aria-hidden="true">#</a> method: Logger.log</h2><ul><li>since: v1.8</li></ul>',8),m={id:"param-logger-log-name",tabindex:"-1"},k=a("a",{class:"header-anchor",href:"#param-logger-log-name","aria-hidden":"true"},"#",-1),v={href:"http://Logger.log.name",target:"_blank",rel:"noopener noreferrer"},b=s('<ul><li>since: v1.8</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>logger name</p><h3 id="param-logger-log-severity" tabindex="-1"><a class="header-anchor" href="#param-logger-log-severity" aria-hidden="true">#</a> param: Logger.log.severity</h3><ul><li>since: v1.8</li></ul><ul><li><code>severity</code> &lt;[LogSeverity]&lt;&quot;verbose&quot;|&quot;info&quot;|&quot;warning&quot;|&quot;error&quot;&gt;&gt;</li></ul><h3 id="param-logger-log-message" tabindex="-1"><a class="header-anchor" href="#param-logger-log-message" aria-hidden="true">#</a> param: Logger.log.message</h3><ul><li>since: v1.8</li></ul><ul><li><code>message</code> &lt;[string]|[Error]&gt;</li></ul><p>log message format</p><h3 id="param-logger-log-args" tabindex="-1"><a class="header-anchor" href="#param-logger-log-args" aria-hidden="true">#</a> param: Logger.log.args</h3><ul><li>since: v1.8</li></ul><ul><li><code>args</code> &lt;[Array]&lt;[Object]&gt;&gt;</li></ul><p>message arguments</p><h3 id="param-logger-log-hints" tabindex="-1"><a class="header-anchor" href="#param-logger-log-hints" aria-hidden="true">#</a> param: Logger.log.hints</h3><ul><li>since: v1.8</li></ul><ul><li><code>hints</code> &lt;[Object]&gt; <ul><li><code>color</code> ?&lt;[string]&gt; Optional preferred logger color.</li></ul></li></ul><p>optional formatting hints</p>',18);function f(_,y){const e=l("ExternalLinkIcon");return i(),r("div",null,[c,a("h3",u,[g,n(" param: "),a("a",d,[n("Logger.isEnabled.name"),t(e)])]),h,a("h3",m,[k,n(" param: "),a("a",v,[n("Logger.log.name"),t(e)])]),b])}const L=o(p,[["render",f],["__file","class-logger.html.vue"]]);export{L as default};
