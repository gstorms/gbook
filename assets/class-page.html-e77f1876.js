import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as l,c as u,a as n,b as a,d as s,w as p,f as t}from"./app-3f278ba4.js";const r={},d=n("h1",{id:"class-page",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#class-page","aria-hidden":"true"},"#"),a(" class: Page")],-1),k=n("ul",null,[n("li",null,"since: v1.8"),n("li",null,"extends: [EventEmitter]")],-1),h=n("br",null,null,-1),g={href:"https://developer.chrome.com/extensions/background_pages",target:"_blank",rel:"noopener noreferrer"},v=n("br",null,null,-1),m=t(`<p>This example creates a page, navigates it to a URL, and then saves a screenshot:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> webkit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Or &#39;chromium&#39; or &#39;firefox&#39;.</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;screenshot.png&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>playwright<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Playwright</span> playwright <span class="token operator">=</span> <span class="token class-name">Playwright</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BrowserType</span> webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span><span class="token function">webkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Browser</span> browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">BrowserContext</span> context <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Page</span> page <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Page<span class="token punctuation">.</span>ScreenshotOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;screenshot.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;screenshot.png&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;screenshot.png&quot;</span><span class="token punctuation">)</span>
    browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
    run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">PageExamples</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Webkit<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.theverge.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ScreenshotAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PageScreenshotOptions</span> <span class="token punctuation">{</span> Path <span class="token operator">=</span> <span class="token string">&quot;theverge.png&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),b=n("br",null,null,-1),f={href:"https://nodejs.org/api/events.html#events_class_eventemitter",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"EventEmitter",-1),y=n("code",null,"on",-1),q=n("code",null,"once",-1),x=n("br",null,null,-1),_=n("code",null,"removeListener",-1),P=t(`<p>This example logs a message for a single page <code>load</code> event:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>page<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;load&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Page loaded!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Page loaded!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>once<span class="token punctuation">(</span><span class="token string">&quot;load&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;page loaded!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>page<span class="token punctuation">.</span>Load <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Page loaded!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>To unsubscribe from events use the <code>removeListener</code> method:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">logRequest</span><span class="token punctuation">(</span><span class="token parameter">interceptedRequest</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;A request was made:&#39;</span><span class="token punctuation">,</span> interceptedRequest<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> logRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Sometime later...</span>
page<span class="token punctuation">.</span><span class="token function">removeListener</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> logRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Request</span><span class="token punctuation">&gt;</span></span> logRequest <span class="token operator">=</span> interceptedRequest <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;A request was made: &quot;</span> <span class="token operator">+</span> interceptedRequest<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">onRequest</span><span class="token punctuation">(</span>logRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Sometime later...</span>
page<span class="token punctuation">.</span><span class="token function">offRequest</span><span class="token punctuation">(</span>logRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">log_request</span><span class="token punctuation">(</span>intercepted_request<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a request was made:&quot;</span><span class="token punctuation">,</span> intercepted_request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> log_request<span class="token punctuation">)</span>
<span class="token comment"># sometime later...</span>
page<span class="token punctuation">.</span>remove_listener<span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> log_request<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">PageLoadHandler</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> _<span class="token punctuation">,</span> <span class="token class-name">IPage</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Page loaded!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

page<span class="token punctuation">.</span>Load <span class="token operator">+=</span> PageLoadHandler<span class="token punctuation">;</span>
<span class="token comment">// Do some work...</span>
page<span class="token punctuation">.</span>Load <span class="token operator">-=</span> PageLoadHandler<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-page-close" tabindex="-1"><a class="header-anchor" href="#event-page-close" aria-hidden="true">#</a> event: Page.close</h2><ul><li>since: v1.8</li></ul><ul><li>argument: &lt;[Page]&gt;</li></ul><p>Emitted when the page closes.</p><h2 id="event-page-console" tabindex="-1"><a class="header-anchor" href="#event-page-console" aria-hidden="true">#</a> event: Page.console</h2><ul><li>since: v1.8</li><li>langs: <ul><li>alias-java: consoleMessage</li></ul></li></ul><ul><li>argument: &lt;[ConsoleMessage]&gt;</li></ul><p>Emitted when JavaScript within the page calls one of console API methods, e.g. <code>console.log</code> or <code>console.dir</code>. Also<br> emitted if the page throws an error or a warning.</p><p>The arguments passed into <code>console.log</code> appear as arguments on the event handler.</p><p>An example of handling <code>console</code> event:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;console&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">msg</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> arg <span class="token keyword">of</span> msg<span class="token punctuation">.</span><span class="token function">args</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    values<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">await</span> arg<span class="token punctuation">.</span><span class="token function">jsonValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">onConsoleMessage</span><span class="token punctuation">(</span>msg <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> msg<span class="token punctuation">.</span><span class="token function">args</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span><span class="token function">args</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">jsonValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; console.log(&#39;hello&#39;, 5, {foo: &#39;bar&#39;})&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">print_args</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> arg <span class="token keyword">in</span> msg<span class="token punctuation">.</span>args<span class="token punctuation">:</span>
        values<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token keyword">await</span> arg<span class="token punctuation">.</span>json_value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span>

page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;console&quot;</span><span class="token punctuation">,</span> print_args<span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;console.log(&#39;hello&#39;, 5, {foo: &#39;bar&#39;})&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">print_args</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> arg <span class="token keyword">in</span> msg<span class="token punctuation">.</span>args<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>json_value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;console&quot;</span><span class="token punctuation">,</span> print_args<span class="token punctuation">)</span>
page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;console.log(&#39;hello&#39;, 5, {foo: &#39;bar&#39;})&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>page<span class="token punctuation">.</span>Console <span class="token operator">+=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> msg<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> arg <span class="token keyword">in</span> msg<span class="token punctuation">.</span>Args<span class="token punctuation">)</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> arg<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">JsonValueAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;console.log(&#39;hello&#39;, 5, { foo: &#39;bar&#39; })&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-page-crash" tabindex="-1"><a class="header-anchor" href="#event-page-crash" aria-hidden="true">#</a> event: Page.crash</h2><ul><li>since: v1.8</li></ul><ul><li>argument: &lt;[Page]&gt;</li></ul><p>Emitted when the page crashes. Browser pages might crash if they try to allocate too much memory. When the page crashes,<br> ongoing and subsequent operations will throw.</p><p>The most common way to deal with crashes is to catch an exception:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token comment">// Crash might happen during a click.</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Or while waiting for an event.</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForEvent</span><span class="token punctuation">(</span><span class="token string">&#39;popup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// When the page crashes, exception message contains &#39;crash&#39;.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token comment">// Crash might happen during a click.</span>
  page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Or while waiting for an event.</span>
  page<span class="token punctuation">.</span><span class="token function">waitForPopup</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PlaywrightException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// When the page crashes, exception message contains &quot;crash&quot;.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token comment"># crash might happen during a click.</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>
    <span class="token comment"># or while waiting for an event.</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>wait_for_event<span class="token punctuation">(</span><span class="token string">&quot;popup&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> Error <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token comment"># when the page crashes, exception message contains &quot;crash&quot;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token comment"># crash might happen during a click.</span>
    page<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>
    <span class="token comment"># or while waiting for an event.</span>
    page<span class="token punctuation">.</span>wait_for_event<span class="token punctuation">(</span><span class="token string">&quot;popup&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> Error <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token comment"># when the page crashes, exception message contains &quot;crash&quot;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token comment">// Crash might happen during a click.</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Or while waiting for an event.</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">WaitForPopup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PlaywrightException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// When the page crashes, exception message contains &quot;crash&quot;.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-page-dialog" tabindex="-1"><a class="header-anchor" href="#event-page-dialog" aria-hidden="true">#</a> event: Page.dialog</h2><ul><li>since: v1.8</li></ul><ul><li>argument: &lt;[Dialog]&gt;</li></ul>`,38),j=n("code",null,"alert",-1),S=n("code",null,"prompt",-1),A=n("code",null,"confirm",-1),R=n("code",null,"beforeunload",-1),T=n("strong",null,"must",-1),F=n("code",null,"method: Dialog.accept",-1),C=n("code",null,"method: Dialog.dismiss",-1),L={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop#never_blocking",target:"_blank",rel:"noopener noreferrer"},E=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;dialog&#39;</span><span class="token punctuation">,</span> <span class="token parameter">dialog</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  dialog<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">onDialog</span><span class="token punctuation">(</span>dialog <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  dialog<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;dialog&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> dialog<span class="token punctuation">:</span> dialog<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>page<span class="token punctuation">.</span>RequestFailed <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> request<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Url <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>Failure<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">注</p><p>When no [<code>event: Page.dialog</code>] listeners are present, all dialogs are automatically dismissed.</p></div><h2 id="event-page-domcontentloaded" tabindex="-1"><a class="header-anchor" href="#event-page-domcontentloaded" aria-hidden="true">#</a> event: Page.DOMContentLoaded</h2><ul><li>since: v1.9</li></ul><ul><li>argument: &lt;[Page]&gt;</li></ul>`,8),W={href:"https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,"DOMContentLoaded",-1),M=n("br",null,null,-1),H=t(`<h2 id="event-page-download" tabindex="-1"><a class="header-anchor" href="#event-page-download" aria-hidden="true">#</a> event: Page.download</h2><ul><li>since: v1.8</li></ul><ul><li>argument: &lt;[Download]&gt;</li></ul><p>Emitted when attachment download started. User can access basic file operations on downloaded content via the passed<br> [Download] instance.</p><h2 id="event-page-filechooser" tabindex="-1"><a class="header-anchor" href="#event-page-filechooser" aria-hidden="true">#</a> event: Page.fileChooser</h2><ul><li>since: v1.9</li></ul><ul><li>argument: &lt;[FileChooser]&gt;</li></ul><p>Emitted when a file chooser is supposed to appear, such as after clicking the <code>&lt;input type=file&gt;</code>. Playwright can<br> respond to it via setting the input files using [<code>method: FileChooser.setFiles</code>] that can be uploaded after that.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;filechooser&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">fileChooser</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> fileChooser<span class="token punctuation">.</span><span class="token function">setFiles</span><span class="token punctuation">(</span><span class="token string">&#39;/tmp/myfile.pdf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">onFileChooser</span><span class="token punctuation">(</span>fileChooser <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  fileChooser<span class="token punctuation">.</span><span class="token function">setFiles</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/myfile.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;filechooser&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> file_chooser<span class="token punctuation">:</span> file_chooser<span class="token punctuation">.</span>set_files<span class="token punctuation">(</span><span class="token string">&quot;/tmp/myfile.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>page<span class="token punctuation">.</span>FileChooser <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> fileChooser<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    fileChooser<span class="token punctuation">.</span><span class="token function">SetFilesAsync</span><span class="token punctuation">(</span><span class="token string">@&quot;C:\\temp\\myfile.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-page-frameattached" tabindex="-1"><a class="header-anchor" href="#event-page-frameattached" aria-hidden="true">#</a> event: Page.frameAttached</h2><ul><li>since: v1.9</li></ul><ul><li>argument: &lt;[Frame]&gt;</li></ul><p>Emitted when a frame is attached.</p><h2 id="event-page-framedetached" tabindex="-1"><a class="header-anchor" href="#event-page-framedetached" aria-hidden="true">#</a> event: Page.frameDetached</h2><ul><li>since: v1.9</li></ul><ul><li>argument: &lt;[Frame]&gt;</li></ul><p>Emitted when a frame is detached.</p><h2 id="event-page-framenavigated" tabindex="-1"><a class="header-anchor" href="#event-page-framenavigated" aria-hidden="true">#</a> event: Page.frameNavigated</h2><ul><li>since: v1.9</li></ul><ul><li>argument: &lt;[Frame]&gt;</li></ul><p>Emitted when a frame is navigated to a new url.</p><h2 id="event-page-load" tabindex="-1"><a class="header-anchor" href="#event-page-load" aria-hidden="true">#</a> event: Page.load</h2><ul><li>since: v1.8</li></ul><ul><li>argument: &lt;[Page]&gt;</li></ul>`,27),I={href:"https://developer.mozilla.org/en-US/docs/Web/Events/load",target:"_blank",rel:"noopener noreferrer"},D=n("code",null,"load",-1),O=t(`<h2 id="event-page-pageerror" tabindex="-1"><a class="header-anchor" href="#event-page-pageerror" aria-hidden="true">#</a> event: Page.pageError</h2><ul><li>since: v1.9</li></ul><ul><li>argument: &lt;[Error]&gt;</li></ul><p>Emitted when an uncaught exception happens within the page.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Log all uncaught errors to the terminal</span>
page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;pageerror&#39;</span><span class="token punctuation">,</span> <span class="token parameter">exception</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Uncaught exception: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exception<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Navigate to a page with an exception.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;data:text/html,&lt;script&gt;throw new Error(&quot;Test&quot;)&lt;/script&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Log all uncaught errors to the terminal</span>
page<span class="token punctuation">.</span><span class="token function">onPageError</span><span class="token punctuation">(</span>exception <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Uncaught exception: &quot;</span> <span class="token operator">+</span> exception<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Navigate to a page with an exception.</span>
page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;data:text/html,&lt;script&gt;throw new Error(&#39;Test&#39;)&lt;/script&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Log all uncaught errors to the terminal</span>
page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;pageerror&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> exc<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;uncaught exception: </span><span class="token interpolation"><span class="token punctuation">{</span>exc<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Navigate to a page with an exception.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;data:text/html,&lt;script&gt;throw new Error(&#39;test&#39;)&lt;/script&gt;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Log all uncaught errors to the terminal</span>
page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;pageerror&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> exc<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;uncaught exception: </span><span class="token interpolation"><span class="token punctuation">{</span>exc<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Navigate to a page with an exception.</span>
page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;data:text/html,&lt;script&gt;throw new Error(&#39;test&#39;)&lt;/script&gt;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Log all uncaught errors to the terminal</span>
page<span class="token punctuation">.</span>PageError <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> exception<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
  Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Uncaught exception: &quot;</span> <span class="token operator">+</span> exception<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="event-page-pageerror-1" tabindex="-1"><a class="header-anchor" href="#event-page-pageerror-1" aria-hidden="true">#</a> event: Page.pageError</h2><ul><li>since: v1.9</li><li>langs: csharp, java</li></ul><ul><li>argument: &lt;[string]&gt;</li></ul><h2 id="event-page-popup" tabindex="-1"><a class="header-anchor" href="#event-page-popup" aria-hidden="true">#</a> event: Page.popup</h2><ul><li>since: v1.8</li></ul><ul><li>argument: &lt;[Page]&gt;</li></ul><p>Emitted when the page opens a new tab or window. This event is emitted in addition to the<br> [<code>event: BrowserContext.page</code>], but only for popups relevant to this page.</p>`,16),B=n("br",null,null,-1),z=n("code",null,"window.open('http://example.com')",-1),N={href:"http://example.com",target:"_blank",rel:"noopener noreferrer"},V=n("br",null,null,-1),G=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Start waiting for popup before clicking. Note no await.</span>
<span class="token keyword">const</span> popupPromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForEvent</span><span class="token punctuation">(</span><span class="token string">&#39;popup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;open the popup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> popup <span class="token operator">=</span> <span class="token keyword">await</span> popupPromise<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> popup<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&#39;location.href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Page</span> popup <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForPopup</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;open the popup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>popup<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;location.href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_event<span class="token punctuation">(</span><span class="token string">&quot;popup&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> page_info<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;open the popup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
popup <span class="token operator">=</span> <span class="token keyword">await</span> page_info<span class="token punctuation">.</span>value
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> popup<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;location.href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_event<span class="token punctuation">(</span><span class="token string">&quot;popup&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> page_info<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;open the popup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
popup <span class="token operator">=</span> page_info<span class="token punctuation">.</span>value
<span class="token keyword">print</span><span class="token punctuation">(</span>popup<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;location.href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> popup <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RunAndWaitForPopupAsync</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;open the popup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> popup<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvaluateAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;location.href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">注</p><p>Use [<code>method: Page.waitForLoadState</code>] to wait until the page gets to a particular state (you should not need it in most<br> cases).</p></div><h2 id="event-page-request" tabindex="-1"><a class="header-anchor" href="#event-page-request" aria-hidden="true">#</a> event: Page.request</h2><ul><li>since: v1.8</li></ul><ul><li>argument: &lt;[Request]&gt;</li></ul><p>Emitted when a page issues a request. The [request] object is read-only. In order to intercept and mutate requests, see<br> [<code>method: Page.route</code>] or [<code>method: BrowserContext.route</code>].</p><h2 id="event-page-requestfailed" tabindex="-1"><a class="header-anchor" href="#event-page-requestfailed" aria-hidden="true">#</a> event: Page.requestFailed</h2><ul><li>since: v1.9</li></ul><ul><li>argument: &lt;[Request]&gt;</li></ul><p>Emitted when a request fails, for example by timing out.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;requestfailed&#39;</span><span class="token punctuation">,</span> <span class="token parameter">request</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>errorText<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">onRequestFailed</span><span class="token punctuation">(</span>request <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;requestfailed&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> request<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>failure<span class="token punctuation">.</span>error_text<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">注</p><p>HTTP Error responses, such as 404 or 503, are still successful responses from HTTP standpoint, so request will complete<br> with [<code>event: Page.requestFinished</code>] event and not with [<code>event: Page.requestFailed</code>]. A request will only be considered<br> failed when the client cannot get an HTTP response from the server, e.g. due to network error net::ERR_FAILED.</p></div><h2 id="event-page-requestfinished" tabindex="-1"><a class="header-anchor" href="#event-page-requestfinished" aria-hidden="true">#</a> event: Page.requestFinished</h2><ul><li>since: v1.9</li></ul><ul><li>argument: &lt;[Request]&gt;</li></ul><p>Emitted when a request finishes successfully after downloading the response body. For a successful response, the<br> sequence of events is <code>request</code>, <code>response</code> and <code>requestfinished</code>.</p><h2 id="event-page-response" tabindex="-1"><a class="header-anchor" href="#event-page-response" aria-hidden="true">#</a> event: Page.response</h2><ul><li>since: v1.8</li></ul><ul><li>argument: &lt;[Response]&gt;</li></ul><p>Emitted when [response] status and headers are received for a request. For a successful response, the sequence of events<br> is <code>request</code>, <code>response</code> and <code>requestfinished</code>.</p><h2 id="event-page-websocket" tabindex="-1"><a class="header-anchor" href="#event-page-websocket" aria-hidden="true">#</a> event: Page.webSocket</h2><ul><li>since: v1.9</li></ul><ul><li>argument: &lt;[WebSocket]&gt;</li></ul><p>Emitted when [WebSocket] request is sent.</p><h2 id="event-page-worker" tabindex="-1"><a class="header-anchor" href="#event-page-worker" aria-hidden="true">#</a> event: Page.worker</h2><ul><li>since: v1.8</li></ul><ul><li>argument: &lt;[Worker]&gt;</li></ul>`,33),J={href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API",target:"_blank",rel:"noopener noreferrer"},$=n("br",null,null,-1),K=n("h2",{id:"property-page-accessibility",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#property-page-accessibility","aria-hidden":"true"},"#"),a(" property: Page.accessibility")],-1),Y=n("li",null,"since: v1.8",-1),X=n("li",null,"langs: csharp, js, python",-1),Z=n("br",null,null,-1),Q={href:"https://www.deque.com/axe/",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://playwright.dev/docs/accessibility-testing",target:"_blank",rel:"noopener noreferrer"},an=t(`<ul><li>type: &lt;[Accessibility]&gt;</li></ul><h2 id="async-method-page-addinitscript" tabindex="-1"><a class="header-anchor" href="#async-method-page-addinitscript" aria-hidden="true">#</a> async method: Page.addInitScript</h2><ul><li>since: v1.8</li></ul><p>Adds a script which would be evaluated in one of the following scenarios:</p><ul><li>Whenever the page is navigated.</li><li>Whenever the child frame is attached or navigated. In this case, the script is evaluated in the context of the newly<br> attached frame.</li></ul><p>The script is evaluated after the document was created but before any of its scripts were run. This is useful to amend<br> the JavaScript environment, e.g. to seed <code>Math.random</code>.</p><p><strong>Usage</strong></p><p>An example of overriding <code>Math.random</code> before the page loads:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// preload.js</span>
Math<span class="token punctuation">.</span><span class="token function-variable function">random</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">42</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// In your playwright script, assuming the preload.js file is in same directory</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">addInitScript</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;./preload.js&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// In your playwright script, assuming the preload.js file is in same directory</span>
page<span class="token punctuation">.</span><span class="token function">addInitScript</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;./preload.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># in your playwright script, assuming the preload.js file is in same directory</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>add_init_script<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;./preload.js&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># in your playwright script, assuming the preload.js file is in same directory</span>
page<span class="token punctuation">.</span>add_init_script<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;./preload.js&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">AddInitScriptAsync</span><span class="token punctuation">(</span><span class="token string">&quot;./preload.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">注</p><p>The order of evaluation of multiple scripts installed via [<code>method: BrowserContext.addInitScript</code>] and<br> [<code>method: Page.addInitScript</code>] is not defined.</p></div><h3 id="param-page-addinitscript-script" tabindex="-1"><a class="header-anchor" href="#param-page-addinitscript-script" aria-hidden="true">#</a> param: Page.addInitScript.script</h3><ul><li>since: v1.8</li><li>langs: js</li></ul><ul><li><code>script</code> &lt;[function]|[string]|[Object]&gt; <ul><li><code>path</code> ?&lt;[path]&gt; Path to the JavaScript file. If <code>path</code> is a relative path, then it is resolved relative to the<br> current working directory. Optional.</li><li><code>content</code> ?&lt;[string]&gt; Raw script content. Optional.</li></ul></li></ul><p>Script to be evaluated in the page.</p><h3 id="param-page-addinitscript-script-1" tabindex="-1"><a class="header-anchor" href="#param-page-addinitscript-script-1" aria-hidden="true">#</a> param: Page.addInitScript.script</h3><ul><li>since: v1.8</li><li>langs: csharp, java</li></ul><ul><li><code>script</code> &lt;[string]|[path]&gt;</li></ul><p>Script to be evaluated in all pages in the browser context.</p><h3 id="param-page-addinitscript-arg" tabindex="-1"><a class="header-anchor" href="#param-page-addinitscript-arg" aria-hidden="true">#</a> param: Page.addInitScript.arg</h3><ul><li>since: v1.8</li><li>langs: js</li></ul><ul><li><code>arg</code> ?&lt;[Serializable]&gt;</li></ul><p>Optional argument to pass to [<code>param: script</code>] (only supported when passing a function).</p><h3 id="param-page-addinitscript-path" tabindex="-1"><a class="header-anchor" href="#param-page-addinitscript-path" aria-hidden="true">#</a> param: Page.addInitScript.path</h3><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li><code>path</code> ?&lt;[path]&gt;</li></ul><p>Path to the JavaScript file. If <code>path</code> is a relative path, then it is resolved relative to the current working directory. Optional.</p><h3 id="param-page-addinitscript-script-2" tabindex="-1"><a class="header-anchor" href="#param-page-addinitscript-script-2" aria-hidden="true">#</a> param: Page.addInitScript.script</h3><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li><code>script</code> ?&lt;[string]&gt;</li></ul><p>Script to be evaluated in all pages in the browser context. Optional.</p><h2 id="async-method-page-addscripttag" tabindex="-1"><a class="header-anchor" href="#async-method-page-addscripttag" aria-hidden="true">#</a> async method: Page.addScriptTag</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[ElementHandle]&gt;</li></ul><p>Adds a <code>&lt;script&gt;</code> tag into the page with the desired url or content. Returns the added tag when the script&#39;s onload<br> fires or when the script content was injected into frame.</p><h3 id="option-page-addscripttag-url" tabindex="-1"><a class="header-anchor" href="#option-page-addscripttag-url" aria-hidden="true">#</a> option: Page.addScriptTag.url</h3><ul><li>since: v1.8</li></ul><ul><li><code>url</code> &lt;[string]&gt;</li></ul><p>URL of a script to be added.</p><h3 id="option-page-addscripttag-path" tabindex="-1"><a class="header-anchor" href="#option-page-addscripttag-path" aria-hidden="true">#</a> option: Page.addScriptTag.path</h3><ul><li>since: v1.8</li></ul><ul><li><code>path</code> &lt;[path]&gt;</li></ul><p>Path to the JavaScript file to be injected into frame. If <code>path</code> is a relative path, then it is resolved relative to the<br> current working directory.</p><h3 id="option-page-addscripttag-content" tabindex="-1"><a class="header-anchor" href="#option-page-addscripttag-content" aria-hidden="true">#</a> option: Page.addScriptTag.content</h3><ul><li>since: v1.8</li></ul><ul><li><code>content</code> &lt;[string]&gt;</li></ul><p>Raw JavaScript content to be injected into frame.</p><h3 id="option-page-addscripttag-type" tabindex="-1"><a class="header-anchor" href="#option-page-addscripttag-type" aria-hidden="true">#</a> option: Page.addScriptTag.type</h3><ul><li>since: v1.8</li></ul><ul><li><code>type</code> &lt;[string]&gt;</li></ul>`,54),sn=n("br",null,null,-1),tn={href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script",target:"_blank",rel:"noopener noreferrer"},en=t('<h2 id="async-method-page-addstyletag" tabindex="-1"><a class="header-anchor" href="#async-method-page-addstyletag" aria-hidden="true">#</a> async method: Page.addStyleTag</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[ElementHandle]&gt;</li></ul><p>Adds a <code>&lt;link rel=&quot;stylesheet&quot;&gt;</code> tag into the page with the desired url or a <code>&lt;style type=&quot;text/css&quot;&gt;</code> tag with the<br> content. Returns the added tag when the stylesheet&#39;s onload fires or when the CSS content was injected into frame.</p><h3 id="option-page-addstyletag-url" tabindex="-1"><a class="header-anchor" href="#option-page-addstyletag-url" aria-hidden="true">#</a> option: Page.addStyleTag.url</h3><ul><li>since: v1.8</li></ul><ul><li><code>url</code> &lt;[string]&gt;</li></ul><p>URL of the <code>&lt;link&gt;</code> tag.</p><h3 id="option-page-addstyletag-path" tabindex="-1"><a class="header-anchor" href="#option-page-addstyletag-path" aria-hidden="true">#</a> option: Page.addStyleTag.path</h3><ul><li>since: v1.8</li></ul><ul><li><code>path</code> &lt;[path]&gt;</li></ul><p>Path to the CSS file to be injected into frame. If <code>path</code> is a relative path, then it is resolved relative to the<br> current working directory.</p><h3 id="option-page-addstyletag-content" tabindex="-1"><a class="header-anchor" href="#option-page-addstyletag-content" aria-hidden="true">#</a> option: Page.addStyleTag.content</h3><ul><li>since: v1.8</li></ul><ul><li><code>content</code> &lt;[string]&gt;</li></ul><p>Raw CSS content to be injected into frame.</p><h2 id="async-method-page-bringtofront" tabindex="-1"><a class="header-anchor" href="#async-method-page-bringtofront" aria-hidden="true">#</a> async method: Page.bringToFront</h2><ul><li>since: v1.8</li></ul><p>Brings page to front (activates tab).</p><h2 id="async-method-page-check" tabindex="-1"><a class="header-anchor" href="#async-method-page-check" aria-hidden="true">#</a> async method: Page.check</h2>',20),on=n("li",null,"since: v1.8",-1),pn=n("code",null,"method: Locator.check",-1),cn=n("p",null,[a("This method checks an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),ln=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),un=n("li",null,[a("Ensure that matched element is a checkbox or a radio input. If not, this method throws. If the element is already"),n("br"),a(" checked, this method returns immediately.")],-1),rn=n("code",null,"option: force",-1),dn=n("br",null,null,-1),kn=n("li",null,"Scroll the element into view if needed.",-1),hn=n("li",null,[a("Use ["),n("code",null,"property: Page.mouse"),a("] to click in the center of the element.")],-1),gn=n("li",null,[a("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),a("] option is set.")],-1),vn=n("li",null,"Ensure that the element is now checked. If not, this method throws.",-1),mn=t('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="param-page-check-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-check-selector-input-selector" aria-hidden="true">#</a> param: Page.check.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-check-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-page-check-force-input-force" aria-hidden="true">#</a> option: Page.check.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-check-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-check-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.check.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-check-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-page-check-position-input-position" aria-hidden="true">#</a> option: Page.check.position = %%-input-position-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-page-check-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-check-strict-input-strict" aria-hidden="true">#</a> option: Page.check.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-check-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-check-timeout-input-timeout" aria-hidden="true">#</a> option: Page.check.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-check-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-page-check-trial-input-trial" aria-hidden="true">#</a> option: Page.check.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-page-click" tabindex="-1"><a class="header-anchor" href="#async-method-page-click" aria-hidden="true">#</a> async method: Page.click</h2>',16),bn=n("li",null,"since: v1.8",-1),fn=n("code",null,"method: Locator.click",-1),wn=n("p",null,[a("This method clicks an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),yn=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),qn=n("code",null,"option: force",-1),xn=n("br",null,null,-1),_n=n("li",null,"Scroll the element into view if needed.",-1),Pn=n("li",null,[a("Use ["),n("code",null,"property: Page.mouse"),a("] to click in the center of the element, or the specified ["),n("code",null,"option: position"),a("].")],-1),jn=n("li",null,[a("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),a("] option is set.")],-1),Sn=t('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="param-page-click-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-click-selector-input-selector" aria-hidden="true">#</a> param: Page.click.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-click-button-input-button" tabindex="-1"><a class="header-anchor" href="#option-page-click-button-input-button" aria-hidden="true">#</a> option: Page.click.button = %%-input-button-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-click-clickcount-input-click-count" tabindex="-1"><a class="header-anchor" href="#option-page-click-clickcount-input-click-count" aria-hidden="true">#</a> option: Page.click.clickCount = %%-input-click-count-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-click-delay-input-down-up-delay" tabindex="-1"><a class="header-anchor" href="#option-page-click-delay-input-down-up-delay" aria-hidden="true">#</a> option: Page.click.delay = %%-input-down-up-delay-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-click-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-page-click-force-input-force" aria-hidden="true">#</a> option: Page.click.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-click-modifiers-input-modifiers" tabindex="-1"><a class="header-anchor" href="#option-page-click-modifiers-input-modifiers" aria-hidden="true">#</a> option: Page.click.modifiers = %%-input-modifiers-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-click-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-click-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.click.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-click-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-page-click-position-input-position" aria-hidden="true">#</a> option: Page.click.position = %%-input-position-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-click-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-click-strict-input-strict" aria-hidden="true">#</a> option: Page.click.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-click-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-click-timeout-input-timeout" aria-hidden="true">#</a> option: Page.click.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-click-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-page-click-trial-input-trial" aria-hidden="true">#</a> option: Page.click.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-page-close" tabindex="-1"><a class="header-anchor" href="#async-method-page-close" aria-hidden="true">#</a> async method: Page.close</h2><ul><li>since: v1.8</li></ul><p>If [<code>option: runBeforeUnload</code>] is <code>false</code>, does not run any unload handlers and waits for the page to be closed. If<br> [<code>option: runBeforeUnload</code>] is <code>true</code> the method will run unload handlers, but will <strong>not</strong> wait for the page to close.</p><p>By default, <code>page.close()</code> <strong>does not</strong> run <code>beforeunload</code> handlers.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>if [<code>option: runBeforeUnload</code>] is passed as true, a <code>beforeunload</code> dialog might be summoned and should be handled<br> manually via [<code>event: Page.dialog</code>] event.</p></div><h3 id="option-page-close-runbeforeunload" tabindex="-1"><a class="header-anchor" href="#option-page-close-runbeforeunload" aria-hidden="true">#</a> option: Page.close.runBeforeUnload</h3><ul><li>since: v1.8</li></ul><ul><li><code>runBeforeUnload</code> &lt;[boolean]&gt;</li></ul>',31),An=n("code",null,"false",-1),Rn=n("br",null,null,-1),Tn={href:"https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload",target:"_blank",rel:"noopener noreferrer"},Fn=t('<h2 id="async-method-page-content" tabindex="-1"><a class="header-anchor" href="#async-method-page-content" aria-hidden="true">#</a> async method: Page.content</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Gets the full HTML contents of the page, including the doctype.</p><h2 id="method-page-context" tabindex="-1"><a class="header-anchor" href="#method-page-context" aria-hidden="true">#</a> method: Page.context</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[BrowserContext]&gt;</li></ul><p>Get the browser context that the page belongs to.</p><h2 id="property-page-coverage" tabindex="-1"><a class="header-anchor" href="#property-page-coverage" aria-hidden="true">#</a> property: Page.coverage</h2><ul><li>since: v1.8</li><li>langs: js</li></ul><ul><li>type: &lt;[Coverage]&gt;</li></ul><div class="hint-container note"><p class="hint-container-title">注</p><p>Only available for Chromium atm.</p></div><p>Browser-specific Coverage implementation. See <a href="./class-coverage">Coverage</a> for more details.</p><h2 id="async-method-page-dblclick" tabindex="-1"><a class="header-anchor" href="#async-method-page-dblclick" aria-hidden="true">#</a> async method: Page.dblclick</h2>',14),Cn=n("li",null,"since: v1.8",-1),Ln=n("code",null,"method: Locator.dblclick",-1),En=n("li",null,[a("langs: "),n("ul",null,[n("li",null,"alias-csharp: DblClickAsync")])],-1),Wn=n("p",null,[a("This method double clicks an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),Un=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),Mn=n("code",null,"option: force",-1),Hn=n("br",null,null,-1),In=t("<li>Scroll the element into view if needed.</li><li>Use [<code>property: Page.mouse</code>] to double click in the center of the element, or the specified [<code>option: position</code>].</li><li>Wait for initiated navigations to either succeed or fail, unless [<code>option: noWaitAfter</code>] option is set. Note that<br> if the first click of the <code>dblclick()</code> triggers a navigation event, this method will throw.</li>",3),Dn=t('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><div class="hint-container note"><p class="hint-container-title">注</p><p><code>page.dblclick()</code> dispatches two <code>click</code> events and a single <code>dblclick</code> event.</p></div><h3 id="param-page-dblclick-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-dblclick-selector-input-selector" aria-hidden="true">#</a> param: Page.dblclick.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-dblclick-button-input-button" tabindex="-1"><a class="header-anchor" href="#option-page-dblclick-button-input-button" aria-hidden="true">#</a> option: Page.dblclick.button = %%-input-button-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-dblclick-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-page-dblclick-force-input-force" aria-hidden="true">#</a> option: Page.dblclick.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-dblclick-delay-input-down-up-delay" tabindex="-1"><a class="header-anchor" href="#option-page-dblclick-delay-input-down-up-delay" aria-hidden="true">#</a> option: Page.dblclick.delay = %%-input-down-up-delay-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-dblclick-modifiers-input-modifiers" tabindex="-1"><a class="header-anchor" href="#option-page-dblclick-modifiers-input-modifiers" aria-hidden="true">#</a> option: Page.dblclick.modifiers = %%-input-modifiers-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-dblclick-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-dblclick-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.dblclick.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-dblclick-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-page-dblclick-position-input-position" aria-hidden="true">#</a> option: Page.dblclick.position = %%-input-position-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-dblclick-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-dblclick-strict-input-strict" aria-hidden="true">#</a> option: Page.dblclick.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-dblclick-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-dblclick-timeout-input-timeout" aria-hidden="true">#</a> option: Page.dblclick.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-dblclick-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-page-dblclick-trial-input-trial" aria-hidden="true">#</a> option: Page.dblclick.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-page-dispatchevent" tabindex="-1"><a class="header-anchor" href="#async-method-page-dispatchevent" aria-hidden="true">#</a> async method: Page.dispatchEvent</h2>',23),On=n("li",null,"since: v1.8",-1),Bn=n("code",null,"method: Locator.dispatchEvent",-1),zn=n("code",null,"click",-1),Nn=n("code",null,"click",-1),Vn=n("br",null,null,-1),Gn=n("br",null,null,-1),Jn={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click",target:"_blank",rel:"noopener noreferrer"},$n=t(`<p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&#39;button#submit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&quot;button#submit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>dispatch_event<span class="token punctuation">(</span><span class="token string">&quot;button#submit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>dispatch_event<span class="token punctuation">(</span><span class="token string">&quot;button#submit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">DispatchEventAsync</span><span class="token punctuation">(</span><span class="token string">&quot;button#submit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Under the hood, it creates an instance of an event based on the given [<code>param: type</code>], initializes it with<br> [<code>param: eventInit</code>] properties and dispatches it on the element. Events are <code>composed</code>, <code>cancelable</code> and bubble by<br> default.</p><p>Since [<code>param: eventInit</code>] is event-specific, please refer to the events documentation for the lists of initial<br> properties:</p>`,8),Kn={href:"https://developer.mozilla.org/en-US/docs/Web/API/DragEvent/DragEvent",target:"_blank",rel:"noopener noreferrer"},Yn={href:"https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent/FocusEvent",target:"_blank",rel:"noopener noreferrer"},Xn={href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent",target:"_blank",rel:"noopener noreferrer"},Zn={href:"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent",target:"_blank",rel:"noopener noreferrer"},Qn={href:"https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/PointerEvent",target:"_blank",rel:"noopener noreferrer"},na={href:"https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/TouchEvent",target:"_blank",rel:"noopener noreferrer"},aa={href:"https://developer.mozilla.org/en-US/docs/Web/API/Event/Event",target:"_blank",rel:"noopener noreferrer"},sa=t(`<p>You can also specify <code>JSHandle</code> as the property value if you want live objects to be passed into the event:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Note you can only create DataTransfer in Chromium and Firefox</span>
<span class="token keyword">const</span> dataTransfer <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">DataTransfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&#39;#source&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dragstart&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> dataTransfer <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Note you can only create DataTransfer in Chromium and Firefox</span>
<span class="token class-name">JSHandle</span> dataTransfer <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; new DataTransfer()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> arg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arg<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;dataTransfer&quot;</span><span class="token punctuation">,</span> dataTransfer<span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dragstart&quot;</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># note you can only create data_transfer in chromium and firefox</span>
data_transfer <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;new DataTransfer()&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>dispatch_event<span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dragstart&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&quot;dataTransfer&quot;</span><span class="token punctuation">:</span> data_transfer <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># note you can only create data_transfer in chromium and firefox</span>
data_transfer <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;new DataTransfer()&quot;</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>dispatch_event<span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dragstart&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&quot;dataTransfer&quot;</span><span class="token punctuation">:</span> data_transfer <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> dataTransfer <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; new DataTransfer()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">DispatchEventAsync</span><span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dragstart&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> dataTransfer <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-dispatchevent-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-dispatchevent-selector-input-selector" aria-hidden="true">#</a> param: Page.dispatchEvent.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-dispatchevent-type" tabindex="-1"><a class="header-anchor" href="#param-page-dispatchevent-type" aria-hidden="true">#</a> param: Page.dispatchEvent.type</h3><ul><li>since: v1.8</li></ul><ul><li><code>type</code> &lt;[string]&gt;</li></ul><p>DOM event type: <code>&quot;click&quot;</code>, <code>&quot;dragstart&quot;</code>, etc.</p><h3 id="param-page-dispatchevent-eventinit" tabindex="-1"><a class="header-anchor" href="#param-page-dispatchevent-eventinit" aria-hidden="true">#</a> param: Page.dispatchEvent.eventInit</h3><ul><li>since: v1.8</li></ul><ul><li><code>eventInit</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional event-specific initialization properties.</p><h3 id="option-page-dispatchevent-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-dispatchevent-strict-input-strict" aria-hidden="true">#</a> option: Page.dispatchEvent.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-dispatchevent-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-dispatchevent-timeout-input-timeout" aria-hidden="true">#</a> option: Page.dispatchEvent.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-draganddrop" tabindex="-1"><a class="header-anchor" href="#async-method-page-draganddrop" aria-hidden="true">#</a> async method: Page.dragAndDrop</h2><ul><li>since: v1.13</li></ul><p>This method drags the source element to the target element.<br> It will first move to the source element, perform a <code>mousedown</code>,<br> then move to the target element and perform a <code>mouseup</code>.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">dragAndDrop</span><span class="token punctuation">(</span><span class="token string">&#39;#source&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#target&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// or specify exact positions relative to the top-left corners of the elements:</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">dragAndDrop</span><span class="token punctuation">(</span><span class="token string">&#39;#source&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#target&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">sourcePosition</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">7</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">targetPosition</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">dragAndDrop</span><span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> &#39;#target&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// or specify exact positions relative to the top-left corners of the elements:</span>
page<span class="token punctuation">.</span><span class="token function">dragAndDrop</span><span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> &#39;#target&#39;<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Page<span class="token punctuation">.</span>DragAndDropOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setSourcePosition</span><span class="token punctuation">(</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setTargetPosition</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>drag_and_drop<span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;#target&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># or specify exact positions relative to the top-left corners of the elements:</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>drag_and_drop<span class="token punctuation">(</span>
  <span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;#target&quot;</span><span class="token punctuation">,</span>
  source_position<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  target_position<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>drag_and_drop<span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;#target&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># or specify exact positions relative to the top-left corners of the elements:</span>
page<span class="token punctuation">.</span>drag_and_drop<span class="token punctuation">(</span>
  <span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;#target&quot;</span><span class="token punctuation">,</span>
  source_position<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  target_position<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> Page<span class="token punctuation">.</span><span class="token function">DragAndDropAsync</span><span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;#target&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// or specify exact positions relative to the top-left corners of the elements:</span>
<span class="token keyword">await</span> Page<span class="token punctuation">.</span><span class="token function">DragAndDropAsync</span><span class="token punctuation">(</span><span class="token string">&quot;#source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;#target&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    SourcePosition <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> X <span class="token operator">=</span> <span class="token number">34</span><span class="token punctuation">,</span> Y <span class="token operator">=</span> <span class="token number">7</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    TargetPosition <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> X <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> Y <span class="token operator">=</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-draganddrop-source-input-source" tabindex="-1"><a class="header-anchor" href="#param-page-draganddrop-source-input-source" aria-hidden="true">#</a> param: Page.dragAndDrop.source = %%-input-source-%%</h3><ul><li>since: v1.13</li></ul><h3 id="param-page-draganddrop-target-input-target" tabindex="-1"><a class="header-anchor" href="#param-page-draganddrop-target-input-target" aria-hidden="true">#</a> param: Page.dragAndDrop.target = %%-input-target-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-page-draganddrop-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-page-draganddrop-force-input-force" aria-hidden="true">#</a> option: Page.dragAndDrop.force = %%-input-force-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-page-draganddrop-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-draganddrop-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.dragAndDrop.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-page-draganddrop-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-draganddrop-strict-input-strict" aria-hidden="true">#</a> option: Page.dragAndDrop.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-draganddrop-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-draganddrop-timeout-input-timeout" aria-hidden="true">#</a> option: Page.dragAndDrop.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-page-draganddrop-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-page-draganddrop-trial-input-trial" aria-hidden="true">#</a> option: Page.dragAndDrop.trial = %%-input-trial-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-page-draganddrop-sourceposition-input-source-position" tabindex="-1"><a class="header-anchor" href="#option-page-draganddrop-sourceposition-input-source-position" aria-hidden="true">#</a> option: Page.dragAndDrop.sourcePosition = %%-input-source-position-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-draganddrop-targetposition-input-target-position" tabindex="-1"><a class="header-anchor" href="#option-page-draganddrop-targetposition-input-target-position" aria-hidden="true">#</a> option: Page.dragAndDrop.targetPosition = %%-input-target-position-%%</h3><ul><li>since: v1.14</li></ul><h2 id="async-method-page-emulatemedia" tabindex="-1"><a class="header-anchor" href="#async-method-page-emulatemedia" aria-hidden="true">#</a> async method: Page.emulateMedia</h2><ul><li>since: v1.8</li></ul><p>This method changes the <code>CSS media type</code> through the <code>media</code> argument, and/or the <code>&#39;prefers-colors-scheme&#39;</code> media feature, using the <code>colorScheme</code> argument.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;screen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → true</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;print&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">emulateMedia</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">media</span><span class="token operator">:</span> <span class="token string">&#39;print&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;screen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;print&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → true</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">emulateMedia</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;screen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → true</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;print&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;screen&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → true</span>
page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;print&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>

page<span class="token punctuation">.</span><span class="token function">emulateMedia</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Page<span class="token punctuation">.</span>EmulateMediaOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMedia</span><span class="token punctuation">(</span><span class="token class-name">Media</span><span class="token punctuation">.</span><span class="token constant">PRINT</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;screen&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>
page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;print&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → true</span>

page<span class="token punctuation">.</span><span class="token function">emulateMedia</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Page<span class="token punctuation">.</span>EmulateMediaOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;screen&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → true</span>
page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;print&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;screen&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → True</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;print&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → False</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span>emulate_media<span class="token punctuation">(</span>media<span class="token operator">=</span><span class="token string">&quot;print&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;screen&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → False</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;print&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → True</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span>emulate_media<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;screen&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → True</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;print&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;screen&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → True</span>
page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;print&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → False</span>

page<span class="token punctuation">.</span>emulate_media<span class="token punctuation">(</span>media<span class="token operator">=</span><span class="token string">&quot;print&quot;</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;screen&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → False</span>
page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;print&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → True</span>

page<span class="token punctuation">.</span>emulate_media<span class="token punctuation">(</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;screen&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → True</span>
page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;print&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;screen&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → true</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;print&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EmulateMediaAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PageEmulateMediaOptions</span> <span class="token punctuation">{</span> Media <span class="token operator">=</span> Media<span class="token punctuation">.</span>Print <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;screen&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;print&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → true</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EmulateMediaAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PageEmulateMediaOptions</span> <span class="token punctuation">{</span> Media <span class="token operator">=</span> Media<span class="token punctuation">.</span>Screen <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;screen&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → true</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;print&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">emulateMedia</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">colorScheme</span><span class="token operator">:</span> <span class="token string">&#39;dark&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;(prefers-color-scheme: dark)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → true</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;(prefers-color-scheme: light)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;(prefers-color-scheme: no-preference)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">emulateMedia</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Page<span class="token punctuation">.</span>EmulateMediaOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setColorScheme</span><span class="token punctuation">(</span><span class="token class-name">ColorScheme</span><span class="token punctuation">.</span><span class="token constant">DARK</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;(prefers-color-scheme: dark)&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → true</span>
page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;(prefers-color-scheme: light)&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>
page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; matchMedia(&#39;(prefers-color-scheme: no-preference)&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>emulate_media<span class="token punctuation">(</span>color_scheme<span class="token operator">=</span><span class="token string">&quot;dark&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;(prefers-color-scheme: dark)&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → True</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;(prefers-color-scheme: light)&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → False</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;(prefers-color-scheme: no-preference)&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>emulate_media<span class="token punctuation">(</span>color_scheme<span class="token operator">=</span><span class="token string">&quot;dark&quot;</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;(prefers-color-scheme: dark)&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → True</span>
page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;(prefers-color-scheme: light)&#39;).matches&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># → False</span>
page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;(prefers-color-scheme: no-preference)&#39;).matches&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EmulateMediaAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PageEmulateMediaOptions</span> <span class="token punctuation">{</span> ColorScheme <span class="token operator">=</span> ColorScheme<span class="token punctuation">.</span>Dark <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;(prefers-color-scheme: dark)&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → true</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;(prefers-color-scheme: light)&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;matchMedia(&#39;(prefers-color-scheme: no-preference)&#39;).matches&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// → false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="option-page-emulatemedia-media" tabindex="-1"><a class="header-anchor" href="#option-page-emulatemedia-media" aria-hidden="true">#</a> option: Page.emulateMedia.media</h3><ul><li>since: v1.9</li><li>langs: js, java</li></ul><ul><li><code>media</code> &lt;null|[Media]&lt;&quot;screen&quot;|&quot;print&quot;&gt;&gt;</li></ul><p>Changes the CSS media type of the page. The only allowed values are <code>&#39;screen&#39;</code>, <code>&#39;print&#39;</code> and <code>null</code>.<br> Passing <code>null</code> disables CSS media emulation.</p><h3 id="option-page-emulatemedia-media-1" tabindex="-1"><a class="header-anchor" href="#option-page-emulatemedia-media-1" aria-hidden="true">#</a> option: Page.emulateMedia.media</h3><ul><li>since: v1.9</li><li>langs: csharp, python</li></ul><ul><li><code>media</code> &lt;[Media]&lt;&quot;screen&quot;|&quot;print&quot;|&quot;null&quot;&gt;&gt;</li></ul><p>Changes the CSS media type of the page. The only allowed values are <code>&#39;Screen&#39;</code>, <code>&#39;Print&#39;</code> and <code>&#39;Null&#39;</code>.<br> Passing <code>&#39;Null&#39;</code> disables CSS media emulation.</p><h3 id="option-page-emulatemedia-colorscheme" tabindex="-1"><a class="header-anchor" href="#option-page-emulatemedia-colorscheme" aria-hidden="true">#</a> option: Page.emulateMedia.colorScheme</h3><ul><li>since: v1.9</li><li>langs: js, java</li></ul><ul><li><code>colorScheme</code> &lt;null|[ColorScheme]&lt;&quot;light&quot;|&quot;dark&quot;|&quot;no-preference&quot;&gt;&gt;</li></ul><p>Emulates <code>&#39;prefers-colors-scheme&#39;</code> media feature, supported values are <code>&#39;light&#39;</code>, <code>&#39;dark&#39;</code>, <code>&#39;no-preference&#39;</code>. Passing<br><code>null</code> disables color scheme emulation.</p><h3 id="option-page-emulatemedia-colorscheme-1" tabindex="-1"><a class="header-anchor" href="#option-page-emulatemedia-colorscheme-1" aria-hidden="true">#</a> option: Page.emulateMedia.colorScheme</h3><ul><li>since: v1.9</li><li>langs: csharp, python</li></ul><ul><li><code>colorScheme</code> &lt;[ColorScheme]&lt;&quot;light&quot;|&quot;dark&quot;|&quot;no-preference&quot;|&quot;null&quot;&gt;&gt;</li></ul><p>Emulates <code>&#39;prefers-colors-scheme&#39;</code> media feature, supported values are <code>&#39;light&#39;</code>, <code>&#39;dark&#39;</code>, <code>&#39;no-preference&#39;</code>. Passing<br><code>&#39;Null&#39;</code> disables color scheme emulation.</p><h3 id="option-page-emulatemedia-reducedmotion" tabindex="-1"><a class="header-anchor" href="#option-page-emulatemedia-reducedmotion" aria-hidden="true">#</a> option: Page.emulateMedia.reducedMotion</h3><ul><li>since: v1.12</li><li>langs: js, java</li></ul><ul><li><code>reducedMotion</code> &lt;null|[ReducedMotion]&lt;&quot;reduce&quot;|&quot;no-preference&quot;&gt;&gt;</li></ul><p>Emulates <code>&#39;prefers-reduced-motion&#39;</code> media feature, supported values are <code>&#39;reduce&#39;</code>, <code>&#39;no-preference&#39;</code>. Passing <code>null</code> disables reduced motion emulation.</p><h3 id="option-page-emulatemedia-reducedmotion-1" tabindex="-1"><a class="header-anchor" href="#option-page-emulatemedia-reducedmotion-1" aria-hidden="true">#</a> option: Page.emulateMedia.reducedMotion</h3><ul><li>since: v1.12</li><li>langs: csharp, python</li></ul><ul><li><code>reducedMotion</code> &lt;[ReducedMotion]&lt;&quot;reduce&quot;|&quot;no-preference&quot;|&quot;null&quot;&gt;&gt;</li></ul><p>Emulates <code>&#39;prefers-reduced-motion&#39;</code> media feature, supported values are <code>&#39;reduce&#39;</code>, <code>&#39;no-preference&#39;</code>. Passing <code>null</code> disables reduced motion emulation.</p><h3 id="option-page-emulatemedia-forcedcolors" tabindex="-1"><a class="header-anchor" href="#option-page-emulatemedia-forcedcolors" aria-hidden="true">#</a> option: Page.emulateMedia.forcedColors</h3><ul><li>since: v1.15</li><li>langs: js, java</li></ul><ul><li><code>forcedColors</code> &lt;null|[ForcedColors]&lt;&quot;active&quot;|&quot;none&quot;&gt;&gt;</li></ul><p>Emulates <code>&#39;forced-colors&#39;</code> media feature, supported values are <code>&#39;active&#39;</code> and <code>&#39;none&#39;</code>. Passing <code>null</code> disables forced colors emulation.</p><h3 id="option-page-emulatemedia-forcedcolors-1" tabindex="-1"><a class="header-anchor" href="#option-page-emulatemedia-forcedcolors-1" aria-hidden="true">#</a> option: Page.emulateMedia.forcedColors</h3><ul><li>since: v1.15</li><li>langs: csharp, python</li></ul><ul><li><code>forcedColors</code> &lt;[ForcedColors]&lt;&quot;active&quot;|&quot;none&quot;|&quot;null&quot;&gt;&gt;</li></ul><h2 id="async-method-page-evalonselector" tabindex="-1"><a class="header-anchor" href="#async-method-page-evalonselector" aria-hidden="true">#</a> async method: Page.evalOnSelector</h2><ul><li>since: v1.9</li><li>discouraged: This method does not wait for the element to pass actionability<br> checks and therefore can lead to the flaky tests. Use [<code>method: Locator.evaluate</code>],<br> other [Locator] helper methods or web-first assertions instead.</li><li>langs: <ul><li>alias-python: eval_on_selector</li><li>alias-js: $eval</li></ul></li></ul><ul><li>returns: &lt;[Serializable]&gt;</li></ul><p>The method finds an element matching the specified selector within the page and passes it as a first argument to<br> [<code>param: expression</code>]. If no elements match the selector, the method throws an error. Returns the value of<br> [<code>param: expression</code>].</p><p>If [<code>param: expression</code>] returns a [Promise], then [<code>method: Page.evalOnSelector</code>] would wait for the promise to resolve and<br> return its value.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> searchValue <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$eval</span><span class="token punctuation">(</span><span class="token string">&#39;#search&#39;</span><span class="token punctuation">,</span> <span class="token parameter">el</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> preloadHref <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$eval</span><span class="token punctuation">(</span><span class="token string">&#39;link[rel=preload]&#39;</span><span class="token punctuation">,</span> <span class="token parameter">el</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$eval</span><span class="token punctuation">(</span><span class="token string">&#39;.main-container&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> suffix</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>outerHTML <span class="token operator">+</span> suffix<span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// In TypeScript, this example requires an explicit type annotation (HTMLLinkElement) on el:</span>
<span class="token keyword">const</span> preloadHrefTS <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$eval</span><span class="token punctuation">(</span><span class="token string">&#39;link[rel=preload]&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">el</span><span class="token operator">:</span> HTMLLinkElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> searchValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> page<span class="token punctuation">.</span><span class="token function">evalOnSelector</span><span class="token punctuation">(</span><span class="token string">&quot;#search&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> preloadHref <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> page<span class="token punctuation">.</span><span class="token function">evalOnSelector</span><span class="token punctuation">(</span><span class="token string">&quot;link[rel=preload]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> html <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> page<span class="token punctuation">.</span><span class="token function">evalOnSelector</span><span class="token punctuation">(</span><span class="token string">&quot;.main-container&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(e, suffix) =&gt; e.outerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>search_value <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;#search&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.value&quot;</span><span class="token punctuation">)</span>
preload_href <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;link[rel=preload]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.href&quot;</span><span class="token punctuation">)</span>
html <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;.main-container&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(e, suffix) =&gt; e.outer_html + suffix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>search_value <span class="token operator">=</span> page<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;#search&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.value&quot;</span><span class="token punctuation">)</span>
preload_href <span class="token operator">=</span> page<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;link[rel=preload]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.href&quot;</span><span class="token punctuation">)</span>
html <span class="token operator">=</span> page<span class="token punctuation">.</span>eval_on_selector<span class="token punctuation">(</span><span class="token string">&quot;.main-container&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(e, suffix) =&gt; e.outer_html + suffix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> searchValue <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvalOnSelectorAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;#search&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> preloadHref <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvalOnSelectorAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;link[rel=preload]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;el =&gt; el.href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> html <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvalOnSelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;.main-container&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(e, suffix) =&gt; e.outerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-evalonselector-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-page-evalonselector-selector-query-selector" aria-hidden="true">#</a> param: Page.evalOnSelector.selector = %%-query-selector-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-evalonselector-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-page-evalonselector-expression-evaluate-expression" aria-hidden="true">#</a> param: Page.evalOnSelector.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-evalonselector-expression-js-evalonselector-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-page-evalonselector-expression-js-evalonselector-pagefunction" aria-hidden="true">#</a> param: Page.evalOnSelector.expression = %%-js-evalonselector-pagefunction-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-evalonselector-arg" tabindex="-1"><a class="header-anchor" href="#param-page-evalonselector-arg" aria-hidden="true">#</a> param: Page.evalOnSelector.arg</h3><ul><li>since: v1.9</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h3 id="option-page-evalonselector-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-evalonselector-strict-input-strict" aria-hidden="true">#</a> option: Page.evalOnSelector.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h2 id="async-method-page-evalonselectorall" tabindex="-1"><a class="header-anchor" href="#async-method-page-evalonselectorall" aria-hidden="true">#</a> async method: Page.evalOnSelectorAll</h2><ul><li>since: v1.9</li><li>discouraged: In most cases, [<code>method: Locator.evaluateAll</code>],<br> other [Locator] helper methods and web-first assertions do a better job.</li><li>langs: <ul><li>alias-python: eval_on_selector_all</li><li>alias-js: $$eval</li></ul></li></ul><ul><li>returns: &lt;[Serializable]&gt;</li></ul><p>The method finds all elements matching the specified selector within the page and passes an array of matched elements as<br> a first argument to [<code>param: expression</code>]. Returns the result of [<code>param: expression</code>] invocation.</p><p>If [<code>param: expression</code>] returns a [Promise], then [<code>method: Page.evalOnSelectorAll</code>] would wait for the promise to resolve and<br> return its value.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> divCounts <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$$eval</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">divs<span class="token punctuation">,</span> min</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> divs<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> min<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> divCounts <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">)</span> page<span class="token punctuation">.</span><span class="token function">evalOnSelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(divs, min) =&gt; divs.length &gt;= min&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>div_counts <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>eval_on_selector_all<span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(divs, min) =&gt; divs.length &gt;= min&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>div_counts <span class="token operator">=</span> page<span class="token punctuation">.</span>eval_on_selector_all<span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(divs, min) =&gt; divs.length &gt;= min&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> divsCount <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvalOnSelectorAllAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(divs, min) =&gt; divs.length &gt;= min&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="param-page-evalonselectorall-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-page-evalonselectorall-selector-query-selector" aria-hidden="true">#</a> param: Page.evalOnSelectorAll.selector = %%-query-selector-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-evalonselectorall-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-page-evalonselectorall-expression-evaluate-expression" aria-hidden="true">#</a> param: Page.evalOnSelectorAll.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-evalonselectorall-expression-js-evalonselectorall-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-page-evalonselectorall-expression-js-evalonselectorall-pagefunction" aria-hidden="true">#</a> param: Page.evalOnSelectorAll.expression = %%-js-evalonselectorall-pagefunction-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-evalonselectorall-arg" tabindex="-1"><a class="header-anchor" href="#param-page-evalonselectorall-arg" aria-hidden="true">#</a> param: Page.evalOnSelectorAll.arg</h3><ul><li>since: v1.9</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h2 id="async-method-page-evaluate" tabindex="-1"><a class="header-anchor" href="#async-method-page-evaluate" aria-hidden="true">#</a> async method: Page.evaluate</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Serializable]&gt;</li></ul><p>Returns the value of the [<code>param: expression</code>] invocation.</p><p>If the function passed to the [<code>method: Page.evaluate</code>] returns a [Promise], then [<code>method: Page.evaluate</code>] would wait<br> for the promise to resolve and return its value.</p><p>If the function passed to the [<code>method: Page.evaluate</code>] returns a non-[Serializable] value, then<br> [<code>method: Page.evaluate</code>] resolves to <code>undefined</code>. Playwright also supports transferring some<br> additional values that are not serializable by <code>JSON</code>: <code>-0</code>, <code>NaN</code>, <code>Infinity</code>, <code>-Infinity</code>.</p><p><strong>Usage</strong></p><p>Passing argument to [<code>param: expression</code>]:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>x <span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints &quot;56&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Object</span> result <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;([x, y]) =&gt; {\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  return Promise.resolve(x * y);\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints &quot;56&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>result <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;([x, y]) =&gt; Promise.resolve(x * y)&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># prints &quot;56&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>result <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;([x, y]) =&gt; Promise.resolve(x * y)&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># prints &quot;56&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvaluateAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;([x, y]) =&gt; Promise.resolve(x * y)&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>A string can also be passed in instead of a function:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&#39;1 + 2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints &quot;3&quot;</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">1 + </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints &quot;11&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;1 + 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints &quot;3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;1 + 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># prints &quot;3&quot;</span>
x <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;1 + </span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># prints &quot;11&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;1 + 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># prints &quot;3&quot;</span>
x <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;1 + </span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># prints &quot;11&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvaluateAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;1 + 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// prints &quot;3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>[ElementHandle] instances can be passed as an argument to the [<code>method: Page.evaluate</code>]:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> bodyHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&#39;document.body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>body<span class="token punctuation">,</span> suffix<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> body<span class="token punctuation">.</span>innerHTML <span class="token operator">+</span> suffix<span class="token punctuation">,</span> <span class="token punctuation">[</span>bodyHandle<span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> bodyHandle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ElementHandle</span> bodyHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;document.body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> html <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;([body, suffix]) =&gt; body.innerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>bodyHandle<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bodyHandle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>body_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;document.body&quot;</span><span class="token punctuation">)</span>
html <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;([body, suffix]) =&gt; body.innerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>body_handle<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> body_handle<span class="token punctuation">.</span>dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>body_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;document.body&quot;</span><span class="token punctuation">)</span>
html <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;([body, suffix]) =&gt; body.innerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>body_handle<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
body_handle<span class="token punctuation">.</span>dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> bodyHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;document.body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> html <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvaluateAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;([body, suffix]) =&gt; body.innerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">object</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> bodyHandle<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> bodyHandle<span class="token punctuation">.</span><span class="token function">DisposeAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-evaluate-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-page-evaluate-expression-evaluate-expression" aria-hidden="true">#</a> param: Page.evaluate.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-evaluate-expression-js-evaluate-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-page-evaluate-expression-js-evaluate-pagefunction" aria-hidden="true">#</a> param: Page.evaluate.expression = %%-js-evaluate-pagefunction-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-evaluate-arg" tabindex="-1"><a class="header-anchor" href="#param-page-evaluate-arg" aria-hidden="true">#</a> param: Page.evaluate.arg</h3><ul><li>since: v1.8</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h2 id="async-method-page-evaluatehandle" tabindex="-1"><a class="header-anchor" href="#async-method-page-evaluatehandle" aria-hidden="true">#</a> async method: Page.evaluateHandle</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[JSHandle]&gt;</li></ul><p>Returns the value of the [<code>param: expression</code>] invocation as a [JSHandle].</p><p>The only difference between [<code>method: Page.evaluate</code>] and [<code>method: Page.evaluateHandle</code>] is that [<code>method: Page.evaluateHandle</code>] returns [JSHandle].</p><p>If the function passed to the [<code>method: Page.evaluateHandle</code>] returns a [Promise], then [<code>method: Page.evaluateHandle</code>] would wait for the<br> promise to resolve and return its value.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> aWindowHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
aWindowHandle<span class="token punctuation">;</span> <span class="token comment">// Handle for the window object.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Handle for the window object.</span>
<span class="token class-name">JSHandle</span> aWindowHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; Promise.resolve(window)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a_window_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;Promise.resolve(window)&quot;</span><span class="token punctuation">)</span>
a_window_handle <span class="token comment"># handle for the window object.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a_window_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;Promise.resolve(window)&quot;</span><span class="token punctuation">)</span>
a_window_handle <span class="token comment"># handle for the window object.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Handle for the window object.</span>
<span class="token class-name"><span class="token keyword">var</span></span> aWindowHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; Promise.resolve(window)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>A string can also be passed in instead of a function:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> aHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&#39;document&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Handle for the &#39;document&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">JSHandle</span> aHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Handle for the &quot;document&quot;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">)</span> <span class="token comment"># handle for the &quot;document&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">)</span> <span class="token comment"># handle for the &quot;document&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> docHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;document&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Handle for the \`document\`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>[JSHandle] instances can be passed as an argument to the [<code>method: Page.evaluateHandle</code>]:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> aHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> resultHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token parameter">body</span> <span class="token operator">=&gt;</span> body<span class="token punctuation">.</span>innerHTML<span class="token punctuation">,</span> aHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> resultHandle<span class="token punctuation">.</span><span class="token function">jsonValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> resultHandle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">JSHandle</span> aHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; document.body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">JSHandle</span> resultHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;([body, suffix]) =&gt; body.innerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>aHandle<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resultHandle<span class="token punctuation">.</span><span class="token function">jsonValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
resultHandle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;document.body&quot;</span><span class="token punctuation">)</span>
result_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;body =&gt; body.innerHTML&quot;</span><span class="token punctuation">,</span> a_handle<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> result_handle<span class="token punctuation">.</span>json_value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> result_handle<span class="token punctuation">.</span>dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;document.body&quot;</span><span class="token punctuation">)</span>
result_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&quot;body =&gt; body.innerHTML&quot;</span><span class="token punctuation">,</span> a_handle<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result_handle<span class="token punctuation">.</span>json_value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
result_handle<span class="token punctuation">.</span>dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; document.body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> resultHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;([body, suffix]) =&gt; body.innerHTML + suffix&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> handle<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> resultHandle<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">JsonValueAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> resultHandle<span class="token punctuation">.</span><span class="token function">DisposeAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-evaluatehandle-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-page-evaluatehandle-expression-evaluate-expression" aria-hidden="true">#</a> param: Page.evaluateHandle.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-evaluatehandle-expression-js-evaluate-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-page-evaluatehandle-expression-js-evaluate-pagefunction" aria-hidden="true">#</a> param: Page.evaluateHandle.expression = %%-js-evaluate-pagefunction-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-evaluatehandle-arg" tabindex="-1"><a class="header-anchor" href="#param-page-evaluatehandle-arg" aria-hidden="true">#</a> param: Page.evaluateHandle.arg</h3><ul><li>since: v1.8</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h2 id="async-method-page-exposebinding" tabindex="-1"><a class="header-anchor" href="#async-method-page-exposebinding" aria-hidden="true">#</a> async method: Page.exposeBinding</h2><ul><li>since: v1.8</li></ul><p>The method adds a function called [<code>param: name</code>] on the <code>window</code> object of every frame in this page. When called, the<br> function executes [<code>param: callback</code>] and returns a [Promise] which resolves to the return value of [<code>param: callback</code>].<br> If the [<code>param: callback</code>] returns a [Promise], it will be awaited.</p><p>The first argument of the [<code>param: callback</code>] function contains information about the caller: <code>{ browserContext: BrowserContext, page: Page, frame: Frame }</code>.</p><p>See [<code>method: BrowserContext.exposeBinding</code>] for the context-wide version.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>Functions installed via [<code>method: Page.exposeBinding</code>] survive navigations.</p></div><p><strong>Usage</strong></p><p>An example of exposing page URL to all frames in a page:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> webkit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Or &#39;chromium&#39; or &#39;firefox&#39;.</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">exposeBinding</span><span class="token punctuation">(</span><span class="token string">&#39;pageURL&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> page <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> page<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;script&gt;
      async function onClick() {
        document.querySelector(&#39;div&#39;).textContent = await window.pageURL();
      }
    &lt;/script&gt;
    &lt;button onclick=&quot;onClick()&quot;&gt;Click me&lt;/button&gt;
    &lt;div&gt;&lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>playwright<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Playwright</span> playwright <span class="token operator">=</span> <span class="token class-name">Playwright</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BrowserType</span> webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span><span class="token function">webkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Browser</span> browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> headless<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">BrowserContext</span> context <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Page</span> page <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">exposeBinding</span><span class="token punctuation">(</span><span class="token string">&quot;pageURL&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>source<span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> source<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  async function onClick() {\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;    document.querySelector(&#39;div&#39;).textContent = await window.pageURL();\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  }\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;/script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;button onclick=\\&quot;onClick()\\&quot;&gt;Click me&lt;/button&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;div&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>headless<span class="token operator">=</span>false<span class="token punctuation">)</span>
    context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>expose_binding<span class="token punctuation">(</span><span class="token string">&quot;pageURL&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> source<span class="token punctuation">:</span> source<span class="token punctuation">[</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
    &lt;script&gt;
      async function onClick() {
        document.querySelector(&#39;div&#39;).textContent = await window.pageURL();
      }
    &lt;/script&gt;
    &lt;button onclick=&quot;onClick()&quot;&gt;Click me&lt;/button&gt;
    &lt;div&gt;&lt;/div&gt;
    &quot;&quot;&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>headless<span class="token operator">=</span>false<span class="token punctuation">)</span>
    context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>expose_binding<span class="token punctuation">(</span><span class="token string">&quot;pageURL&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> source<span class="token punctuation">:</span> source<span class="token punctuation">[</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
    &lt;script&gt;
      async function onClick() {
        document.querySelector(&#39;div&#39;).textContent = await window.pageURL();
      }
    &lt;/script&gt;
    &lt;button onclick=&quot;onClick()&quot;&gt;Click me&lt;/button&gt;
    &lt;div&gt;&lt;/div&gt;
    &quot;&quot;&quot;</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
    run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">PageExamples</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Webkit<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Headless<span class="token punctuation">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ExposeBindingAsync</span><span class="token punctuation">(</span><span class="token string">&quot;pageUrl&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> source<span class="token punctuation">.</span>Page<span class="token punctuation">.</span>Url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetContentAsync</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  async function onClick() {\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;    document.querySelector(&#39;div&#39;).textContent = await window.pageURL();\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  }\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;/script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;button onclick=\\&quot;onClick()\\&quot;&gt;Click me&lt;/button&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;div&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>An example of passing an element handle:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">exposeBinding</span><span class="token punctuation">(</span><span class="token string">&#39;clicked&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> element<span class="token punctuation">.</span><span class="token function">textContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">handle</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  &lt;script&gt;
    document.addEventListener(&#39;click&#39;, event =&gt; window.clicked(event.target));
  &lt;/script&gt;
  &lt;div&gt;Click me&lt;/div&gt;
  &lt;div&gt;Or click me&lt;/div&gt;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">exposeBinding</span><span class="token punctuation">(</span><span class="token string">&quot;clicked&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>source<span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token class-name">ElementHandle</span> element <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ElementHandle</span><span class="token punctuation">)</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span><span class="token function">textContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Page<span class="token punctuation">.</span>ExposeBindingOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setHandle</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;script&gt;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  document.addEventListener(&#39;click&#39;, event =&gt; window.clicked(event.target));\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;/script&gt;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;div&gt;Click me&lt;/div&gt;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;div&gt;Or click me&lt;/div&gt;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">print</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> element<span class="token punctuation">.</span>text_content<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span>expose_binding<span class="token punctuation">(</span><span class="token string">&quot;clicked&quot;</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">,</span> handle<span class="token operator">=</span>true<span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
  &lt;script&gt;
    document.addEventListener(&#39;click&#39;, event =&gt; window.clicked(event.target));
  &lt;/script&gt;
  &lt;div&gt;Click me&lt;/div&gt;
  &lt;div&gt;Or click me&lt;/div&gt;
&quot;&quot;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">print</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>text_content<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

page<span class="token punctuation">.</span>expose_binding<span class="token punctuation">(</span><span class="token string">&quot;clicked&quot;</span><span class="token punctuation">,</span> <span class="token keyword">print</span><span class="token punctuation">,</span> handle<span class="token operator">=</span>true<span class="token punctuation">)</span>
page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
  &lt;script&gt;
    document.addEventListener(&#39;click&#39;, event =&gt; window.clicked(event.target));
  &lt;/script&gt;
  &lt;div&gt;Click me&lt;/div&gt;
  &lt;div&gt;Or click me&lt;/div&gt;
&quot;&quot;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TaskCompletionSource<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ExposeBindingAsync</span><span class="token punctuation">(</span><span class="token string">&quot;clicked&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token class-name">BindingSource</span> _<span class="token punctuation">,</span> <span class="token class-name">IJSHandle</span> t<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">TrySetResult</span><span class="token punctuation">(</span><span class="token keyword">await</span> t<span class="token punctuation">.</span><span class="token function">AsElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">TextContentAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetContentAsync</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;script&gt;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  document.addEventListener(&#39;click&#39;, event =&gt; window.clicked(event.target));\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;/script&gt;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;div&gt;Click me&lt;/div&gt;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;&lt;div&gt;Or click me&lt;/div&gt;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> result<span class="token punctuation">.</span>Task<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,220),ta={id:"param-page-exposebinding-name",tabindex:"-1"},ea=n("a",{class:"header-anchor",href:"#param-page-exposebinding-name","aria-hidden":"true"},"#",-1),oa={href:"http://Page.exposeBinding.name",target:"_blank",rel:"noopener noreferrer"},pa=t(`<ul><li>since: v1.8</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Name of the function on the window object.</p><h3 id="param-page-exposebinding-callback" tabindex="-1"><a class="header-anchor" href="#param-page-exposebinding-callback" aria-hidden="true">#</a> param: Page.exposeBinding.callback</h3><ul><li>since: v1.8</li></ul><ul><li><code>callback</code> &lt;[function]&gt;</li></ul><p>Callback function that will be called in the Playwright&#39;s context.</p><h3 id="option-page-exposebinding-handle" tabindex="-1"><a class="header-anchor" href="#option-page-exposebinding-handle" aria-hidden="true">#</a> option: Page.exposeBinding.handle</h3><ul><li>since: v1.8</li></ul><ul><li><code>handle</code> &lt;[boolean]&gt;</li></ul><p>Whether to pass the argument as a handle, instead of passing by value. When passing a handle, only one argument is<br> supported. When passing by value, multiple arguments are supported.</p><h2 id="async-method-page-exposefunction" tabindex="-1"><a class="header-anchor" href="#async-method-page-exposefunction" aria-hidden="true">#</a> async method: Page.exposeFunction</h2><ul><li>since: v1.8</li></ul><p>The method adds a function called [<code>param: name</code>] on the <code>window</code> object of every frame in the page. When called, the<br> function executes [<code>param: callback</code>] and returns a [Promise] which resolves to the return value of [<code>param: callback</code>].</p><p>If the [<code>param: callback</code>] returns a [Promise], it will be awaited.</p><p>See [<code>method: BrowserContext.exposeFunction</code>] for context-wide exposed function.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>Functions installed via [<code>method: Page.exposeFunction</code>] survive navigations.</p></div><p><strong>Usage</strong></p><p>An example of adding a <code>sha256</code> function to the page:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> webkit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Or &#39;chromium&#39; or &#39;firefox&#39;.</span>
<span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">exposeFunction</span><span class="token punctuation">(</span><span class="token string">&#39;sha256&#39;</span><span class="token punctuation">,</span> <span class="token parameter">text</span> <span class="token operator">=&gt;</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;sha256&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;script&gt;
      async function onClick() {
        document.querySelector(&#39;div&#39;).textContent = await window.sha256(&#39;PLAYWRIGHT&#39;);
      }
    &lt;/script&gt;
    &lt;button onclick=&quot;onClick()&quot;&gt;Click me&lt;/button&gt;
    &lt;div&gt;&lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>playwright<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">MessageDigest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">NoSuchAlgorithmException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Playwright</span> playwright <span class="token operator">=</span> <span class="token class-name">Playwright</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BrowserType</span> webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span><span class="token function">webkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Browser</span> browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> headless<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Page</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">exposeFunction</span><span class="token punctuation">(</span><span class="token string">&quot;sha256&quot;</span><span class="token punctuation">,</span> args <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">MessageDigest</span> crypto<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          crypto <span class="token operator">=</span> <span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;SHA-256&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchAlgorithmException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> token <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  async function onClick() {\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;    document.querySelector(&#39;div&#39;).textContent = await window.sha256(&#39;PLAYWRIGHT&#39;);\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  }\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;/script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;button onclick=\\&quot;onClick()\\&quot;&gt;Click me&lt;/button&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;div&gt;&lt;/div&gt;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> hashlib
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright

<span class="token keyword">def</span> <span class="token function">sha256</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>
    m <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span><span class="token punctuation">)</span>
    m<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> m<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>headless<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>expose_function<span class="token punctuation">(</span><span class="token string">&quot;sha256&quot;</span><span class="token punctuation">,</span> sha256<span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
        &lt;script&gt;
          async function onClick() {
            document.querySelector(&#39;div&#39;).textContent = await window.sha256(&#39;PLAYWRIGHT&#39;);
          }
        &lt;/script&gt;
        &lt;button onclick=&quot;onClick()&quot;&gt;Click me&lt;/button&gt;
        &lt;div&gt;&lt;/div&gt;
    &quot;&quot;&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> hashlib
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">def</span> <span class="token function">sha256</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>
    m <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span><span class="token punctuation">)</span>
    m<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> m<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>headless<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>expose_function<span class="token punctuation">(</span><span class="token string">&quot;sha256&quot;</span><span class="token punctuation">,</span> sha256<span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
        &lt;script&gt;
          async function onClick() {
            document.querySelector(&#39;div&#39;).textContent = await window.sha256(&#39;PLAYWRIGHT&#39;);
          }
        &lt;/script&gt;
        &lt;button onclick=&quot;onClick()&quot;&gt;Click me&lt;/button&gt;
        &lt;div&gt;&lt;/div&gt;
    &quot;&quot;&quot;</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
    run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>Cryptography</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">PageExamples</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Webkit<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            Headless<span class="token punctuation">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ExposeFunctionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;sha256&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> input<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Convert<span class="token punctuation">.</span><span class="token function">ToBase64String</span><span class="token punctuation">(</span>
                SHA256<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ComputeHash</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetContentAsync</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  async function onClick() {\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;    document.querySelector(&#39;div&#39;).textContent = await window.sha256(&#39;PLAYWRIGHT&#39;);\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;  }\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;/script&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;button onclick=\\&quot;onClick()\\&quot;&gt;Click me&lt;/button&gt;\\n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;div&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">TextContentAsync</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),ia={id:"param-page-exposefunction-name",tabindex:"-1"},ca=n("a",{class:"header-anchor",href:"#param-page-exposefunction-name","aria-hidden":"true"},"#",-1),la={href:"http://Page.exposeFunction.name",target:"_blank",rel:"noopener noreferrer"},ua=t('<ul><li>since: v1.8</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Name of the function on the window object</p><h3 id="param-page-exposefunction-callback" tabindex="-1"><a class="header-anchor" href="#param-page-exposefunction-callback" aria-hidden="true">#</a> param: Page.exposeFunction.callback</h3><ul><li>since: v1.8</li></ul><ul><li><code>callback</code> &lt;[function]&gt;</li></ul><p>Callback function which will be called in Playwright&#39;s context.</p><h2 id="async-method-page-fill" tabindex="-1"><a class="header-anchor" href="#async-method-page-fill" aria-hidden="true">#</a> async method: Page.fill</h2>',8),ra=n("li",null,"since: v1.8",-1),da=n("code",null,"method: Locator.fill",-1),ka=n("code",null,"param: selector",-1),ha=n("code",null,"input",-1),ga=n("code",null,"<input>",-1),va=n("code",null,"<textarea>",-1),ma=n("code",null,"[contenteditable]",-1),ba=n("code",null,"<label>",-1),fa={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},wa=t('<p>To send fine-grained keyboard events, use [<code>method: Page.type</code>].</p><h3 id="param-page-fill-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-fill-selector-input-selector" aria-hidden="true">#</a> param: Page.fill.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-fill-value" tabindex="-1"><a class="header-anchor" href="#param-page-fill-value" aria-hidden="true">#</a> param: Page.fill.value</h3><ul><li>since: v1.8</li></ul><ul><li><code>value</code> &lt;[string]&gt;</li></ul><p>Value to fill for the <code>&lt;input&gt;</code>, <code>&lt;textarea&gt;</code> or <code>[contenteditable]</code> element.</p><h3 id="option-page-fill-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-page-fill-force-input-force" aria-hidden="true">#</a> option: Page.fill.force = %%-input-force-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-page-fill-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-fill-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.fill.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-fill-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-fill-strict-input-strict" aria-hidden="true">#</a> option: Page.fill.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-fill-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-fill-timeout-input-timeout" aria-hidden="true">#</a> option: Page.fill.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-focus" tabindex="-1"><a class="header-anchor" href="#async-method-page-focus" aria-hidden="true">#</a> async method: Page.focus</h2>',16),ya=n("li",null,"since: v1.8",-1),qa=n("code",null,"method: Locator.focus",-1),xa=t(`<p>This method fetches an element with [<code>param: selector</code>] and focuses it. If there&#39;s no element matching<br> [<code>param: selector</code>], the method waits until a matching element appears in the DOM.</p><h3 id="param-page-focus-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-focus-selector-input-selector" aria-hidden="true">#</a> param: Page.focus.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-focus-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-focus-strict-input-strict" aria-hidden="true">#</a> option: Page.focus.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-focus-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-focus-timeout-input-timeout" aria-hidden="true">#</a> option: Page.focus.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="method-page-frame" tabindex="-1"><a class="header-anchor" href="#method-page-frame" aria-hidden="true">#</a> method: Page.frame</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Frame]&gt;</li></ul><p>Returns frame matching the specified criteria. Either <code>name</code> or <code>url</code> must be specified.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> frame <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span><span class="token string">&#39;frame-name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Frame</span> frame <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span><span class="token string">&quot;frame-name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>frame <span class="token operator">=</span> page<span class="token punctuation">.</span>frame<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;frame-name&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> frame <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">Frame</span><span class="token punctuation">(</span><span class="token string">&quot;frame-name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> frame <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*domain.*</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Frame</span> frame <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">frameByUrl</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;.*domain.*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>frame <span class="token operator">=</span> page<span class="token punctuation">.</span>frame<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">r&quot;.*domain.*&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> frame <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">FrameByUrl</span><span class="token punctuation">(</span><span class="token string">&quot;.*domain.*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="param-page-frame-frameselector" tabindex="-1"><a class="header-anchor" href="#param-page-frame-frameselector" aria-hidden="true">#</a> param: Page.frame.frameSelector</h3><ul><li>since: v1.8</li><li>langs: js</li></ul><ul><li><code>frameSelector</code> &lt;[string]|[Object]&gt; <ul><li><code>name</code> ?&lt;[string]&gt; Frame name specified in the <code>iframe</code>&#39;s <code>name</code> attribute. Optional.</li><li><code>url</code> ?&lt;[string]|[RegExp]|[function]([URL]):[boolean]&gt; A glob pattern, regex pattern or predicate receiving<br> frame&#39;s <code>url</code> as a [URL] object. Optional.</li></ul></li></ul><p>Frame name or other frame lookup options.</p>`,24),_a={id:"param-page-frame-name",tabindex:"-1"},Pa=n("a",{class:"header-anchor",href:"#param-page-frame-name","aria-hidden":"true"},"#",-1),ja={href:"http://Page.frame.name",target:"_blank",rel:"noopener noreferrer"},Sa=n("ul",null,[n("li",null,"since: v1.9"),n("li",null,"langs: csharp, java")],-1),Aa=n("ul",null,[n("li",null,[n("code",null,"name"),a(" <[string]>")])],-1),Ra=n("p",null,[a("Frame name specified in the "),n("code",null,"iframe"),a("'s "),n("code",null,"name"),a(" attribute.")],-1),Ta={id:"option-page-frame-name",tabindex:"-1"},Fa=n("a",{class:"header-anchor",href:"#option-page-frame-name","aria-hidden":"true"},"#",-1),Ca={href:"http://Page.frame.name",target:"_blank",rel:"noopener noreferrer"},La=t(`<ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li><code>name</code> ?&lt;[string]&gt;</li></ul><p>Frame name specified in the <code>iframe</code>&#39;s <code>name</code> attribute. Optional.</p><h3 id="option-page-frame-url" tabindex="-1"><a class="header-anchor" href="#option-page-frame-url" aria-hidden="true">#</a> option: Page.frame.url</h3><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li><code>url</code> ?&lt;[string]|[RegExp]|[function]([URL]):[boolean]&gt;</li></ul><p>A glob pattern, regex pattern or predicate receiving frame&#39;s <code>url</code> as a [URL] object. Optional.</p><h2 id="method-page-framebyurl" tabindex="-1"><a class="header-anchor" href="#method-page-framebyurl" aria-hidden="true">#</a> method: Page.frameByUrl</h2><ul><li>since: v1.9</li><li>langs: csharp, java</li></ul><ul><li>returns: &lt;[null]|[Frame]&gt;</li></ul><p>Returns frame with matching URL.</p><h3 id="param-page-framebyurl-url" tabindex="-1"><a class="header-anchor" href="#param-page-framebyurl-url" aria-hidden="true">#</a> param: Page.frameByUrl.url</h3><ul><li>since: v1.9</li><li>langs: csharp, java</li></ul><ul><li><code>url</code> &lt;[string]|[RegExp]|[function]([URL]):[boolean]&gt;</li></ul><p>A glob pattern, regex pattern or predicate receiving frame&#39;s <code>url</code> as a [URL] object.</p><h2 id="method-page-framelocator" tabindex="-1"><a class="header-anchor" href="#method-page-framelocator" aria-hidden="true">#</a> method: Page.frameLocator</h2><ul><li>since: v1.17</li></ul><ul><li>returns: &lt;[FrameLocator]&gt;</li></ul><p>When working with iframes, you can create a frame locator that will enter the iframe and allow selecting elements<br> in that iframe.</p><p><strong>Usage</strong></p><p>Following snippet locates element with text &quot;Submit&quot; in the iframe with id <code>my-frame</code>,<br> like <code>&lt;iframe id=&quot;my-frame&quot;&gt;</code>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">frameLocator</span><span class="token punctuation">(</span><span class="token string">&#39;#my-iframe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Locator</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">frameLocator</span><span class="token punctuation">(</span><span class="token string">&quot;#my-iframe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
locator<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>locator <span class="token operator">=</span> page<span class="token punctuation">.</span>frame_locator<span class="token punctuation">(</span><span class="token string">&quot;#my-iframe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>locator <span class="token operator">=</span> page<span class="token punctuation">.</span>frame_locator<span class="token punctuation">(</span><span class="token string">&quot;#my-iframe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span>
locator<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">FrameLocator</span><span class="token punctuation">(</span><span class="token string">&quot;#my-iframe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-framelocator-selector-find-selector" tabindex="-1"><a class="header-anchor" href="#param-page-framelocator-selector-find-selector" aria-hidden="true">#</a> param: Page.frameLocator.selector = %%-find-selector-%%</h3><ul><li>since: v1.17</li></ul><h2 id="method-page-frames" tabindex="-1"><a class="header-anchor" href="#method-page-frames" aria-hidden="true">#</a> method: Page.frames</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Array]&lt;[Frame]&gt;&gt;</li></ul><p>An array of all frames attached to the page.</p><h2 id="async-method-page-getattribute" tabindex="-1"><a class="header-anchor" href="#async-method-page-getattribute" aria-hidden="true">#</a> async method: Page.getAttribute</h2>`,33),Ea=n("li",null,"since: v1.8",-1),Wa=n("code",null,"method: Locator.getAttribute",-1),Ua=n("ul",null,[n("li",null,"returns: <[null]|[string]>")],-1),Ma=n("p",null,"Returns element attribute value.",-1),Ha=n("h3",{id:"param-page-getattribute-selector-input-selector",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#param-page-getattribute-selector-input-selector","aria-hidden":"true"},"#"),a(" param: Page.getAttribute.selector = %%-input-selector-%%")],-1),Ia=n("ul",null,[n("li",null,"since: v1.8")],-1),Da={id:"param-page-getattribute-name",tabindex:"-1"},Oa=n("a",{class:"header-anchor",href:"#param-page-getattribute-name","aria-hidden":"true"},"#",-1),Ba={href:"http://Page.getAttribute.name",target:"_blank",rel:"noopener noreferrer"},za=t('<ul><li>since: v1.8</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Attribute name to get the value for.</p><h3 id="option-page-getattribute-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-getattribute-strict-input-strict" aria-hidden="true">#</a> option: Page.getAttribute.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-getattribute-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-getattribute-timeout-input-timeout" aria-hidden="true">#</a> option: Page.getAttribute.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="method-page-getbyalttext" tabindex="-1"><a class="header-anchor" href="#method-page-getbyalttext" aria-hidden="true">#</a> method: Page.getByAltText</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-alt-text-%%</p><h3 id="param-page-getbyalttext-text-locator-get-by-text-text" tabindex="-1"><a class="header-anchor" href="#param-page-getbyalttext-text-locator-get-by-text-text" aria-hidden="true">#</a> param: Page.getByAltText.text = %%-locator-get-by-text-text-%%</h3><h3 id="option-page-getbyalttext-exact-locator-get-by-text-exact" tabindex="-1"><a class="header-anchor" href="#option-page-getbyalttext-exact-locator-get-by-text-exact" aria-hidden="true">#</a> option: Page.getByAltText.exact = %%-locator-get-by-text-exact-%%</h3><h2 id="method-page-getbylabel" tabindex="-1"><a class="header-anchor" href="#method-page-getbylabel" aria-hidden="true">#</a> method: Page.getByLabel</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-label-text-%%</p><h3 id="param-page-getbylabel-text-locator-get-by-text-text" tabindex="-1"><a class="header-anchor" href="#param-page-getbylabel-text-locator-get-by-text-text" aria-hidden="true">#</a> param: Page.getByLabel.text = %%-locator-get-by-text-text-%%</h3><h3 id="option-page-getbylabel-exact-locator-get-by-text-exact" tabindex="-1"><a class="header-anchor" href="#option-page-getbylabel-exact-locator-get-by-text-exact" aria-hidden="true">#</a> option: Page.getByLabel.exact = %%-locator-get-by-text-exact-%%</h3><h2 id="method-page-getbyplaceholder" tabindex="-1"><a class="header-anchor" href="#method-page-getbyplaceholder" aria-hidden="true">#</a> method: Page.getByPlaceholder</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-placeholder-text-%%</p><h3 id="param-page-getbyplaceholder-text-locator-get-by-text-text" tabindex="-1"><a class="header-anchor" href="#param-page-getbyplaceholder-text-locator-get-by-text-text" aria-hidden="true">#</a> param: Page.getByPlaceholder.text = %%-locator-get-by-text-text-%%</h3><h3 id="option-page-getbyplaceholder-exact-locator-get-by-text-exact" tabindex="-1"><a class="header-anchor" href="#option-page-getbyplaceholder-exact-locator-get-by-text-exact" aria-hidden="true">#</a> option: Page.getByPlaceholder.exact = %%-locator-get-by-text-exact-%%</h3><h2 id="method-page-getbyrole" tabindex="-1"><a class="header-anchor" href="#method-page-getbyrole" aria-hidden="true">#</a> method: Page.getByRole</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-role-%%</p><h3 id="param-page-getbyrole-role-locator-get-by-role-role" tabindex="-1"><a class="header-anchor" href="#param-page-getbyrole-role-locator-get-by-role-role" aria-hidden="true">#</a> param: Page.getByRole.role = %%-locator-get-by-role-role-%%</h3><h3 id="option-page-getbyrole-inline-locator-get-by-role-option-list-v1-27" tabindex="-1"><a class="header-anchor" href="#option-page-getbyrole-inline-locator-get-by-role-option-list-v1-27" aria-hidden="true">#</a> option: Page.getByRole.-inline- = %%-locator-get-by-role-option-list-v1.27-%%</h3><ul><li>since: v1.27</li></ul><h3 id="option-page-getbyrole-exact-locator-get-by-role-option-exact" tabindex="-1"><a class="header-anchor" href="#option-page-getbyrole-exact-locator-get-by-role-option-exact" aria-hidden="true">#</a> option: Page.getByRole.exact = %%-locator-get-by-role-option-exact-%%</h3><h2 id="method-page-getbytestid" tabindex="-1"><a class="header-anchor" href="#method-page-getbytestid" aria-hidden="true">#</a> method: Page.getByTestId</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-test-id-%%</p><h3 id="param-page-getbytestid-testid-locator-get-by-test-id-test-id" tabindex="-1"><a class="header-anchor" href="#param-page-getbytestid-testid-locator-get-by-test-id-test-id" aria-hidden="true">#</a> param: Page.getByTestId.testId = %%-locator-get-by-test-id-test-id-%%</h3><ul><li>since: v1.27</li></ul><h2 id="method-page-getbytext" tabindex="-1"><a class="header-anchor" href="#method-page-getbytext" aria-hidden="true">#</a> method: Page.getByText</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-text-%%</p><h3 id="param-page-getbytext-text-locator-get-by-text-text" tabindex="-1"><a class="header-anchor" href="#param-page-getbytext-text-locator-get-by-text-text" aria-hidden="true">#</a> param: Page.getByText.text = %%-locator-get-by-text-text-%%</h3><h3 id="option-page-getbytext-exact-locator-get-by-text-exact" tabindex="-1"><a class="header-anchor" href="#option-page-getbytext-exact-locator-get-by-text-exact" aria-hidden="true">#</a> option: Page.getByText.exact = %%-locator-get-by-text-exact-%%</h3><h2 id="method-page-getbytitle" tabindex="-1"><a class="header-anchor" href="#method-page-getbytitle" aria-hidden="true">#</a> method: Page.getByTitle</h2><ul><li>since: v1.27</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-get-by-title-%%</p><h3 id="param-page-getbytitle-text-locator-get-by-text-text" tabindex="-1"><a class="header-anchor" href="#param-page-getbytitle-text-locator-get-by-text-text" aria-hidden="true">#</a> param: Page.getByTitle.text = %%-locator-get-by-text-text-%%</h3><h3 id="option-page-getbytitle-exact-locator-get-by-text-exact" tabindex="-1"><a class="header-anchor" href="#option-page-getbytitle-exact-locator-get-by-text-exact" aria-hidden="true">#</a> option: Page.getByTitle.exact = %%-locator-get-by-text-exact-%%</h3><h2 id="async-method-page-goback" tabindex="-1"><a class="header-anchor" href="#async-method-page-goback" aria-hidden="true">#</a> async method: Page.goBack</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Response]&gt;</li></ul><p>Returns the main resource response. In case of multiple redirects, the navigation will resolve with the response of the<br> last redirect. If can not go back, returns <code>null</code>.</p><p>Navigate to the previous page in history.</p><h3 id="option-page-goback-waituntil-navigation-wait-until" tabindex="-1"><a class="header-anchor" href="#option-page-goback-waituntil-navigation-wait-until" aria-hidden="true">#</a> option: Page.goBack.waitUntil = %%-navigation-wait-until-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-goback-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-goback-timeout-navigation-timeout" aria-hidden="true">#</a> option: Page.goBack.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-goforward" tabindex="-1"><a class="header-anchor" href="#async-method-page-goforward" aria-hidden="true">#</a> async method: Page.goForward</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Response]&gt;</li></ul><p>Returns the main resource response. In case of multiple redirects, the navigation will resolve with the response of the<br> last redirect. If can not go forward, returns <code>null</code>.</p><p>Navigate to the next page in history.</p><h3 id="option-page-goforward-waituntil-navigation-wait-until" tabindex="-1"><a class="header-anchor" href="#option-page-goforward-waituntil-navigation-wait-until" aria-hidden="true">#</a> option: Page.goForward.waitUntil = %%-navigation-wait-until-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-goforward-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-goforward-timeout-navigation-timeout" aria-hidden="true">#</a> option: Page.goForward.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-goto" tabindex="-1"><a class="header-anchor" href="#async-method-page-goto" aria-hidden="true">#</a> async method: Page.goto</h2><ul><li>since: v1.8</li><li>langs: <ul><li>alias-java: navigate</li></ul></li></ul><ul><li>returns: &lt;[null]|[Response]&gt;</li></ul><p>Returns the main resource response. In case of multiple redirects, the navigation will resolve with the first<br> non-redirect response.</p><p>The method will throw an error if:</p><ul><li>there&#39;s an SSL error (e.g. in case of self-signed certificates).</li><li>target URL is invalid.</li><li>the [<code>option: timeout</code>] is exceeded during navigation.</li><li>the remote server does not respond or is unreachable.</li><li>the main resource failed to load.</li></ul><p>The method will not throw an error when any valid HTTP status code is returned by the remote server, including 404 &quot;Not<br> Found&quot; and 500 &quot;Internal Server Error&quot;. The status code for such responses can be retrieved by calling<br> [<code>method: Response.status</code>].</p><div class="hint-container note"><p class="hint-container-title">注</p><p>The method either throws an error or returns a main resource response. The only exceptions are navigation to<br><code>about:blank</code> or navigation to the same URL with a different hash, which would succeed and return <code>null</code>.</p></div>',77),Na={class:"hint-container note"},Va=n("p",{class:"hint-container-title"},"注",-1),Ga=n("br",null,null,-1),Ja={href:"https://bugs.chromium.org/p/chromium/issues/detail?id=761295",target:"_blank",rel:"noopener noreferrer"},$a=n("h3",{id:"param-page-goto-url",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#param-page-goto-url","aria-hidden":"true"},"#"),a(" param: Page.goto.url")],-1),Ka=n("ul",null,[n("li",null,"since: v1.8")],-1),Ya=n("ul",null,[n("li",null,[n("code",null,"url"),a(" <[string]>")])],-1),Xa=n("code",null,"https://",-1),Za=n("br",null,null,-1),Qa=n("code",null,"option: baseURL",-1),ns=n("br",null,null,-1),as={href:"https://developer.mozilla.org/en-US/docs/Web/API/URL/URL",target:"_blank",rel:"noopener noreferrer"},ss=n("code",null,"new URL()",-1),ts=t('<h3 id="option-page-goto-waituntil-navigation-wait-until" tabindex="-1"><a class="header-anchor" href="#option-page-goto-waituntil-navigation-wait-until" aria-hidden="true">#</a> option: Page.goto.waitUntil = %%-navigation-wait-until-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-goto-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-goto-timeout-navigation-timeout" aria-hidden="true">#</a> option: Page.goto.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-goto-referer" tabindex="-1"><a class="header-anchor" href="#option-page-goto-referer" aria-hidden="true">#</a> option: Page.goto.referer</h3><ul><li>since: v1.8</li></ul><ul><li><code>referer</code> &lt;[string]&gt;</li></ul><p>Referer header value. If provided it will take preference over the referer header value set by<br> [<code>method: Page.setExtraHTTPHeaders</code>].</p><h2 id="async-method-page-hover" tabindex="-1"><a class="header-anchor" href="#async-method-page-hover" aria-hidden="true">#</a> async method: Page.hover</h2>',9),es=n("li",null,"since: v1.8",-1),os=n("code",null,"method: Locator.hover",-1),ps=n("p",null,[a("This method hovers over an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),is=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),cs=n("code",null,"option: force",-1),ls=n("br",null,null,-1),us=n("li",null,"Scroll the element into view if needed.",-1),rs=n("li",null,[a("Use ["),n("code",null,"property: Page.mouse"),a("] to hover over the center of the element, or the specified ["),n("code",null,"option: position"),a("].")],-1),ds=n("li",null,[a("Wait for initiated navigations to either succeed or fail, unless "),n("code",null,"noWaitAfter"),a(" option is set.")],-1),ks=t('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="param-page-hover-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-hover-selector-input-selector" aria-hidden="true">#</a> param: Page.hover.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-hover-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-page-hover-force-input-force" aria-hidden="true">#</a> option: Page.hover.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-hover-modifiers-input-modifiers" tabindex="-1"><a class="header-anchor" href="#option-page-hover-modifiers-input-modifiers" aria-hidden="true">#</a> option: Page.hover.modifiers = %%-input-modifiers-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-hover-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-page-hover-position-input-position" aria-hidden="true">#</a> option: Page.hover.position = %%-input-position-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-hover-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-hover-strict-input-strict" aria-hidden="true">#</a> option: Page.hover.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-hover-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-hover-timeout-input-timeout" aria-hidden="true">#</a> option: Page.hover.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-hover-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-page-hover-trial-input-trial" aria-hidden="true">#</a> option: Page.hover.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-page-hover-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-hover-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.hover.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.28</li></ul><h2 id="async-method-page-innerhtml" tabindex="-1"><a class="header-anchor" href="#async-method-page-innerhtml" aria-hidden="true">#</a> async method: Page.innerHTML</h2>',18),hs=n("li",null,"since: v1.8",-1),gs=n("code",null,"method: Locator.innerHTML",-1),vs=t('<ul><li>returns: &lt;[string]&gt;</li></ul><p>Returns <code>element.innerHTML</code>.</p><h3 id="param-page-innerhtml-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-innerhtml-selector-input-selector" aria-hidden="true">#</a> param: Page.innerHTML.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-innerhtml-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-innerhtml-strict-input-strict" aria-hidden="true">#</a> option: Page.innerHTML.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-innerhtml-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-innerhtml-timeout-input-timeout" aria-hidden="true">#</a> option: Page.innerHTML.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-innertext" tabindex="-1"><a class="header-anchor" href="#async-method-page-innertext" aria-hidden="true">#</a> async method: Page.innerText</h2>',9),ms=n("li",null,"since: v1.8",-1),bs=n("code",null,"method: Locator.innerText",-1),fs=t('<ul><li>returns: &lt;[string]&gt;</li></ul><p>Returns <code>element.innerText</code>.</p><h3 id="param-page-innertext-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-innertext-selector-input-selector" aria-hidden="true">#</a> param: Page.innerText.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-innertext-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-innertext-strict-input-strict" aria-hidden="true">#</a> option: Page.innerText.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-innertext-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-innertext-timeout-input-timeout" aria-hidden="true">#</a> option: Page.innerText.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-inputvalue" tabindex="-1"><a class="header-anchor" href="#async-method-page-inputvalue" aria-hidden="true">#</a> async method: Page.inputValue</h2>',9),ws=n("li",null,"since: v1.13",-1),ys=n("code",null,"method: Locator.inputValue",-1),qs=n("ul",null,[n("li",null,"returns: <[string]>")],-1),xs=n("p",null,[a("Returns "),n("code",null,"input.value"),a(" for the selected "),n("code",null,"<input>"),a(" or "),n("code",null,"<textarea>"),a(" or "),n("code",null,"<select>"),a(" element.")],-1),_s=n("code",null,"<label>",-1),Ps={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},js=t('<h3 id="param-page-inputvalue-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-inputvalue-selector-input-selector" aria-hidden="true">#</a> param: Page.inputValue.selector = %%-input-selector-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-page-inputvalue-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-inputvalue-strict-input-strict" aria-hidden="true">#</a> option: Page.inputValue.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-inputvalue-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-inputvalue-timeout-input-timeout" aria-hidden="true">#</a> option: Page.inputValue.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.13</li></ul><h2 id="async-method-page-ischecked" tabindex="-1"><a class="header-anchor" href="#async-method-page-ischecked" aria-hidden="true">#</a> async method: Page.isChecked</h2>',7),Ss=n("li",null,"since: v1.8",-1),As=n("code",null,"method: Locator.isChecked",-1),Rs=t('<ul><li>returns: &lt;[boolean]&gt;</li></ul><p>Returns whether the element is checked. Throws if the element is not a checkbox or radio input.</p><h3 id="param-page-ischecked-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-ischecked-selector-input-selector" aria-hidden="true">#</a> param: Page.isChecked.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-ischecked-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-ischecked-strict-input-strict" aria-hidden="true">#</a> option: Page.isChecked.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-ischecked-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-ischecked-timeout-input-timeout" aria-hidden="true">#</a> option: Page.isChecked.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="method-page-isclosed" tabindex="-1"><a class="header-anchor" href="#method-page-isclosed" aria-hidden="true">#</a> method: Page.isClosed</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[boolean]&gt;</li></ul><p>Indicates that the page has been closed.</p><h2 id="async-method-page-isdisabled" tabindex="-1"><a class="header-anchor" href="#async-method-page-isdisabled" aria-hidden="true">#</a> async method: Page.isDisabled</h2>',13),Ts=n("li",null,"since: v1.8",-1),Fs=n("code",null,"method: Locator.isDisabled",-1),Cs=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),Ls=t('<h3 id="param-page-isdisabled-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-isdisabled-selector-input-selector" aria-hidden="true">#</a> param: Page.isDisabled.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-isdisabled-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-isdisabled-strict-input-strict" aria-hidden="true">#</a> option: Page.isDisabled.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-isdisabled-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-isdisabled-timeout-input-timeout" aria-hidden="true">#</a> option: Page.isDisabled.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-iseditable" tabindex="-1"><a class="header-anchor" href="#async-method-page-iseditable" aria-hidden="true">#</a> async method: Page.isEditable</h2>',7),Es=n("li",null,"since: v1.8",-1),Ws=n("code",null,"method: Locator.isEditable",-1),Us=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),Ms=t('<h3 id="param-page-iseditable-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-iseditable-selector-input-selector" aria-hidden="true">#</a> param: Page.isEditable.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-iseditable-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-iseditable-strict-input-strict" aria-hidden="true">#</a> option: Page.isEditable.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-iseditable-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-iseditable-timeout-input-timeout" aria-hidden="true">#</a> option: Page.isEditable.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-isenabled" tabindex="-1"><a class="header-anchor" href="#async-method-page-isenabled" aria-hidden="true">#</a> async method: Page.isEnabled</h2>',7),Hs=n("li",null,"since: v1.8",-1),Is=n("code",null,"method: Locator.isEnabled",-1),Ds=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),Os=t('<h3 id="param-page-isenabled-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-isenabled-selector-input-selector" aria-hidden="true">#</a> param: Page.isEnabled.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-isenabled-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-isenabled-strict-input-strict" aria-hidden="true">#</a> option: Page.isEnabled.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-isenabled-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-isenabled-timeout-input-timeout" aria-hidden="true">#</a> option: Page.isEnabled.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-ishidden" tabindex="-1"><a class="header-anchor" href="#async-method-page-ishidden" aria-hidden="true">#</a> async method: Page.isHidden</h2>',7),Bs=n("li",null,"since: v1.8",-1),zs=n("code",null,"method: Locator.isHidden",-1),Ns=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),Vs=n("code",null,"option: selector",-1),Gs=t('<h3 id="param-page-ishidden-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-ishidden-selector-input-selector" aria-hidden="true">#</a> param: Page.isHidden.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-ishidden-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-ishidden-strict-input-strict" aria-hidden="true">#</a> option: Page.isHidden.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-ishidden-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-ishidden-timeout" aria-hidden="true">#</a> option: Page.isHidden.timeout</h3><ul><li>since: v1.8</li><li>deprecated: This option is ignored. [<code>method: Page.isHidden</code>] does not wait for the<br> element to become hidden and returns immediately.</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><h2 id="async-method-page-isvisible" tabindex="-1"><a class="header-anchor" href="#async-method-page-isvisible" aria-hidden="true">#</a> async method: Page.isVisible</h2>',8),Js=n("li",null,"since: v1.8",-1),$s=n("code",null,"method: Locator.isVisible",-1),Ks=n("ul",null,[n("li",null,"returns: <[boolean]>")],-1),Ys=n("code",null,"option: selector",-1),Xs=t(`<h3 id="param-page-isvisible-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-isvisible-selector-input-selector" aria-hidden="true">#</a> param: Page.isVisible.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-isvisible-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-isvisible-strict-input-strict" aria-hidden="true">#</a> option: Page.isVisible.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-isvisible-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-isvisible-timeout" aria-hidden="true">#</a> option: Page.isVisible.timeout</h3><ul><li>since: v1.8</li><li>deprecated: This option is ignored. [<code>method: Page.isVisible</code>] does not wait<br> for the element to become visible and returns immediately.</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><h2 id="property-page-keyboard" tabindex="-1"><a class="header-anchor" href="#property-page-keyboard" aria-hidden="true">#</a> property: Page.keyboard</h2><ul><li>since: v1.8</li></ul><ul><li>type: &lt;[Keyboard]&gt;</li></ul><h2 id="method-page-locator" tabindex="-1"><a class="header-anchor" href="#method-page-locator" aria-hidden="true">#</a> method: Page.locator</h2><ul><li>since: v1.14</li></ul><ul><li>returns: &lt;[Locator]&gt;</li></ul><p>%%-template-locator-root-locator-%%</p><h3 id="param-page-locator-selector-find-selector" tabindex="-1"><a class="header-anchor" href="#param-page-locator-selector-find-selector" aria-hidden="true">#</a> param: Page.locator.selector = %%-find-selector-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-locator-inline-locator-options-list-v1-14" tabindex="-1"><a class="header-anchor" href="#option-page-locator-inline-locator-options-list-v1-14" aria-hidden="true">#</a> option: Page.locator.-inline- = %%-locator-options-list-v1.14-%%</h3><ul><li>since: v1.14</li></ul><h2 id="method-page-mainframe" tabindex="-1"><a class="header-anchor" href="#method-page-mainframe" aria-hidden="true">#</a> method: Page.mainFrame</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Frame]&gt;</li></ul><p>The page&#39;s main frame. Page is guaranteed to have a main frame which persists during navigations.</p><h2 id="property-page-mouse" tabindex="-1"><a class="header-anchor" href="#property-page-mouse" aria-hidden="true">#</a> property: Page.mouse</h2><ul><li>since: v1.8</li></ul><ul><li>type: &lt;[Mouse]&gt;</li></ul><h2 id="method-page-oncedialog" tabindex="-1"><a class="header-anchor" href="#method-page-oncedialog" aria-hidden="true">#</a> method: Page.onceDialog</h2><ul><li>since: v1.10</li><li>langs: java</li></ul><p>Adds one-off [Dialog] handler. The handler will be removed immediately after next [Dialog] is created.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">onceDialog</span><span class="token punctuation">(</span>dialog <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  dialog<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// prints &#39;foo&#39;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;prompt(&#39;Enter string:&#39;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// prints &#39;null&#39; as the dialog will be auto-dismissed because there are no handlers.</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;prompt(&#39;Enter string:&#39;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This code above is equivalent to:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dialog</span><span class="token punctuation">&gt;</span></span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dialog</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Dialog</span> dialog<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dialog<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    page<span class="token punctuation">.</span><span class="token function">offDialog</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">onDialog</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// prints &#39;foo&#39;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;prompt(&#39;Enter string:&#39;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// prints &#39;null&#39; as the dialog will be auto-dismissed because there are no handlers.</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;prompt(&#39;Enter string:&#39;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-oncedialog-handler" tabindex="-1"><a class="header-anchor" href="#param-page-oncedialog-handler" aria-hidden="true">#</a> param: Page.onceDialog.handler</h3><ul><li>since: v1.10</li></ul><ul><li><code>handler</code> &lt;[function]([Dialog])&gt;</li></ul>`,34),Zs=n("strong",null,"must",-1),Qs=n("code",null,"method: Dialog.accept",-1),nt=n("code",null,"method: Dialog.dismiss",-1),at=n("br",null,null,-1),st={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop#never_blocking",target:"_blank",rel:"noopener noreferrer"},tt=n("br",null,null,-1),et=t('<h2 id="async-method-page-opener" tabindex="-1"><a class="header-anchor" href="#async-method-page-opener" aria-hidden="true">#</a> async method: Page.opener</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Page]&gt;</li></ul><p>Returns the opener for popup pages and <code>null</code> for others. If the opener has been closed already the returns <code>null</code>.</p><h2 id="async-method-page-pause" tabindex="-1"><a class="header-anchor" href="#async-method-page-pause" aria-hidden="true">#</a> async method: Page.pause</h2><ul><li>since: v1.9</li></ul><p>Pauses script execution. Playwright will stop executing the script and wait for the user to either press &#39;Resume&#39;<br> button in the page overlay or to call <code>playwright.resume()</code> in the DevTools console.</p><p>User can inspect selectors or perform manual steps while paused. Resume will continue running the original script from<br> the place it was paused.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>This method requires Playwright to be started in a headed mode, with a falsy [<code>option: headless</code>] value in<br> the [<code>method: BrowserType.launch</code>].</p></div><h2 id="async-method-page-pdf" tabindex="-1"><a class="header-anchor" href="#async-method-page-pdf" aria-hidden="true">#</a> async method: Page.pdf</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Buffer]&gt;</li></ul><p>Returns the PDF buffer.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>Generating a pdf is currently only supported in Chromium headless.</p></div><p><code>page.pdf()</code> generates a pdf of the page with <code>print</code> css media. To generate a pdf with <code>screen</code> media, call<br> [<code>method: Page.emulateMedia</code>] before calling <code>page.pdf()</code>:</p>',15),ot={class:"hint-container note"},pt=n("p",{class:"hint-container-title"},"注",-1),it=n("code",null,"page.pdf()",-1),ct=n("br",null,null,-1),lt={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-print-color-adjust",target:"_blank",rel:"noopener noreferrer"},ut=n("code",null,"-webkit-print-color-adjust",-1),rt=n("br",null,null,-1),dt=t(`<p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Generates a PDF with &#39;screen&#39; media type.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">emulateMedia</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">media</span><span class="token operator">:</span> <span class="token string">&#39;screen&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">pdf</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;page.pdf&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Generates a PDF with &quot;screen&quot; media type.</span>
page<span class="token punctuation">.</span><span class="token function">emulateMedia</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Page<span class="token punctuation">.</span>EmulateMediaOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMedia</span><span class="token punctuation">(</span><span class="token class-name">Media</span><span class="token punctuation">.</span><span class="token constant">SCREEN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">pdf</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Page<span class="token punctuation">.</span>PdfOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;page.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># generates a pdf with &quot;screen&quot; media type.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>emulate_media<span class="token punctuation">(</span>media<span class="token operator">=</span><span class="token string">&quot;screen&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>pdf<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;page.pdf&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># generates a pdf with &quot;screen&quot; media type.</span>
page<span class="token punctuation">.</span>emulate_media<span class="token punctuation">(</span>media<span class="token operator">=</span><span class="token string">&quot;screen&quot;</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>pdf<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;page.pdf&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Generates a PDF with &#39;screen&#39; media type</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EmulateMediaAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PageEmulateMediaOptions</span> <span class="token punctuation">{</span> Media <span class="token operator">=</span> Media<span class="token punctuation">.</span>Screen <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">PdfAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PagePdfOptions</span> <span class="token punctuation">{</span> Path <span class="token operator">=</span> <span class="token string">&quot;page.pdf&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The [<code>option: width</code>], [<code>option: height</code>], and [<code>option: margin</code>] options accept values labeled with units. Unlabeled<br> values are treated as pixels.</p><p>A few examples:</p><ul><li><code>page.pdf({width: 100})</code> - prints with width set to 100 pixels</li><li><code>page.pdf({width: &#39;100px&#39;})</code> - prints with width set to 100 pixels</li><li><code>page.pdf({width: &#39;10cm&#39;})</code> - prints with width set to 10 centimeters.</li></ul><p>All possible units are:</p><ul><li><code>px</code> - pixel</li><li><code>in</code> - inch</li><li><code>cm</code> - centimeter</li><li><code>mm</code> - millimeter</li></ul><p>The [<code>option: format</code>] options are:</p><ul><li><code>Letter</code>: 8.5in x 11in</li><li><code>Legal</code>: 8.5in x 14in</li><li><code>Tabloid</code>: 11in x 17in</li><li><code>Ledger</code>: 17in x 11in</li><li><code>A0</code>: 33.1in x 46.8in</li><li><code>A1</code>: 23.4in x 33.1in</li><li><code>A2</code>: 16.54in x 23.4in</li><li><code>A3</code>: 11.7in x 16.54in</li><li><code>A4</code>: 8.27in x 11.7in</li><li><code>A5</code>: 5.83in x 8.27in</li><li><code>A6</code>: 4.13in x 5.83in</li></ul><div class="hint-container note"><p class="hint-container-title">注</p><p>[<code>option: headerTemplate</code>] and [<code>option: footerTemplate</code>] markup have the following limitations: &gt; 1. Script tags inside<br> templates are not evaluated. &gt; 2. Page styles are not visible inside templates.</p></div><h3 id="option-page-pdf-path" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-path" aria-hidden="true">#</a> option: Page.pdf.path</h3><ul><li>since: v1.8</li></ul><ul><li><code>path</code> &lt;[path]&gt;</li></ul><p>The file path to save the PDF to. If [<code>option: path</code>] is a relative path, then it is resolved relative to the current<br> working directory. If no path is provided, the PDF won&#39;t be saved to the disk.</p><h3 id="option-page-pdf-scale" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-scale" aria-hidden="true">#</a> option: Page.pdf.scale</h3><ul><li>since: v1.8</li></ul><ul><li><code>scale</code> &lt;[float]&gt;</li></ul><p>Scale of the webpage rendering. Defaults to <code>1</code>. Scale amount must be between 0.1 and 2.</p><h3 id="option-page-pdf-displayheaderfooter" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-displayheaderfooter" aria-hidden="true">#</a> option: Page.pdf.displayHeaderFooter</h3><ul><li>since: v1.8</li></ul><ul><li><code>displayHeaderFooter</code> &lt;[boolean]&gt;</li></ul><p>Display header and footer. Defaults to <code>false</code>.</p><h3 id="option-page-pdf-headertemplate" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-headertemplate" aria-hidden="true">#</a> option: Page.pdf.headerTemplate</h3><ul><li>since: v1.8</li></ul><ul><li><code>headerTemplate</code> &lt;[string]&gt;</li></ul><p>HTML template for the print header. Should be valid HTML markup with following classes used to inject printing values<br> into them:</p><ul><li><code>&#39;date&#39;</code> formatted print date</li><li><code>&#39;title&#39;</code> document title</li><li><code>&#39;url&#39;</code> document location</li><li><code>&#39;pageNumber&#39;</code> current page number</li><li><code>&#39;totalPages&#39;</code> total pages in the document</li></ul><h3 id="option-page-pdf-footertemplate" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-footertemplate" aria-hidden="true">#</a> option: Page.pdf.footerTemplate</h3><ul><li>since: v1.8</li></ul><ul><li><code>footerTemplate</code> &lt;[string]&gt;</li></ul><p>HTML template for the print footer. Should use the same format as the [<code>option: headerTemplate</code>].</p><h3 id="option-page-pdf-printbackground" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-printbackground" aria-hidden="true">#</a> option: Page.pdf.printBackground</h3><ul><li>since: v1.8</li></ul><ul><li><code>printBackground</code> &lt;[boolean]&gt;</li></ul><p>Print background graphics. Defaults to <code>false</code>.</p><h3 id="option-page-pdf-landscape" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-landscape" aria-hidden="true">#</a> option: Page.pdf.landscape</h3><ul><li>since: v1.8</li></ul><ul><li><code>landscape</code> &lt;[boolean]&gt;</li></ul><p>Paper orientation. Defaults to <code>false</code>.</p><h3 id="option-page-pdf-pageranges" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-pageranges" aria-hidden="true">#</a> option: Page.pdf.pageRanges</h3><ul><li>since: v1.8</li></ul><ul><li><code>pageRanges</code> &lt;[string]&gt;</li></ul><p>Paper ranges to print, e.g., &#39;1-5, 8, 11-13&#39;. Defaults to the empty string, which means print all pages.</p><h3 id="option-page-pdf-format" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-format" aria-hidden="true">#</a> option: Page.pdf.format</h3><ul><li>since: v1.8</li></ul><ul><li><code>format</code> &lt;[string]&gt;</li></ul><p>Paper format. If set, takes priority over [<code>option: width</code>] or [<code>option: height</code>] options. Defaults to &#39;Letter&#39;.</p><h3 id="option-page-pdf-width" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-width" aria-hidden="true">#</a> option: Page.pdf.width</h3><ul><li>since: v1.8</li><li>langs: js, python</li></ul><ul><li><code>width</code> &lt;[string]|[float]&gt;</li></ul><p>Paper width, accepts values labeled with units.</p><h3 id="option-page-pdf-width-1" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-width-1" aria-hidden="true">#</a> option: Page.pdf.width</h3><ul><li>since: v1.8</li><li>langs: csharp, java</li></ul><ul><li><code>width</code> &lt;[string]&gt;</li></ul><p>Paper width, accepts values labeled with units.</p><h3 id="option-page-pdf-height" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-height" aria-hidden="true">#</a> option: Page.pdf.height</h3><ul><li>since: v1.8</li><li>langs: js, python</li></ul><ul><li><code>height</code> &lt;[string]|[float]&gt;</li></ul><p>Paper height, accepts values labeled with units.</p><h3 id="option-page-pdf-height-1" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-height-1" aria-hidden="true">#</a> option: Page.pdf.height</h3><ul><li>since: v1.8</li><li>langs: csharp, java</li></ul><ul><li><code>height</code> &lt;[string]&gt;</li></ul><p>Paper height, accepts values labeled with units.</p><h3 id="option-page-pdf-margin" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-margin" aria-hidden="true">#</a> option: Page.pdf.margin</h3><ul><li>since: v1.8</li><li>langs: js, python</li></ul><ul><li><code>margin</code> &lt;[Object]&gt; <ul><li><code>top</code> ?&lt;[string]|[float]&gt; Top margin, accepts values labeled with units. Defaults to <code>0</code>.</li><li><code>right</code> ?&lt;[string]|[float]&gt; Right margin, accepts values labeled with units. Defaults to <code>0</code>.</li><li><code>bottom</code> ?&lt;[string]|[float]&gt; Bottom margin, accepts values labeled with units. Defaults to <code>0</code>.</li><li><code>left</code> ?&lt;[string]|[float]&gt; Left margin, accepts values labeled with units. Defaults to <code>0</code>.</li></ul></li></ul><p>Paper margins, defaults to none.</p><h3 id="option-page-pdf-margin-1" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-margin-1" aria-hidden="true">#</a> option: Page.pdf.margin</h3><ul><li>since: v1.8</li><li>langs: csharp, java</li></ul><ul><li><code>margin</code> &lt;[Object]&gt; <ul><li><code>top</code> ?&lt;[string]&gt; Top margin, accepts values labeled with units. Defaults to <code>0</code>.</li><li><code>right</code> ?&lt;[string]&gt; Right margin, accepts values labeled with units. Defaults to <code>0</code>.</li><li><code>bottom</code> ?&lt;[string]&gt; Bottom margin, accepts values labeled with units. Defaults to <code>0</code>.</li><li><code>left</code> ?&lt;[string]&gt; Left margin, accepts values labeled with units. Defaults to <code>0</code>.</li></ul></li></ul><p>Paper margins, defaults to none.</p><h3 id="option-page-pdf-prefercsspagesize" tabindex="-1"><a class="header-anchor" href="#option-page-pdf-prefercsspagesize" aria-hidden="true">#</a> option: Page.pdf.preferCSSPageSize</h3><ul><li>since: v1.8</li></ul><ul><li><code>preferCSSPageSize</code> &lt;[boolean]&gt;</li></ul><p>Give any CSS <code>@page</code> size declared in the page priority over what is declared in [<code>option: width</code>] and<br> [<code>option: height</code>] or [<code>option: format</code>] options. Defaults to <code>false</code>, which will scale the content to fit the paper<br> size.</p><h2 id="async-method-page-press" tabindex="-1"><a class="header-anchor" href="#async-method-page-press" aria-hidden="true">#</a> async method: Page.press</h2>`,80),kt=n("li",null,"since: v1.8",-1),ht=n("code",null,"method: Locator.press",-1),gt=n("p",null,[a("Focuses the element, and then uses ["),n("code",null,"method: Keyboard.down"),a("] and ["),n("code",null,"method: Keyboard.up"),a("].")],-1),vt=n("code",null,"param: key",-1),mt=n("br",null,null,-1),bt={href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key",target:"_blank",rel:"noopener noreferrer"},ft=n("br",null,null,-1),wt=n("code",null,"param: key",-1),yt=n("br",null,null,-1),qt={href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values",target:"_blank",rel:"noopener noreferrer"},xt=t(`<p><code>F1</code> - <code>F12</code>, <code>Digit0</code>- <code>Digit9</code>, <code>KeyA</code>- <code>KeyZ</code>, <code>Backquote</code>, <code>Minus</code>, <code>Equal</code>, <code>Backslash</code>, <code>Backspace</code>, <code>Tab</code>,<br><code>Delete</code>, <code>Escape</code>, <code>ArrowDown</code>, <code>End</code>, <code>Enter</code>, <code>Home</code>, <code>Insert</code>, <code>PageDown</code>, <code>PageUp</code>, <code>ArrowRight</code>, <code>ArrowUp</code>, etc.</p><p>Following modification shortcuts are also supported: <code>Shift</code>, <code>Control</code>, <code>Alt</code>, <code>Meta</code>, <code>ShiftLeft</code>.</p><p>Holding down <code>Shift</code> will type the text that corresponds to the [<code>param: key</code>] in the upper case.</p><p>If [<code>param: key</code>] is a single character, it is case-sensitive, so the values <code>a</code> and <code>A</code> will generate different<br> respective texts.</p><p>Shortcuts such as <code>key: &quot;Control+o&quot;</code> or <code>key: &quot;Control+Shift+T&quot;</code> are supported as well. When specified with the<br> modifier, modifier is pressed and being held while the subsequent key is being pressed.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://keycode.info&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">press</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;A.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">press</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ArrowLeft&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;ArrowLeft.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">press</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Shift+O&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;O.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Page</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://keycode.info&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">press</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Page<span class="token punctuation">.</span>ScreenshotOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;A.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">press</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ArrowLeft&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Page<span class="token punctuation">.</span>ScreenshotOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;ArrowLeft.png&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">press</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Shift+O&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Page<span class="token punctuation">.</span>ScreenshotOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;O.png&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://keycode.info&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;a.png&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ArrowLeft&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;arrow_left.png&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Shift+O&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;o.png&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://keycode.info&quot;</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;a.png&quot;</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ArrowLeft&quot;</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;arrow_left.png&quot;</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>press<span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Shift+O&quot;</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>screenshot<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;o.png&quot;</span><span class="token punctuation">)</span>
browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://keycode.info&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">PressAsync</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ScreenshotAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PageScreenshotOptions</span> <span class="token punctuation">{</span> Path <span class="token operator">=</span> <span class="token string">&quot;A.png&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">PressAsync</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ArrowLeft&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ScreenshotAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PageScreenshotOptions</span> <span class="token punctuation">{</span> Path <span class="token operator">=</span> <span class="token string">&quot;ArrowLeft.png&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">PressAsync</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Shift+O&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ScreenshotAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PageScreenshotOptions</span> <span class="token punctuation">{</span> Path <span class="token operator">=</span> <span class="token string">&quot;O.png&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-press-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-press-selector-input-selector" aria-hidden="true">#</a> param: Page.press.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-press-key" tabindex="-1"><a class="header-anchor" href="#param-page-press-key" aria-hidden="true">#</a> param: Page.press.key</h3><ul><li>since: v1.8</li></ul><ul><li><code>key</code> &lt;[string]&gt;</li></ul><p>Name of the key to press or a character to generate, such as <code>ArrowLeft</code> or <code>a</code>.</p><h3 id="option-page-press-delay" tabindex="-1"><a class="header-anchor" href="#option-page-press-delay" aria-hidden="true">#</a> option: Page.press.delay</h3><ul><li>since: v1.8</li></ul><ul><li><code>delay</code> &lt;[float]&gt;</li></ul><p>Time to wait between <code>keydown</code> and <code>keyup</code> in milliseconds. Defaults to 0.</p><h3 id="option-page-press-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-press-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.press.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-press-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-press-strict-input-strict" aria-hidden="true">#</a> option: Page.press.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-press-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-press-timeout-input-timeout" aria-hidden="true">#</a> option: Page.press.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-queryselector" tabindex="-1"><a class="header-anchor" href="#async-method-page-queryselector" aria-hidden="true">#</a> async method: Page.querySelector</h2>`,28),_t=n("li",null,"since: v1.9",-1),Pt=n("code",null,"method: Page.locator",-1),jt=n("li",null,[a("langs: "),n("ul",null,[n("li",null,"alias-python: query_selector"),n("li",null,"alias-js: $")])],-1),St=t('<ul><li>returns: &lt;[null]|[ElementHandle]&gt;</li></ul><p>The method finds an element matching the specified selector within the page. If no elements match the selector, the<br> return value resolves to <code>null</code>. To wait for an element on the page, use [<code>method: Locator.waitFor</code>].</p><h3 id="param-page-queryselector-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-page-queryselector-selector-query-selector" aria-hidden="true">#</a> param: Page.querySelector.selector = %%-query-selector-%%</h3><ul><li>since: v1.9</li></ul><h3 id="option-page-queryselector-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-queryselector-strict-input-strict" aria-hidden="true">#</a> option: Page.querySelector.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h2 id="async-method-page-queryselectorall" tabindex="-1"><a class="header-anchor" href="#async-method-page-queryselectorall" aria-hidden="true">#</a> async method: Page.querySelectorAll</h2>',7),At=n("li",null,"since: v1.9",-1),Rt=n("code",null,"method: Page.locator",-1),Tt=n("li",null,[a("langs: "),n("ul",null,[n("li",null,"alias-python: query_selector_all"),n("li",null,"alias-js: $$")])],-1),Ft=t('<ul><li>returns: &lt;[Array]&lt;[ElementHandle]&gt;&gt;</li></ul><p>The method finds all elements matching the specified selector within the page. If no elements match the selector, the<br> return value resolves to <code>[]</code>.</p><h3 id="param-page-queryselectorall-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-page-queryselectorall-selector-query-selector" aria-hidden="true">#</a> param: Page.querySelectorAll.selector = %%-query-selector-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-page-reload" tabindex="-1"><a class="header-anchor" href="#async-method-page-reload" aria-hidden="true">#</a> async method: Page.reload</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Response]&gt;</li></ul><p>This method reloads the current page, in the same way as if the user had triggered a browser refresh.<br> Returns the main resource response. In case of multiple redirects, the navigation will resolve with the response of the<br> last redirect.</p><h3 id="option-page-reload-waituntil-navigation-wait-until" tabindex="-1"><a class="header-anchor" href="#option-page-reload-waituntil-navigation-wait-until" aria-hidden="true">#</a> option: Page.reload.waitUntil = %%-navigation-wait-until-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-reload-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-reload-timeout-navigation-timeout" aria-hidden="true">#</a> option: Page.reload.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="property-page-request" tabindex="-1"><a class="header-anchor" href="#property-page-request" aria-hidden="true">#</a> property: Page.request</h2><ul><li>since: v1.16</li><li>langs: <ul><li>alias-csharp: APIRequest</li></ul></li></ul><ul><li>type: &lt;[APIRequestContext]&gt;</li></ul><p>API testing helper associated with this page. This method returns the same instance as<br> [<code>property: BrowserContext.request</code>] on the page&#39;s context. See [<code>property: BrowserContext.request</code>] for more details.</p><h2 id="async-method-page-route" tabindex="-1"><a class="header-anchor" href="#async-method-page-route" aria-hidden="true">#</a> async method: Page.route</h2><ul><li>since: v1.8</li></ul><p>Routing provides the capability to modify network requests that are made by a page.</p><p>Once routing is enabled, every request matching the url pattern will stall unless it&#39;s continued, fulfilled or aborted.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>The handler will only be called for the first url if the response is a redirect.</p></div>',21),Ct={class:"hint-container note"},Lt=n("p",{class:"hint-container-title"},"注",-1),Et=n("code",null,"method: Page.route",-1),Wt={href:"https://github.com/microsoft/playwright/issues/1090",target:"_blank",rel:"noopener noreferrer"},Ut=n("code",null,"option: Browser.newContext.serviceWorkers",-1),Mt=n("code",null,"'block'",-1),Ht=t(`<p><strong>Usage</strong></p><p>An example of a naive handler that aborts all image requests:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**/*.{png,jpg,jpeg}&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Page</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;**/*.{png,jpg,jpeg}&quot;</span><span class="token punctuation">,</span> route <span class="token operator">-&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*.{png,jpg,jpeg}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*.{png,jpg,jpeg}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RouteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;**/*.{png,jpg,jpeg}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> r <span class="token operator">=&gt;</span> <span class="token keyword">await</span> r<span class="token punctuation">.</span><span class="token function">AbortAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.microsoft.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>or the same snippet using a regex pattern instead:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\.png$)|(\\.jpg$)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Page</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;(\\\\.png$)|(\\\\.jpg$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>route <span class="token operator">-&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>route<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;(\\.png$)|(\\.jpg$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>route<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;(\\.png$)|(\\.jpg$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RouteAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex</span><span class="token punctuation">(</span><span class="token string">&quot;(\\\\.png$)|(\\\\.jpg$)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">async</span> r <span class="token operator">=&gt;</span> <span class="token keyword">await</span> r<span class="token punctuation">.</span><span class="token function">AbortAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.microsoft.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It is possible to examine the request to decide the route action. For example, mocking all requests that contain some post data, and leaving all other requests as is:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;/api/**&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>route<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">postData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;my-string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    route<span class="token punctuation">.</span><span class="token function">fulfill</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&#39;mocked-data&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span>
    route<span class="token punctuation">.</span><span class="token function">continue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;/api/**&quot;</span><span class="token punctuation">,</span> route <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>route<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">postData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;my-string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    route<span class="token punctuation">.</span><span class="token function">fulfill</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Route<span class="token punctuation">.</span>FulfillOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span><span class="token string">&quot;mocked-data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span>
    route<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">handle_route</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;my-string&quot;</span> <span class="token keyword">in</span> route<span class="token punctuation">.</span>request<span class="token punctuation">.</span>post_data<span class="token punctuation">)</span>
    route<span class="token punctuation">.</span>fulfill<span class="token punctuation">(</span>body<span class="token operator">=</span><span class="token string">&quot;mocked-data&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">else</span>
    route<span class="token punctuation">.</span>continue_<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;/api/**&quot;</span><span class="token punctuation">,</span> handle_route<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">handle_route</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;my-string&quot;</span> <span class="token keyword">in</span> route<span class="token punctuation">.</span>request<span class="token punctuation">.</span>post_data<span class="token punctuation">)</span>
    route<span class="token punctuation">.</span>fulfill<span class="token punctuation">(</span>body<span class="token operator">=</span><span class="token string">&quot;mocked-data&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">else</span>
    route<span class="token punctuation">.</span>continue_<span class="token punctuation">(</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;/api/**&quot;</span><span class="token punctuation">,</span> handle_route<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RouteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;/api/**&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> r <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>PostData<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;my-string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">await</span> r<span class="token punctuation">.</span><span class="token function">FulfillAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">RouteFulfillOptions</span> <span class="token punctuation">{</span> Body <span class="token operator">=</span> <span class="token string">&quot;mocked-data&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span>
      <span class="token keyword">await</span> r<span class="token punctuation">.</span><span class="token function">ContinueAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Page routes take precedence over browser context routes (set up with [<code>method: BrowserContext.route</code>]) when request<br> matches both handlers.</p><p>To remove a route with its handler you can use [<code>method: Page.unroute</code>].</p><div class="hint-container note"><p class="hint-container-title">注</p><p>Enabling routing disables http cache.</p></div><h3 id="param-page-route-url" tabindex="-1"><a class="header-anchor" href="#param-page-route-url" aria-hidden="true">#</a> param: Page.route.url</h3><ul><li>since: v1.8</li></ul><ul><li><code>url</code> &lt;[string]|[RegExp]|[function]([URL]):[boolean]&gt;</li></ul>`,25),It=n("br",null,null,-1),Dt=n("code",null,"option: baseURL",-1),Ot=n("br",null,null,-1),Bt={href:"https://developer.mozilla.org/en-US/docs/Web/API/URL/URL",target:"_blank",rel:"noopener noreferrer"},zt=n("code",null,"new URL()",-1),Nt=t('<h3 id="param-page-route-handler" tabindex="-1"><a class="header-anchor" href="#param-page-route-handler" aria-hidden="true">#</a> param: Page.route.handler</h3><ul><li>since: v1.8</li><li>langs: js, python</li></ul><ul><li><code>handler</code> &lt;[function]([Route], [Request]): [Promise&lt; any &gt;|any]&gt;</li></ul><p>handler function to route the request.</p><h3 id="param-page-route-handler-1" tabindex="-1"><a class="header-anchor" href="#param-page-route-handler-1" aria-hidden="true">#</a> param: Page.route.handler</h3><ul><li>since: v1.8</li><li>langs: csharp, java</li></ul><ul><li><code>handler</code> &lt;[function]([Route])&gt;</li></ul><p>handler function to route the request.</p><h3 id="option-page-route-times" tabindex="-1"><a class="header-anchor" href="#option-page-route-times" aria-hidden="true">#</a> option: Page.route.times</h3><ul><li>since: v1.15</li></ul><ul><li><code>times</code> &lt;[int]&gt;</li></ul><p>How often a route should be used. By default it will be used every time.</p><h2 id="async-method-page-routefromhar" tabindex="-1"><a class="header-anchor" href="#async-method-page-routefromhar" aria-hidden="true">#</a> async method: Page.routeFromHAR</h2><ul><li>since: v1.23</li></ul>',14),Vt={href:"https://github.com/microsoft/playwright/issues/1090",target:"_blank",rel:"noopener noreferrer"},Gt=n("code",null,"option: Browser.newContext.serviceWorkers",-1),Jt=n("code",null,"'block'",-1),$t=n("h3",{id:"param-page-routefromhar-har",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#param-page-routefromhar-har","aria-hidden":"true"},"#"),a(" param: Page.routeFromHAR.har")],-1),Kt=n("ul",null,[n("li",null,"since: v1.23")],-1),Yt=n("ul",null,[n("li",null,[n("code",null,"har"),a(" <[path]>")])],-1),Xt={href:"http://www.softwareishard.com/blog/har-12-spec",target:"_blank",rel:"noopener noreferrer"},Zt=n("code",null,"path",-1),Qt=t('<h3 id="option-page-routefromhar-notfound" tabindex="-1"><a class="header-anchor" href="#option-page-routefromhar-notfound" aria-hidden="true">#</a> option: Page.routeFromHAR.notFound</h3><ul><li>since: v1.23</li></ul><ul><li><code>notFound</code> ?&lt;[HarNotFound]&lt;&quot;abort&quot;|&quot;fallback&quot;&gt;&gt;</li></ul><ul><li>If set to &#39;abort&#39; any request not found in the HAR file will be aborted.</li><li>If set to &#39;fallback&#39; missing requests will be sent to the network.</li></ul><p>Defaults to abort.</p><h3 id="option-page-routefromhar-update" tabindex="-1"><a class="header-anchor" href="#option-page-routefromhar-update" aria-hidden="true">#</a> option: Page.routeFromHAR.update</h3><ul><li>since: v1.23</li></ul><ul><li><code>update</code> ?<code>&lt;boolean&gt;</code></li></ul><p>If specified, updates the given HAR with the actual network information instead of serving from file. The file is written to disk when [<code>method: BrowserContext.close</code>] is called.</p><h3 id="option-page-routefromhar-url" tabindex="-1"><a class="header-anchor" href="#option-page-routefromhar-url" aria-hidden="true">#</a> option: Page.routeFromHAR.url</h3><ul><li>since: v1.23</li></ul><ul><li><code>url</code> &lt;[string]|[RegExp]&gt;</li></ul><p>A glob pattern, regular expression or predicate to match the request URL. Only requests with URL matching the pattern will be served from the HAR file. If not specified, all requests are served from the HAR file.</p><h2 id="async-method-page-screenshot" tabindex="-1"><a class="header-anchor" href="#async-method-page-screenshot" aria-hidden="true">#</a> async method: Page.screenshot</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Buffer]&gt;</li></ul><p>Returns the buffer with the captured screenshot.</p><h3 id="option-page-screenshot-inline-screenshot-options-common-list-v1-8" tabindex="-1"><a class="header-anchor" href="#option-page-screenshot-inline-screenshot-options-common-list-v1-8" aria-hidden="true">#</a> option: Page.screenshot.-inline- = %%-screenshot-options-common-list-v1.8-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-screenshot-fullpage-screenshot-option-full-page" tabindex="-1"><a class="header-anchor" href="#option-page-screenshot-fullpage-screenshot-option-full-page" aria-hidden="true">#</a> option: Page.screenshot.fullPage = %%-screenshot-option-full-page-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-screenshot-clip-screenshot-option-clip" tabindex="-1"><a class="header-anchor" href="#option-page-screenshot-clip-screenshot-option-clip" aria-hidden="true">#</a> option: Page.screenshot.clip = %%-screenshot-option-clip-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-selectoption" tabindex="-1"><a class="header-anchor" href="#async-method-page-selectoption" aria-hidden="true">#</a> async method: Page.selectOption</h2>',24),ne=n("li",null,"since: v1.8",-1),ae=n("code",null,"method: Locator.selectOption",-1),se=n("ul",null,[n("li",null,"returns: <[Array]<[string]>>")],-1),te=n("code",null,"param: selector",-1),ee=n("code",null,"<select>",-1),oe=n("code",null,"<select>",-1),pe=n("code",null,"<label>",-1),ie={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},ce=t(`<p>Returns the array of option values that have been successfully selected.</p><p>Triggers a <code>change</code> and <code>input</code> event once all the provided options have been selected.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// single selection matching the value</span>
page<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&#39;select#colors&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// single selection matching the label</span>
page<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&#39;select#colors&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Blue&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// multiple selection</span>
page<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&#39;select#colors&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// single selection matching the value</span>
page<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// single selection matching both the value and the label</span>
page<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SelectOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLabel</span><span class="token punctuation">(</span><span class="token string">&quot;Blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// multiple selection</span>
page<span class="token punctuation">.</span><span class="token function">selectOption</span><span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># single selection matching the value</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># single selection matching the label</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># multiple selection</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> value<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># single selection matching the value</span>
page<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># single selection matching both the label</span>
page<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># multiple selection</span>
page<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> value<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// single selection matching the value</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SelectOptionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;blue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// single selection matching both the value and the label</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SelectOptionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SelectOptionValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Label <span class="token operator">=</span> <span class="token string">&quot;blue&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// multiple</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SelectOptionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;select#colors&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-selectoption-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-selectoption-selector-input-selector" aria-hidden="true">#</a> param: Page.selectOption.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-selectoption-values-select-options-values" tabindex="-1"><a class="header-anchor" href="#param-page-selectoption-values-select-options-values" aria-hidden="true">#</a> param: Page.selectOption.values = %%-select-options-values-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-selectoption-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-page-selectoption-force-input-force" aria-hidden="true">#</a> option: Page.selectOption.force = %%-input-force-%%</h3><ul><li>since: v1.13</li></ul><h3 id="option-page-selectoption-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-selectoption-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.selectOption.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-selectoption-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-selectoption-strict-input-strict" aria-hidden="true">#</a> option: Page.selectOption.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-selectoption-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-selectoption-timeout-input-timeout" aria-hidden="true">#</a> option: Page.selectOption.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-selectoption-element-python-select-options-element" tabindex="-1"><a class="header-anchor" href="#param-page-selectoption-element-python-select-options-element" aria-hidden="true">#</a> param: Page.selectOption.element = %%-python-select-options-element-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-selectoption-index-python-select-options-index" tabindex="-1"><a class="header-anchor" href="#param-page-selectoption-index-python-select-options-index" aria-hidden="true">#</a> param: Page.selectOption.index = %%-python-select-options-index-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-selectoption-value-python-select-options-value" tabindex="-1"><a class="header-anchor" href="#param-page-selectoption-value-python-select-options-value" aria-hidden="true">#</a> param: Page.selectOption.value = %%-python-select-options-value-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-selectoption-label-python-select-options-label" tabindex="-1"><a class="header-anchor" href="#param-page-selectoption-label-python-select-options-label" aria-hidden="true">#</a> param: Page.selectOption.label = %%-python-select-options-label-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-setchecked" tabindex="-1"><a class="header-anchor" href="#async-method-page-setchecked" aria-hidden="true">#</a> async method: Page.setChecked</h2>`,29),le=n("li",null,"since: v1.15",-1),ue=n("code",null,"method: Locator.setChecked",-1),re=n("p",null,[a("This method checks or unchecks an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),de=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),ke=n("li",null,"Ensure that matched element is a checkbox or a radio input. If not, this method throws.",-1),he=n("li",null,"If the element already has the right checked state, this method returns immediately.",-1),ge=n("code",null,"option: force",-1),ve=n("br",null,null,-1),me=n("li",null,"Scroll the element into view if needed.",-1),be=n("li",null,[a("Use ["),n("code",null,"property: Page.mouse"),a("] to click in the center of the element.")],-1),fe=n("li",null,[a("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),a("] option is set.")],-1),we=n("li",null,"Ensure that the element is now checked or unchecked. If not, this method throws.",-1),ye=t('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="param-page-setchecked-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-setchecked-selector-input-selector" aria-hidden="true">#</a> param: Page.setChecked.selector = %%-input-selector-%%</h3><ul><li>since: v1.15</li></ul><h3 id="param-page-setchecked-checked-input-checked" tabindex="-1"><a class="header-anchor" href="#param-page-setchecked-checked-input-checked" aria-hidden="true">#</a> param: Page.setChecked.checked = %%-input-checked-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-page-setchecked-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-page-setchecked-force-input-force" aria-hidden="true">#</a> option: Page.setChecked.force = %%-input-force-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-page-setchecked-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-setchecked-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.setChecked.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-page-setchecked-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-page-setchecked-position-input-position" aria-hidden="true">#</a> option: Page.setChecked.position = %%-input-position-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-page-setchecked-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-setchecked-strict-input-strict" aria-hidden="true">#</a> option: Page.setChecked.strict = %%-input-strict-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-page-setchecked-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-setchecked-timeout-input-timeout" aria-hidden="true">#</a> option: Page.setChecked.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.15</li></ul><h3 id="option-page-setchecked-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-page-setchecked-trial-input-trial" aria-hidden="true">#</a> option: Page.setChecked.trial = %%-input-trial-%%</h3><ul><li>since: v1.15</li></ul><h2 id="async-method-page-setcontent" tabindex="-1"><a class="header-anchor" href="#async-method-page-setcontent" aria-hidden="true">#</a> async method: Page.setContent</h2><ul><li>since: v1.8</li></ul><h3 id="param-page-setcontent-html" tabindex="-1"><a class="header-anchor" href="#param-page-setcontent-html" aria-hidden="true">#</a> param: Page.setContent.html</h3><ul><li>since: v1.8</li></ul><ul><li><code>html</code> &lt;[string]&gt;</li></ul><p>HTML markup to assign to the page.</p><h3 id="option-page-setcontent-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-setcontent-timeout-navigation-timeout" aria-hidden="true">#</a> option: Page.setContent.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-setcontent-waituntil-navigation-wait-until" tabindex="-1"><a class="header-anchor" href="#option-page-setcontent-waituntil-navigation-wait-until" aria-hidden="true">#</a> option: Page.setContent.waitUntil = %%-navigation-wait-until-%%</h3><ul><li>since: v1.8</li></ul><h2 id="method-page-setdefaultnavigationtimeout" tabindex="-1"><a class="header-anchor" href="#method-page-setdefaultnavigationtimeout" aria-hidden="true">#</a> method: Page.setDefaultNavigationTimeout</h2><ul><li>since: v1.8</li></ul><p>This setting will change the default maximum navigation time for the following methods and related shortcuts:</p><ul><li>[<code>method: Page.goBack</code>]</li><li>[<code>method: Page.goForward</code>]</li><li>[<code>method: Page.goto</code>]</li><li>[<code>method: Page.reload</code>]</li><li>[<code>method: Page.setContent</code>]</li><li>[<code>method: Page.waitForNavigation</code>]</li><li>[<code>method: Page.waitForURL</code>]</li></ul><div class="hint-container note"><p class="hint-container-title">注</p><p>[<code>method: Page.setDefaultNavigationTimeout</code>] takes priority over [<code>method: Page.setDefaultTimeout</code>],<br> [<code>method: BrowserContext.setDefaultTimeout</code>] and [<code>method: BrowserContext.setDefaultNavigationTimeout</code>].</p></div><h3 id="param-page-setdefaultnavigationtimeout-timeout" tabindex="-1"><a class="header-anchor" href="#param-page-setdefaultnavigationtimeout-timeout" aria-hidden="true">#</a> param: Page.setDefaultNavigationTimeout.timeout</h3><ul><li>since: v1.8</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>Maximum navigation time in milliseconds</p><h2 id="method-page-setdefaulttimeout" tabindex="-1"><a class="header-anchor" href="#method-page-setdefaulttimeout" aria-hidden="true">#</a> method: Page.setDefaultTimeout</h2><ul><li>since: v1.8</li></ul><p>This setting will change the default maximum time for all the methods accepting [<code>param: timeout</code>] option.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>[<code>method: Page.setDefaultNavigationTimeout</code>] takes priority over [<code>method: Page.setDefaultTimeout</code>].</p></div><h3 id="param-page-setdefaulttimeout-timeout" tabindex="-1"><a class="header-anchor" href="#param-page-setdefaulttimeout-timeout" aria-hidden="true">#</a> param: Page.setDefaultTimeout.timeout</h3><ul><li>since: v1.8</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>Maximum time in milliseconds</p><h2 id="async-method-page-setextrahttpheaders" tabindex="-1"><a class="header-anchor" href="#async-method-page-setextrahttpheaders" aria-hidden="true">#</a> async method: Page.setExtraHTTPHeaders</h2><ul><li>since: v1.8</li></ul><p>The extra HTTP headers will be sent with every request the page initiates.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>[<code>method: Page.setExtraHTTPHeaders</code>] does not guarantee the order of headers in the outgoing requests.</p></div><h3 id="param-page-setextrahttpheaders-headers" tabindex="-1"><a class="header-anchor" href="#param-page-setextrahttpheaders-headers" aria-hidden="true">#</a> param: Page.setExtraHTTPHeaders.headers</h3><ul><li>since: v1.8</li></ul><ul><li><code>headers</code> &lt;[Object]&lt;[string], [string]&gt;&gt;</li></ul><p>An object containing additional HTTP headers to be sent with every request. All header values must be strings.</p><h2 id="async-method-page-setinputfiles" tabindex="-1"><a class="header-anchor" href="#async-method-page-setinputfiles" aria-hidden="true">#</a> async method: Page.setInputFiles</h2>',53),qe=n("li",null,"since: v1.8",-1),xe=n("code",null,"method: Locator.setInputFiles",-1),_e=n("p",null,[a("Sets the value of the file input to these file paths or files. If some of the "),n("code",null,"filePaths"),a(" are relative paths, then they"),n("br"),a(" are resolved relative to the current working directory. For empty array, clears the selected files.")],-1),Pe=n("code",null,"param: selector",-1),je=n("br",null,null,-1),Se={href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input",target:"_blank",rel:"noopener noreferrer"},Ae=n("code",null,"<label>",-1),Re={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control",target:"_blank",rel:"noopener noreferrer"},Te=t(`<h3 id="param-page-setinputfiles-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-setinputfiles-selector-input-selector" aria-hidden="true">#</a> param: Page.setInputFiles.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-setinputfiles-files-input-files" tabindex="-1"><a class="header-anchor" href="#param-page-setinputfiles-files-input-files" aria-hidden="true">#</a> param: Page.setInputFiles.files = %%-input-files-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-setinputfiles-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-setinputfiles-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.setInputFiles.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-setinputfiles-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-setinputfiles-strict-input-strict" aria-hidden="true">#</a> option: Page.setInputFiles.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-setinputfiles-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-setinputfiles-timeout-input-timeout" aria-hidden="true">#</a> option: Page.setInputFiles.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-setviewportsize" tabindex="-1"><a class="header-anchor" href="#async-method-page-setviewportsize" aria-hidden="true">#</a> async method: Page.setViewportSize</h2><ul><li>since: v1.8</li></ul><p>In the case of multiple pages in a single browser, each page can have its own viewport size. However,<br> [<code>method: Browser.newContext</code>] allows to set viewport size (and more) for all pages in the context at once.</p><p>[<code>method: Page.setViewportSize</code>] will resize the page. A lot of websites don&#39;t expect phones to change size, so you should set the<br> viewport size before navigating to the page. [<code>method: Page.setViewportSize</code>] will also reset <code>screen</code> size, use [<code>method: Browser.newContext</code>] with <code>screen</code> and <code>viewport</code> parameters if you need better control of these properties.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setViewportSize</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">640</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">480</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Page</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">setViewportSize</span><span class="token punctuation">(</span><span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>set_viewport_size<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">:</span> <span class="token number">640</span><span class="token punctuation">,</span> <span class="token string">&quot;height&quot;</span><span class="token punctuation">:</span> <span class="token number">480</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>set_viewport_size<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">:</span> <span class="token number">640</span><span class="token punctuation">,</span> <span class="token string">&quot;height&quot;</span><span class="token punctuation">:</span> <span class="token number">480</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetViewportSizeAsync</span><span class="token punctuation">(</span><span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.microsoft.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-setviewportsize-viewportsize" tabindex="-1"><a class="header-anchor" href="#param-page-setviewportsize-viewportsize" aria-hidden="true">#</a> param: Page.setViewportSize.viewportSize</h3><ul><li>since: v1.8</li><li>langs: js, python</li></ul><ul><li><code>viewportSize</code> &lt;[Object]&gt; <ul><li><code>width</code> &lt;[int]&gt; page width in pixels.</li><li><code>height</code> &lt;[int]&gt; page height in pixels.</li></ul></li></ul><h3 id="param-page-setviewportsize-width" tabindex="-1"><a class="header-anchor" href="#param-page-setviewportsize-width" aria-hidden="true">#</a> param: Page.setViewportSize.width</h3><ul><li>since: v1.10</li><li>langs: csharp, java</li></ul><ul><li><code>width</code> &lt;[int]&gt; page width in pixels.</li></ul><h3 id="param-page-setviewportsize-height" tabindex="-1"><a class="header-anchor" href="#param-page-setviewportsize-height" aria-hidden="true">#</a> param: Page.setViewportSize.height</h3><ul><li>since: v1.10</li><li>langs: csharp, java</li></ul><ul><li><code>height</code> &lt;[int]&gt; page height in pixels.</li></ul><h2 id="async-method-page-tap" tabindex="-1"><a class="header-anchor" href="#async-method-page-tap" aria-hidden="true">#</a> async method: Page.tap</h2>`,30),Fe=n("li",null,"since: v1.8",-1),Ce=n("code",null,"method: Locator.tap",-1),Le=n("p",null,[a("This method taps an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),Ee=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),We=n("code",null,"option: force",-1),Ue=n("br",null,null,-1),Me=n("li",null,"Scroll the element into view if needed.",-1),He=n("li",null,[a("Use ["),n("code",null,"property: Page.touchscreen"),a("] to tap the center of the element, or the specified ["),n("code",null,"option: position"),a("].")],-1),Ie=n("li",null,[a("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),a("] option is set.")],-1),De=t('<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>[<code>method: Page.tap</code>] the method will throw if [<code>option: hasTouch</code>] option of the browser context is false.</p></div><h3 id="param-page-tap-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-tap-selector-input-selector" aria-hidden="true">#</a> param: Page.tap.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-tap-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-page-tap-force-input-force" aria-hidden="true">#</a> option: Page.tap.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-tap-modifiers-input-modifiers" tabindex="-1"><a class="header-anchor" href="#option-page-tap-modifiers-input-modifiers" aria-hidden="true">#</a> option: Page.tap.modifiers = %%-input-modifiers-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-tap-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-tap-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.tap.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-tap-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-page-tap-position-input-position" aria-hidden="true">#</a> option: Page.tap.position = %%-input-position-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-tap-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-tap-strict-input-strict" aria-hidden="true">#</a> option: Page.tap.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-tap-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-tap-timeout-input-timeout" aria-hidden="true">#</a> option: Page.tap.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-tap-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-page-tap-trial-input-trial" aria-hidden="true">#</a> option: Page.tap.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-page-textcontent" tabindex="-1"><a class="header-anchor" href="#async-method-page-textcontent" aria-hidden="true">#</a> async method: Page.textContent</h2>',19),Oe=n("li",null,"since: v1.8",-1),Be=n("code",null,"method: Locator.textContent",-1),ze=t('<ul><li>returns: &lt;[null]|[string]&gt;</li></ul><p>Returns <code>element.textContent</code>.</p><h3 id="param-page-textcontent-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-textcontent-selector-input-selector" aria-hidden="true">#</a> param: Page.textContent.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-textcontent-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-textcontent-strict-input-strict" aria-hidden="true">#</a> option: Page.textContent.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-textcontent-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-textcontent-timeout-input-timeout" aria-hidden="true">#</a> option: Page.textContent.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-title" tabindex="-1"><a class="header-anchor" href="#async-method-page-title" aria-hidden="true">#</a> async method: Page.title</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Returns the page&#39;s title.</p><h2 id="property-page-touchscreen" tabindex="-1"><a class="header-anchor" href="#property-page-touchscreen" aria-hidden="true">#</a> property: Page.touchscreen</h2><ul><li>since: v1.8</li></ul><ul><li>type: &lt;[Touchscreen]&gt;</li></ul><h2 id="async-method-page-type" tabindex="-1"><a class="header-anchor" href="#async-method-page-type" aria-hidden="true">#</a> async method: Page.type</h2>',16),Ne=n("li",null,"since: v1.8",-1),Ve=n("code",null,"method: Locator.type",-1),Ge=t(`<p>Sends a <code>keydown</code>, <code>keypress</code>/<code>input</code>, and <code>keyup</code> event for each character in the text. <code>page.type</code> can be used to send<br> fine-grained keyboard events. To fill values in form fields, use [<code>method: Page.fill</code>].</p><p>To press a special key, like <code>Control</code> or <code>ArrowDown</code>, use [<code>method: Keyboard.press</code>].</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;#mytextarea&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Types instantly</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;#mytextarea&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Types instantly</span>
page<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Types slower, like a user</span>
page<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Page<span class="token punctuation">.</span>TypeOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setDelay</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span> <span class="token comment"># types instantly</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment"># types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span> <span class="token comment"># types instantly</span>
page<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment"># types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">TypeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// types instantly</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">TypeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;#mytextarea&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Delay <span class="token operator">=</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// types slower, like a user</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-type-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-type-selector-input-selector" aria-hidden="true">#</a> param: Page.type.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-type-text" tabindex="-1"><a class="header-anchor" href="#param-page-type-text" aria-hidden="true">#</a> param: Page.type.text</h3><ul><li>since: v1.8</li></ul><ul><li><code>text</code> &lt;[string]&gt;</li></ul><p>A text to type into a focused element.</p><h3 id="option-page-type-delay" tabindex="-1"><a class="header-anchor" href="#option-page-type-delay" aria-hidden="true">#</a> option: Page.type.delay</h3><ul><li>since: v1.8</li></ul><ul><li><code>delay</code> &lt;[float]&gt;</li></ul><p>Time to wait between key presses in milliseconds. Defaults to 0.</p><h3 id="option-page-type-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-type-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.type.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-type-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-type-strict-input-strict" aria-hidden="true">#</a> option: Page.type.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-type-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-type-timeout-input-timeout" aria-hidden="true">#</a> option: Page.type.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-uncheck" tabindex="-1"><a class="header-anchor" href="#async-method-page-uncheck" aria-hidden="true">#</a> async method: Page.uncheck</h2>`,25),Je=n("li",null,"since: v1.8",-1),$e=n("code",null,"method: Locator.uncheck",-1),Ke=n("p",null,[a("This method unchecks an element matching ["),n("code",null,"param: selector"),a("] by performing the following steps:")],-1),Ye=n("li",null,[a("Find an element matching ["),n("code",null,"param: selector"),a("]. If there is none, wait until a matching element is attached to"),n("br"),a(" the DOM.")],-1),Xe=n("li",null,[a("Ensure that matched element is a checkbox or a radio input. If not, this method throws. If the element is already"),n("br"),a(" unchecked, this method returns immediately.")],-1),Ze=n("code",null,"option: force",-1),Qe=n("br",null,null,-1),no=n("li",null,"Scroll the element into view if needed.",-1),ao=n("li",null,[a("Use ["),n("code",null,"property: Page.mouse"),a("] to click in the center of the element.")],-1),so=n("li",null,[a("Wait for initiated navigations to either succeed or fail, unless ["),n("code",null,"option: noWaitAfter"),a("] option is set.")],-1),to=n("li",null,"Ensure that the element is now unchecked. If not, this method throws.",-1),eo=t(`<p>When all steps combined have not finished during the specified [<code>option: timeout</code>], this method throws a<br> [TimeoutError]. Passing zero timeout disables this.</p><h3 id="param-page-uncheck-selector-input-selector" tabindex="-1"><a class="header-anchor" href="#param-page-uncheck-selector-input-selector" aria-hidden="true">#</a> param: Page.uncheck.selector = %%-input-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-uncheck-force-input-force" tabindex="-1"><a class="header-anchor" href="#option-page-uncheck-force-input-force" aria-hidden="true">#</a> option: Page.uncheck.force = %%-input-force-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-uncheck-nowaitafter-input-no-wait-after" tabindex="-1"><a class="header-anchor" href="#option-page-uncheck-nowaitafter-input-no-wait-after" aria-hidden="true">#</a> option: Page.uncheck.noWaitAfter = %%-input-no-wait-after-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-uncheck-position-input-position" tabindex="-1"><a class="header-anchor" href="#option-page-uncheck-position-input-position" aria-hidden="true">#</a> option: Page.uncheck.position = %%-input-position-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-page-uncheck-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-uncheck-strict-input-strict" aria-hidden="true">#</a> option: Page.uncheck.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-uncheck-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-uncheck-timeout-input-timeout" aria-hidden="true">#</a> option: Page.uncheck.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-uncheck-trial-input-trial" tabindex="-1"><a class="header-anchor" href="#option-page-uncheck-trial-input-trial" aria-hidden="true">#</a> option: Page.uncheck.trial = %%-input-trial-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-page-unroute" tabindex="-1"><a class="header-anchor" href="#async-method-page-unroute" aria-hidden="true">#</a> async method: Page.unroute</h2><ul><li>since: v1.8</li></ul><p>Removes a route created with [<code>method: Page.route</code>]. When [<code>param: handler</code>] is not specified, removes all routes for<br> the [<code>param: url</code>].</p><h3 id="param-page-unroute-url" tabindex="-1"><a class="header-anchor" href="#param-page-unroute-url" aria-hidden="true">#</a> param: Page.unroute.url</h3><ul><li>since: v1.8</li></ul><ul><li><code>url</code> &lt;[string]|[RegExp]|[function]([URL]):[boolean]&gt;</li></ul><p>A glob pattern, regex pattern or predicate receiving [URL] to match while routing.</p><h3 id="param-page-unroute-handler" tabindex="-1"><a class="header-anchor" href="#param-page-unroute-handler" aria-hidden="true">#</a> param: Page.unroute.handler</h3><ul><li>since: v1.8</li><li>langs: js, python</li></ul><ul><li><code>handler</code> ?&lt;[function]([Route], [Request]): [Promise&lt; any &gt;|any]&gt;</li></ul><p>Optional handler function to route the request.</p><h3 id="param-page-unroute-handler-1" tabindex="-1"><a class="header-anchor" href="#param-page-unroute-handler-1" aria-hidden="true">#</a> param: Page.unroute.handler</h3><ul><li>since: v1.8</li><li>langs: csharp, java</li></ul><ul><li><code>handler</code> ?&lt;[function]([Route])&gt;</li></ul><p>Optional handler function to route the request.</p><h2 id="method-page-url" tabindex="-1"><a class="header-anchor" href="#method-page-url" aria-hidden="true">#</a> method: Page.url</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><h2 id="method-page-video" tabindex="-1"><a class="header-anchor" href="#method-page-video" aria-hidden="true">#</a> method: Page.video</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Video]&gt;</li></ul><p>Video object associated with this page.</p><h2 id="method-page-viewportsize" tabindex="-1"><a class="header-anchor" href="#method-page-viewportsize" aria-hidden="true">#</a> method: Page.viewportSize</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Object]&gt; <ul><li><code>width</code> &lt;[int]&gt; page width in pixels.</li><li><code>height</code> &lt;[int]&gt; page height in pixels.</li></ul></li></ul><h2 id="async-method-page-waitforclose" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforclose" aria-hidden="true">#</a> async method: Page.waitForClose</h2><ul><li>since: v1.11</li><li>langs: java</li></ul><ul><li>returns: &lt;[Page]&gt;</li></ul><p>Performs action and waits for the Page to close.</p><h3 id="option-page-waitforclose-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforclose-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: Page.waitForClose.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-waitforclose-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-page-waitforclose-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: Page.waitForClose.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-page-waitforconsolemessage" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforconsolemessage" aria-hidden="true">#</a> async method: Page.waitForConsoleMessage</h2><ul><li>since: v1.9</li><li>langs: java, python, csharp <ul><li>alias-python: expect_console_message</li><li>alias-csharp: RunAndWaitForConsoleMessage</li></ul></li></ul><ul><li>returns: &lt;[ConsoleMessage]&gt;</li></ul><p>Performs action and waits for a [ConsoleMessage] to be logged by in the page. If predicate is provided, it passes<br> [ConsoleMessage] value into the <code>predicate</code> function and waits for <code>predicate(message)</code> to return a truthy value.<br> Will throw an error if the page is closed before the [<code>event: Page.console</code>] event is fired.</p><h2 id="async-method-page-waitforconsolemessage-1" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforconsolemessage-1" aria-hidden="true">#</a> async method: Page.waitForConsoleMessage</h2><ul><li>since: v1.9</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&lt;[ConsoleMessage]&gt;&gt;</li></ul><h3 id="param-page-waitforconsolemessage-action-csharp-wait-for-event-action" tabindex="-1"><a class="header-anchor" href="#param-page-waitforconsolemessage-action-csharp-wait-for-event-action" aria-hidden="true">#</a> param: Page.waitForConsoleMessage.action = %%-csharp-wait-for-event-action-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-page-waitforconsolemessage-predicate" tabindex="-1"><a class="header-anchor" href="#option-page-waitforconsolemessage-predicate" aria-hidden="true">#</a> option: Page.waitForConsoleMessage.predicate</h3><ul><li>since: v1.9</li></ul><ul><li><code>predicate</code> &lt;[function]([ConsoleMessage]):[boolean]&gt;</li></ul><p>Receives the [ConsoleMessage] object and resolves to truthy value when the waiting should resolve.</p><h3 id="option-page-waitforconsolemessage-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforconsolemessage-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: Page.waitForConsoleMessage.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-waitforconsolemessage-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-page-waitforconsolemessage-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: Page.waitForConsoleMessage.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-page-waitfordownload" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitfordownload" aria-hidden="true">#</a> async method: Page.waitForDownload</h2><ul><li>since: v1.9</li><li>langs: java, python, csharp <ul><li>alias-python: expect_download</li><li>alias-csharp: RunAndWaitForDownload</li></ul></li></ul><ul><li>returns: &lt;[Download]&gt;</li></ul><p>Performs action and waits for a new [Download]. If predicate is provided, it passes<br> [Download] value into the <code>predicate</code> function and waits for <code>predicate(download)</code> to return a truthy value.<br> Will throw an error if the page is closed before the download event is fired.</p><h2 id="async-method-page-waitfordownload-1" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitfordownload-1" aria-hidden="true">#</a> async method: Page.waitForDownload</h2><ul><li>since: v1.9</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&lt;[Download]&gt;&gt;</li></ul><h3 id="param-page-waitfordownload-action-csharp-wait-for-event-action" tabindex="-1"><a class="header-anchor" href="#param-page-waitfordownload-action-csharp-wait-for-event-action" aria-hidden="true">#</a> param: Page.waitForDownload.action = %%-csharp-wait-for-event-action-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-page-waitfordownload-predicate" tabindex="-1"><a class="header-anchor" href="#option-page-waitfordownload-predicate" aria-hidden="true">#</a> option: Page.waitForDownload.predicate</h3><ul><li>since: v1.9</li></ul><ul><li><code>predicate</code> &lt;[function]([Download]):[boolean]&gt;</li></ul><p>Receives the [Download] object and resolves to truthy value when the waiting should resolve.</p><h3 id="option-page-waitfordownload-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitfordownload-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: Page.waitForDownload.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-waitfordownload-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-page-waitfordownload-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: Page.waitForDownload.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-page-waitforevent" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforevent" aria-hidden="true">#</a> async method: Page.waitForEvent</h2><ul><li>since: v1.8</li><li>langs: js, python <ul><li>alias-python: expect_event</li></ul></li></ul><ul><li>returns: &lt;[any]&gt;</li></ul><p>Waits for event to fire and passes its value into the predicate function. Returns when the predicate returns truthy<br> value. Will throw an error if the page is closed before the event is fired. Returns the event data value.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Start waiting for download before clicking. Note no await.</span>
<span class="token keyword">const</span> downloadPromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForEvent</span><span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Download file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> download <span class="token operator">=</span> <span class="token keyword">await</span> downloadPromise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_event<span class="token punctuation">(</span><span class="token string">&quot;framenavigated&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> event_info<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>
frame <span class="token operator">=</span> <span class="token keyword">await</span> event_info<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_event<span class="token punctuation">(</span><span class="token string">&quot;framenavigated&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> event_info<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>
frame <span class="token operator">=</span> event_info<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-method-page-waitforevent-1" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforevent-1" aria-hidden="true">#</a> async method: Page.waitForEvent</h2><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&gt;</li></ul><h3 id="param-page-waitforevent-event-wait-for-event-event" tabindex="-1"><a class="header-anchor" href="#param-page-waitforevent-event-wait-for-event-event" aria-hidden="true">#</a> param: Page.waitForEvent.event = %%-wait-for-event-event-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-waitforevent-optionsorpredicate" tabindex="-1"><a class="header-anchor" href="#param-page-waitforevent-optionsorpredicate" aria-hidden="true">#</a> param: Page.waitForEvent.optionsOrPredicate</h3><ul><li>since: v1.8</li><li>langs: js</li></ul><ul><li><code>optionsOrPredicate</code> ?&lt;[function]|[Object]&gt; <ul><li><code>predicate</code> &lt;[function]&gt; receives the event data and resolves to truthy value when the waiting should resolve.</li><li><code>timeout</code> ?&lt;[float]&gt; maximum time to wait for in milliseconds. Defaults to <code>30000</code> (30 seconds). Pass <code>0</code> to<br> disable timeout. The default value can be changed by using the [<code>method: BrowserContext.setDefaultTimeout</code>].</li></ul></li></ul><p>Either a predicate that receives an event or an options object. Optional.</p><h3 id="option-page-waitforevent-predicate-wait-for-event-predicate" tabindex="-1"><a class="header-anchor" href="#option-page-waitforevent-predicate-wait-for-event-predicate" aria-hidden="true">#</a> option: Page.waitForEvent.predicate = %%-wait-for-event-predicate-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-waitforevent-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforevent-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: Page.waitForEvent.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-waitforfilechooser" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforfilechooser" aria-hidden="true">#</a> async method: Page.waitForFileChooser</h2><ul><li>since: v1.9</li><li>langs: java, python, csharp <ul><li>alias-python: expect_file_chooser</li><li>alias-csharp: RunAndWaitForFileChooser</li></ul></li></ul><ul><li>returns: &lt;[FileChooser]&gt;</li></ul><p>Performs action and waits for a new [FileChooser] to be created. If predicate is provided, it passes<br> [FileChooser] value into the <code>predicate</code> function and waits for <code>predicate(fileChooser)</code> to return a truthy value.<br> Will throw an error if the page is closed before the file chooser is opened.</p><h2 id="async-method-page-waitforfilechooser-1" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforfilechooser-1" aria-hidden="true">#</a> async method: Page.waitForFileChooser</h2><ul><li>since: v1.9</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&lt;[FileChooser]&gt;&gt;</li></ul><h3 id="param-page-waitforfilechooser-action-csharp-wait-for-event-action" tabindex="-1"><a class="header-anchor" href="#param-page-waitforfilechooser-action-csharp-wait-for-event-action" aria-hidden="true">#</a> param: Page.waitForFileChooser.action = %%-csharp-wait-for-event-action-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-page-waitforfilechooser-predicate" tabindex="-1"><a class="header-anchor" href="#option-page-waitforfilechooser-predicate" aria-hidden="true">#</a> option: Page.waitForFileChooser.predicate</h3><ul><li>since: v1.9</li></ul><ul><li><code>predicate</code> &lt;[function]([FileChooser]):[boolean]&gt;</li></ul><p>Receives the [FileChooser] object and resolves to truthy value when the waiting should resolve.</p><h3 id="option-page-waitforfilechooser-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforfilechooser-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: Page.waitForFileChooser.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-waitforfilechooser-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-page-waitforfilechooser-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: Page.waitForFileChooser.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-page-waitforfunction" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforfunction" aria-hidden="true">#</a> async method: Page.waitForFunction</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[JSHandle]&gt;</li></ul><p>Returns when the [<code>param: expression</code>] returns a truthy value. It resolves to a JSHandle of the truthy value.</p><p><strong>Usage</strong></p><p>The [<code>method: Page.waitForFunction</code>] can be used to observe viewport size change:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> webkit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Or &#39;chromium&#39; or &#39;firefox&#39;.</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> watchDog <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForFunction</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setViewportSize</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> watchDog<span class="token punctuation">;</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>playwright<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Playwright</span> playwright <span class="token operator">=</span> <span class="token class-name">Playwright</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BrowserType</span> webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span><span class="token function">webkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Browser</span> browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Page</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">setViewportSize</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span>  <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">waitForFunction</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; window.innerWidth &lt; 100&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;window.x = 0; setTimeout(() =&gt; { window.x = 100 }, 1000);&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>wait_for_function<span class="token punctuation">(</span><span class="token string">&quot;() =&gt; window.x &gt; 0&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    webkit <span class="token operator">=</span> playwright<span class="token punctuation">.</span>webkit
    browser <span class="token operator">=</span> webkit<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;window.x = 0; setTimeout(() =&gt; { window.x = 100 }, 1000);&quot;</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>wait_for_function<span class="token punctuation">(</span><span class="token string">&quot;() =&gt; window.x &gt; 0&quot;</span><span class="token punctuation">)</span>
    browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
    run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">FrameExamples</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">WaitForFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Webkit<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetViewportSizeAsync</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>MainFrame<span class="token punctuation">.</span><span class="token function">WaitForFunctionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;window.innerWidth &lt; 100&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To pass an argument to the predicate of [<code>method: Page.waitForFunction</code>] function:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> selector <span class="token operator">=</span> <span class="token string">&#39;.foo&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForFunction</span><span class="token punctuation">(</span><span class="token parameter">selector</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">,</span> selector<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> selector <span class="token operator">=</span> <span class="token string">&quot;.foo&quot;</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">waitForFunction</span><span class="token punctuation">(</span><span class="token string">&quot;selector =&gt; !!document.querySelector(selector)&quot;</span><span class="token punctuation">,</span> selector<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>selector <span class="token operator">=</span> <span class="token string">&quot;.foo&quot;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>wait_for_function<span class="token punctuation">(</span><span class="token string">&quot;selector =&gt; !!document.querySelector(selector)&quot;</span><span class="token punctuation">,</span> selector<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>selector <span class="token operator">=</span> <span class="token string">&quot;.foo&quot;</span>
page<span class="token punctuation">.</span>wait_for_function<span class="token punctuation">(</span><span class="token string">&quot;selector =&gt; !!document.querySelector(selector)&quot;</span><span class="token punctuation">,</span> selector<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> selector <span class="token operator">=</span> <span class="token string">&quot;.foo&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">WaitForFunctionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;selector =&gt; !!document.querySelector(selector)&quot;</span><span class="token punctuation">,</span> selector<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-waitforfunction-expression-evaluate-expression" tabindex="-1"><a class="header-anchor" href="#param-page-waitforfunction-expression-evaluate-expression" aria-hidden="true">#</a> param: Page.waitForFunction.expression = %%-evaluate-expression-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-waitforfunction-expression-js-evaluate-pagefunction" tabindex="-1"><a class="header-anchor" href="#param-page-waitforfunction-expression-js-evaluate-pagefunction" aria-hidden="true">#</a> param: Page.waitForFunction.expression = %%-js-evaluate-pagefunction-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-waitforfunction-arg" tabindex="-1"><a class="header-anchor" href="#param-page-waitforfunction-arg" aria-hidden="true">#</a> param: Page.waitForFunction.arg</h3><ul><li>since: v1.8</li></ul><ul><li><code>arg</code> ?&lt;[EvaluationArgument]&gt;</li></ul><p>Optional argument to pass to [<code>param: expression</code>].</p><h3 id="option-page-waitforfunction-polling-js-python-wait-for-function-polling" tabindex="-1"><a class="header-anchor" href="#option-page-waitforfunction-polling-js-python-wait-for-function-polling" aria-hidden="true">#</a> option: Page.waitForFunction.polling = %%-js-python-wait-for-function-polling-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-waitforfunction-polling-csharp-java-wait-for-function-polling" tabindex="-1"><a class="header-anchor" href="#option-page-waitforfunction-polling-csharp-java-wait-for-function-polling" aria-hidden="true">#</a> option: Page.waitForFunction.polling = %%-csharp-java-wait-for-function-polling-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-waitforfunction-timeout-wait-for-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforfunction-timeout-wait-for-timeout" aria-hidden="true">#</a> option: Page.waitForFunction.timeout = %%-wait-for-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-waitforloadstate" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforloadstate" aria-hidden="true">#</a> async method: Page.waitForLoadState</h2><ul><li>since: v1.8</li></ul><p>Returns when the required load state has been reached.</p><p>This resolves when the page reaches a required load state, <code>load</code> by default. The navigation must have been committed<br> when this method is called. If current document has already reached the required state, resolves immediately.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Click triggers navigation.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForLoadState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// The promise resolves after &#39;load&#39; event.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token class-name">AriaRole</span><span class="token punctuation">.</span><span class="token constant">BUTTON</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Click triggers navigation.</span>
page<span class="token punctuation">.</span><span class="token function">waitForLoadState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// The promise resolves after &quot;load&quot; event.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># click triggers navigation.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>wait_for_load_state<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># the promise resolves after &quot;load&quot; event.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># click triggers navigation.</span>
page<span class="token punctuation">.</span>wait_for_load_state<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># the promise resolves after &quot;load&quot; event.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByRole</span><span class="token punctuation">(</span>AriaRole<span class="token punctuation">.</span>Button<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Click triggers navigation.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">WaitForLoadStateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// The promise resolves after &#39;load&#39; event.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> popupPromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForEvent</span><span class="token punctuation">(</span><span class="token string">&#39;popup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Click triggers a popup.</span>
<span class="token keyword">const</span> popup <span class="token operator">=</span> <span class="token keyword">await</span> popupPromise<span class="token punctuation">;</span>
<span class="token keyword">await</span> popup<span class="token punctuation">.</span><span class="token function">waitForLoadState</span><span class="token punctuation">(</span><span class="token string">&#39;domcontentloaded&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Wait for the &#39;DOMContentLoaded&#39; event.</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> popup<span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Popup is ready to use.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Page</span> popup <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForPopup</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token class-name">AriaRole</span><span class="token punctuation">.</span><span class="token constant">BUTTON</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Click triggers a popup.</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Wait for the &quot;DOMContentLoaded&quot; event</span>
popup<span class="token punctuation">.</span><span class="token function">waitForLoadState</span><span class="token punctuation">(</span><span class="token class-name">LoadState</span><span class="token punctuation">.</span><span class="token constant">DOMCONTENTLOADED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>popup<span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Popup is ready to use.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_popup<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> page_info<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># click triggers a popup.</span>
popup <span class="token operator">=</span> <span class="token keyword">await</span> page_info<span class="token punctuation">.</span>value
<span class="token comment"># Wait for the &quot;DOMContentLoaded&quot; event.</span>
<span class="token keyword">await</span> popup<span class="token punctuation">.</span>wait_for_load_state<span class="token punctuation">(</span><span class="token string">&quot;domcontentloaded&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> popup<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># popup is ready to use.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_popup<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> page_info<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># click triggers a popup.</span>
popup <span class="token operator">=</span> page_info<span class="token punctuation">.</span>value
<span class="token comment"># Wait for the &quot;DOMContentLoaded&quot; event.</span>
popup<span class="token punctuation">.</span>wait_for_load_state<span class="token punctuation">(</span><span class="token string">&quot;domcontentloaded&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>popup<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># popup is ready to use.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> popup <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RunAndWaitForPopupAsync</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByRole</span><span class="token punctuation">(</span>AriaRole<span class="token punctuation">.</span>Button<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// click triggers the popup</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Wait for the &quot;DOMContentLoaded&quot; event.</span>
<span class="token keyword">await</span> popup<span class="token punctuation">.</span><span class="token function">WaitForLoadStateAsync</span><span class="token punctuation">(</span>LoadState<span class="token punctuation">.</span>DOMContentLoaded<span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> popup<span class="token punctuation">.</span><span class="token function">TitleAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// popup is ready to use.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-waitforloadstate-state-wait-for-load-state-state" tabindex="-1"><a class="header-anchor" href="#param-page-waitforloadstate-state-wait-for-load-state-state" aria-hidden="true">#</a> param: Page.waitForLoadState.state = %%-wait-for-load-state-state-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-waitforloadstate-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforloadstate-timeout-navigation-timeout" aria-hidden="true">#</a> option: Page.waitForLoadState.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-waitfornavigation" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitfornavigation" aria-hidden="true">#</a> async method: Page.waitForNavigation</h2><ul><li>since: v1.8</li><li>deprecated: This method is inherently racy, please use [<code>method: Page.waitForURL</code>] instead.</li><li>langs: <ul><li>alias-python: expect_navigation</li><li>alias-csharp: RunAndWaitForNavigation</li></ul></li></ul><ul><li>returns: &lt;[null]|[Response]&gt;</li></ul><p>Waits for the main frame navigation and returns the main resource response. In case of multiple redirects, the navigation<br> will resolve with the response of the last redirect. In case of navigation to a different anchor or navigation due to<br> History API usage, the navigation will resolve with <code>null</code>.</p><p><strong>Usage</strong></p><p>This resolves when the page navigates to a new URL or reloads. It is useful for when you run code which will indirectly<br> cause the page to navigate. e.g. The click target has an <code>onclick</code> handler that triggers navigation from a <code>setTimeout</code>.<br> Consider this example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Start waiting for navigation before clicking. Note no await.</span>
<span class="token keyword">const</span> navigationPromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForNavigation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Navigate after timeout&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> navigationPromise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// The method returns after navigation has finished</span>
<span class="token class-name">Response</span> response <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForNavigation</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// This action triggers the navigation after a timeout.</span>
  page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Navigate after timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_navigation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># This action triggers the navigation after a timeout.</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Navigate after timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Resolves after navigation has finished</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_navigation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># This action triggers the navigation after a timeout.</span>
    page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Navigate after timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Resolves after navigation has finished</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RunAndWaitForNavigationAsync</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">// This action triggers the navigation after a timeout.</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;Navigate after timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// The method continues after navigation has finished</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,181),oo={class:"hint-container note"},po=n("p",{class:"hint-container-title"},"注",-1),io={href:"https://developer.mozilla.org/en-US/docs/Web/API/History_API",target:"_blank",rel:"noopener noreferrer"},co=n("br",null,null,-1),lo=t('<h2 id="async-method-page-waitfornavigation-1" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitfornavigation-1" aria-hidden="true">#</a> async method: Page.waitForNavigation</h2><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&lt;[Response]&gt;&gt;</li></ul><h3 id="param-page-waitfornavigation-action-csharp-wait-for-event-action" tabindex="-1"><a class="header-anchor" href="#param-page-waitfornavigation-action-csharp-wait-for-event-action" aria-hidden="true">#</a> param: Page.waitForNavigation.action = %%-csharp-wait-for-event-action-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-page-waitfornavigation-url-wait-for-navigation-url" tabindex="-1"><a class="header-anchor" href="#option-page-waitfornavigation-url-wait-for-navigation-url" aria-hidden="true">#</a> option: Page.waitForNavigation.url = %%-wait-for-navigation-url-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-waitfornavigation-waituntil-navigation-wait-until" tabindex="-1"><a class="header-anchor" href="#option-page-waitfornavigation-waituntil-navigation-wait-until" aria-hidden="true">#</a> option: Page.waitForNavigation.waitUntil = %%-navigation-wait-until-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-waitfornavigation-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitfornavigation-timeout-navigation-timeout" aria-hidden="true">#</a> option: Page.waitForNavigation.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.8</li></ul><h3 id="param-page-waitfornavigation-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-page-waitfornavigation-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: Page.waitForNavigation.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-page-waitforpopup" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforpopup" aria-hidden="true">#</a> async method: Page.waitForPopup</h2><ul><li>since: v1.9</li><li>langs: java, python, csharp <ul><li>alias-python: expect_popup</li><li>alias-csharp: RunAndWaitForPopup</li></ul></li></ul><ul><li>returns: &lt;[Page]&gt;</li></ul><p>Performs action and waits for a popup [Page]. If predicate is provided, it passes<br> [Popup] value into the <code>predicate</code> function and waits for <code>predicate(page)</code> to return a truthy value.<br> Will throw an error if the page is closed before the popup event is fired.</p><h2 id="async-method-page-waitforpopup-1" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforpopup-1" aria-hidden="true">#</a> async method: Page.waitForPopup</h2><ul><li>since: v1.9</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&lt;[Page]&gt;&gt;</li></ul><h3 id="param-page-waitforpopup-action-csharp-wait-for-event-action" tabindex="-1"><a class="header-anchor" href="#param-page-waitforpopup-action-csharp-wait-for-event-action" aria-hidden="true">#</a> param: Page.waitForPopup.action = %%-csharp-wait-for-event-action-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-page-waitforpopup-predicate" tabindex="-1"><a class="header-anchor" href="#option-page-waitforpopup-predicate" aria-hidden="true">#</a> option: Page.waitForPopup.predicate</h3><ul><li>since: v1.9</li></ul><ul><li><code>predicate</code> &lt;[function]([Page]):[boolean]&gt;</li></ul><p>Receives the [Page] object and resolves to truthy value when the waiting should resolve.</p><h3 id="option-page-waitforpopup-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforpopup-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: Page.waitForPopup.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-waitforpopup-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-page-waitforpopup-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: Page.waitForPopup.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-page-waitforrequest" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforrequest" aria-hidden="true">#</a> async method: Page.waitForRequest</h2><ul><li>since: v1.8</li><li>langs: <ul><li>alias-python: expect_request</li><li>alias-csharp: RunAndWaitForRequest</li></ul></li></ul><ul><li>returns: &lt;[Request]&gt;</li></ul>',33),uo=t(`<p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Start waiting for request before clicking. Note no await.</span>
<span class="token keyword">const</span> requestPromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForRequest</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/resource&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;trigger request&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token keyword">await</span> requestPromise<span class="token punctuation">;</span>

<span class="token comment">// Alternative way with a predicate. Note no await.</span>
<span class="token keyword">const</span> requestPromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForRequest</span><span class="token punctuation">(</span><span class="token parameter">request</span> <span class="token operator">=&gt;</span> request<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;https://example.com&#39;</span> <span class="token operator">&amp;&amp;</span> request<span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;trigger request&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token keyword">await</span> requestPromise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Waits for the next request with the specified url</span>
<span class="token class-name">Request</span> request <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForRequest</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/resource&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Triggers the request</span>
  page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;trigger request&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Waits for the next request matching some conditions</span>
<span class="token class-name">Request</span> request <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForRequest</span><span class="token punctuation">(</span>request <span class="token operator">-&gt;</span> <span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Triggers the request</span>
  page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;trigger request&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_request<span class="token punctuation">(</span><span class="token string">&quot;http://example.com/resource&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> first<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;trigger request&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
first_request <span class="token operator">=</span> <span class="token keyword">await</span> first<span class="token punctuation">.</span>value

<span class="token comment"># or with a lambda</span>
<span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_request<span class="token punctuation">(</span><span class="token keyword">lambda</span> request<span class="token punctuation">:</span> request<span class="token punctuation">.</span>url <span class="token operator">==</span> <span class="token string">&quot;http://example.com&quot;</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> second<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;trigger request&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
second_request <span class="token operator">=</span> <span class="token keyword">await</span> second<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_request<span class="token punctuation">(</span><span class="token string">&quot;http://example.com/resource&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> first<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;trigger request&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
first_request <span class="token operator">=</span> first<span class="token punctuation">.</span>value

<span class="token comment"># or with a lambda</span>
<span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_request<span class="token punctuation">(</span><span class="token keyword">lambda</span> request<span class="token punctuation">:</span> request<span class="token punctuation">.</span>url <span class="token operator">==</span> <span class="token string">&quot;http://example.com&quot;</span> <span class="token keyword">and</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> second<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;trigger request&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
second_request <span class="token operator">=</span> second<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Waits for the next request with the specified url.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RunAndWaitForRequestAsync</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;trigger request&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;http://example.com/resource&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Alternative way with a predicate.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RunAndWaitForRequestAsync</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;trigger request&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> request <span class="token operator">=&gt;</span> request<span class="token punctuation">.</span>Url <span class="token operator">==</span> <span class="token string">&quot;https://example.com&quot;</span> <span class="token operator">&amp;&amp;</span> request<span class="token punctuation">.</span>Method <span class="token operator">==</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-method-page-waitforrequest-1" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforrequest-1" aria-hidden="true">#</a> async method: Page.waitForRequest</h2><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&lt;[Request]&gt;&gt;</li></ul><h3 id="param-page-waitforrequest-action-csharp-wait-for-event-action" tabindex="-1"><a class="header-anchor" href="#param-page-waitforrequest-action-csharp-wait-for-event-action" aria-hidden="true">#</a> param: Page.waitForRequest.action = %%-csharp-wait-for-event-action-%%</h3><ul><li>since: v1.12</li></ul><h3 id="param-page-waitforrequest-urlorpredicate" tabindex="-1"><a class="header-anchor" href="#param-page-waitforrequest-urlorpredicate" aria-hidden="true">#</a> param: Page.waitForRequest.urlOrPredicate</h3><ul><li>since: v1.8</li></ul><ul><li><code>urlOrPredicate</code> &lt;[string]|[RegExp]|[function]([Request]):[boolean]&gt;</li></ul>`,14),ro=n("br",null,null,-1),ko=n("code",null,"option: baseURL",-1),ho=n("br",null,null,-1),go={href:"https://developer.mozilla.org/en-US/docs/Web/API/URL/URL",target:"_blank",rel:"noopener noreferrer"},vo=n("code",null,"new URL()",-1),mo=t('<h3 id="param-page-waitforrequest-urlorpredicate-1" tabindex="-1"><a class="header-anchor" href="#param-page-waitforrequest-urlorpredicate-1" aria-hidden="true">#</a> param: Page.waitForRequest.urlOrPredicate</h3><ul><li>since: v1.8</li><li>langs: js</li></ul><ul><li><code>urlOrPredicate</code> &lt;[string]|[RegExp]|[function]([Request]):[boolean]|[Promise]&lt;[boolean]&gt;&gt;</li></ul><p>Request URL string, regex or predicate receiving [Request] object.</p><h3 id="option-page-waitforrequest-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforrequest-timeout" aria-hidden="true">#</a> option: Page.waitForRequest.timeout</h3><ul><li>since: v1.8</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>Maximum wait time in milliseconds, defaults to 30 seconds, pass <code>0</code> to disable the timeout. The default value can be<br> changed by using the [<code>method: Page.setDefaultTimeout</code>] method.</p><h3 id="param-page-waitforrequest-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-page-waitforrequest-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: Page.waitForRequest.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-page-waitforrequestfinished" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforrequestfinished" aria-hidden="true">#</a> async method: Page.waitForRequestFinished</h2><ul><li>since: v1.12</li><li>langs: java, python, csharp <ul><li>alias-python: expect_request_finished</li><li>alias-csharp: RunAndWaitForRequestFinished</li></ul></li></ul><ul><li>returns: &lt;[Request]&gt;</li></ul><p>Performs action and waits for a [Request] to finish loading. If predicate is provided, it passes<br> [Request] value into the <code>predicate</code> function and waits for <code>predicate(request)</code> to return a truthy value.<br> Will throw an error if the page is closed before the [<code>event: Page.requestFinished</code>] event is fired.</p><h2 id="async-method-page-waitforrequestfinished-1" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforrequestfinished-1" aria-hidden="true">#</a> async method: Page.waitForRequestFinished</h2><ul><li>since: v1.12</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&lt;[Request]&gt;&gt;</li></ul><h3 id="param-page-waitforrequestfinished-action-csharp-wait-for-event-action" tabindex="-1"><a class="header-anchor" href="#param-page-waitforrequestfinished-action-csharp-wait-for-event-action" aria-hidden="true">#</a> param: Page.waitForRequestFinished.action = %%-csharp-wait-for-event-action-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-page-waitforrequestfinished-predicate" tabindex="-1"><a class="header-anchor" href="#option-page-waitforrequestfinished-predicate" aria-hidden="true">#</a> option: Page.waitForRequestFinished.predicate</h3><ul><li>since: v1.12</li></ul><ul><li><code>predicate</code> &lt;[function]([Request]):[boolean]&gt;</li></ul><p>Receives the [Request] object and resolves to truthy value when the waiting should resolve.</p><h3 id="option-page-waitforrequestfinished-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforrequestfinished-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: Page.waitForRequestFinished.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.12</li></ul><h3 id="param-page-waitforrequestfinished-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-page-waitforrequestfinished-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: Page.waitForRequestFinished.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.12</li></ul><h2 id="async-method-page-waitforresponse" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforresponse" aria-hidden="true">#</a> async method: Page.waitForResponse</h2><ul><li>since: v1.8</li><li>langs: <ul><li>alias-python: expect_response</li><li>alias-csharp: RunAndWaitForResponse</li></ul></li></ul><ul><li>returns: &lt;[Response]&gt;</li></ul>',30),bo=t(`<p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Start waiting for response before clicking. Note no await.</span>
<span class="token keyword">const</span> responsePromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForResponse</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/resource&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;trigger response&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> responsePromise<span class="token punctuation">;</span>

<span class="token comment">// Alternative way with a predicate. Note no await.</span>
<span class="token keyword">const</span> responsePromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForResponse</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;https://example.com&#39;</span> <span class="token operator">&amp;&amp;</span> response<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;trigger response&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> responsePromise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Waits for the next response with the specified url</span>
<span class="token class-name">Response</span> response <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForResponse</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/resource&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Triggers the response</span>
  page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;trigger response&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Waits for the next response matching some conditions</span>
<span class="token class-name">Response</span> response <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForResponse</span><span class="token punctuation">(</span>response <span class="token operator">-&gt;</span> <span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> response<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Triggers the response</span>
  page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;trigger response&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_response<span class="token punctuation">(</span><span class="token string">&quot;https://example.com/resource&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> response_info<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;trigger response&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> <span class="token keyword">await</span> response_info<span class="token punctuation">.</span>value
<span class="token keyword">return</span> response<span class="token punctuation">.</span>ok

<span class="token comment"># or with a lambda</span>
<span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_response<span class="token punctuation">(</span><span class="token keyword">lambda</span> response<span class="token punctuation">:</span> response<span class="token punctuation">.</span>url <span class="token operator">==</span> <span class="token string">&quot;https://example.com&quot;</span> <span class="token keyword">and</span> response<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token keyword">as</span> response_info<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;trigger response&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> <span class="token keyword">await</span> response_info<span class="token punctuation">.</span>value
<span class="token keyword">return</span> response<span class="token punctuation">.</span>ok
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_response<span class="token punctuation">(</span><span class="token string">&quot;https://example.com/resource&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> response_info<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;trigger response&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> response_info<span class="token punctuation">.</span>value
<span class="token keyword">return</span> response<span class="token punctuation">.</span>ok

<span class="token comment"># or with a lambda</span>
<span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_response<span class="token punctuation">(</span><span class="token keyword">lambda</span> response<span class="token punctuation">:</span> response<span class="token punctuation">.</span>url <span class="token operator">==</span> <span class="token string">&quot;https://example.com&quot;</span> <span class="token keyword">and</span> response<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token keyword">as</span> response_info<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;trigger response&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> response_info<span class="token punctuation">.</span>value
<span class="token keyword">return</span> response<span class="token punctuation">.</span>ok
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Waits for the next response with the specified url.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RunAndWaitForResponseAsync</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;trigger response&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;http://example.com/resource&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Alternative way with a predicate.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RunAndWaitForResponseAsync</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;trigger response&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> response <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span>Url <span class="token operator">==</span> <span class="token string">&quot;https://example.com&quot;</span> <span class="token operator">&amp;&amp;</span> response<span class="token punctuation">.</span>Status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-method-page-waitforresponse-1" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforresponse-1" aria-hidden="true">#</a> async method: Page.waitForResponse</h2><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&lt;[Response]&gt;&gt;</li></ul><h3 id="param-page-waitforresponse-action-csharp-wait-for-event-action" tabindex="-1"><a class="header-anchor" href="#param-page-waitforresponse-action-csharp-wait-for-event-action" aria-hidden="true">#</a> param: Page.waitForResponse.action = %%-csharp-wait-for-event-action-%%</h3><ul><li>since: v1.12</li></ul><h3 id="param-page-waitforresponse-urlorpredicate" tabindex="-1"><a class="header-anchor" href="#param-page-waitforresponse-urlorpredicate" aria-hidden="true">#</a> param: Page.waitForResponse.urlOrPredicate</h3><ul><li>since: v1.8</li></ul><ul><li><code>urlOrPredicate</code> &lt;[string]|[RegExp]|[function]([Response]):[boolean]&gt;</li></ul>`,14),fo=n("br",null,null,-1),wo=n("code",null,"option: baseURL",-1),yo=n("br",null,null,-1),qo={href:"https://developer.mozilla.org/en-US/docs/Web/API/URL/URL",target:"_blank",rel:"noopener noreferrer"},xo=n("code",null,"new URL()",-1),_o=n("h3",{id:"param-page-waitforresponse-urlorpredicate-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#param-page-waitforresponse-urlorpredicate-1","aria-hidden":"true"},"#"),a(" param: Page.waitForResponse.urlOrPredicate")],-1),Po=n("ul",null,[n("li",null,"since: v1.8"),n("li",null,"langs: js")],-1),jo=n("ul",null,[n("li",null,[n("code",null,"urlOrPredicate"),a(" <[string]|[RegExp]|[function]([Response]):[boolean]|[Promise]<[boolean]>>")])],-1),So=n("br",null,null,-1),Ao=n("code",null,"option: baseURL",-1),Ro=n("br",null,null,-1),To={href:"https://developer.mozilla.org/en-US/docs/Web/API/URL/URL",target:"_blank",rel:"noopener noreferrer"},Fo=n("code",null,"new URL()",-1),Co=t(`<h3 id="option-page-waitforresponse-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforresponse-timeout" aria-hidden="true">#</a> option: Page.waitForResponse.timeout</h3><ul><li>since: v1.8</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>Maximum wait time in milliseconds, defaults to 30 seconds, pass <code>0</code> to disable the timeout. The default value can be<br> changed by using the [<code>method: BrowserContext.setDefaultTimeout</code>] or [<code>method: Page.setDefaultTimeout</code>] methods.</p><h3 id="param-page-waitforresponse-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-page-waitforresponse-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: Page.waitForResponse.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-page-waitforselector" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforselector" aria-hidden="true">#</a> async method: Page.waitForSelector</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[ElementHandle]&gt;</li></ul><p>Returns when element specified by selector satisfies [<code>option: state</code>] option. Returns <code>null</code> if waiting for <code>hidden</code> or<br><code>detached</code>.</p><div class="hint-container note"><p class="hint-container-title">注</p><p>Playwright automatically waits for element to be ready before performing an action. Using<br> [Locator] objects and web-first assertions makes the code wait-for-selector-free.</p></div><p>Wait for the [<code>param: selector</code>] to satisfy [<code>option: state</code>] option (either appear/disappear from dom, or become<br> visible/hidden). If at the moment of calling the method [<code>param: selector</code>] already satisfies the condition, the method<br> will return immediately. If the selector doesn&#39;t satisfy the condition for the [<code>option: timeout</code>] milliseconds, the<br> function will throw.</p><p><strong>Usage</strong></p><p>This method works across navigations:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> chromium <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Or &#39;firefox&#39; or &#39;webkit&#39;.</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> currentURL <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token string">&#39;https://google.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;https://bbc.com&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span>currentURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Loaded image: &#39;</span> <span class="token operator">+</span> <span class="token keyword">await</span> element<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>playwright<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Playwright</span> playwright <span class="token operator">=</span> <span class="token class-name">Playwright</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BrowserType</span> chromium <span class="token operator">=</span> playwright<span class="token punctuation">.</span><span class="token function">chromium</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Browser</span> browser <span class="token operator">=</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Page</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> currentURL <span class="token operator">:</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;https://google.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://bbc.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span>currentURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ElementHandle</span> element <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded image: &quot;</span> <span class="token operator">+</span> element<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    chromium <span class="token operator">=</span> playwright<span class="token punctuation">.</span>chromium
    browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> current_url <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&quot;https://google.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://bbc.com&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span>current_url<span class="token punctuation">,</span> wait_until<span class="token operator">=</span><span class="token string">&quot;domcontentloaded&quot;</span><span class="token punctuation">)</span>
        element <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>wait_for_selector<span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded image: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token keyword">await</span> element<span class="token punctuation">.</span>get_attribute<span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    chromium <span class="token operator">=</span> playwright<span class="token punctuation">.</span>chromium
    browser <span class="token operator">=</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> current_url <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&quot;https://google.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://bbc.com&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span>current_url<span class="token punctuation">,</span> wait_until<span class="token operator">=</span><span class="token string">&quot;domcontentloaded&quot;</span><span class="token punctuation">)</span>
        element <span class="token operator">=</span> page<span class="token punctuation">.</span>wait_for_selector<span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded image: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>get_attribute<span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
    run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">FrameExamples</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Images</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Chromium<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> currentUrl <span class="token keyword">in</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;https://www.google.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://bbc.com&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">{</span>
          <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span>currentUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name"><span class="token keyword">var</span></span> element <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">WaitForSelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Loaded image: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token keyword">await</span> element<span class="token punctuation">.</span><span class="token function">GetAttributeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">CloseAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-waitforselector-selector-query-selector" tabindex="-1"><a class="header-anchor" href="#param-page-waitforselector-selector-query-selector" aria-hidden="true">#</a> param: Page.waitForSelector.selector = %%-query-selector-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-waitforselector-state-wait-for-selector-state" tabindex="-1"><a class="header-anchor" href="#option-page-waitforselector-state-wait-for-selector-state" aria-hidden="true">#</a> option: Page.waitForSelector.state = %%-wait-for-selector-state-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-waitforselector-strict-input-strict" tabindex="-1"><a class="header-anchor" href="#option-page-waitforselector-strict-input-strict" aria-hidden="true">#</a> option: Page.waitForSelector.strict = %%-input-strict-%%</h3><ul><li>since: v1.14</li></ul><h3 id="option-page-waitforselector-timeout-input-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforselector-timeout-input-timeout" aria-hidden="true">#</a> option: Page.waitForSelector.timeout = %%-input-timeout-%%</h3><ul><li>since: v1.8</li></ul><h2 id="async-method-page-waitfortimeout" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitfortimeout" aria-hidden="true">#</a> async method: Page.waitForTimeout</h2><ul><li>since: v1.8</li></ul><p>Waits for the given [<code>param: timeout</code>] in milliseconds.</p><p>Note that <code>page.waitForTimeout()</code> should only be used for debugging. Tests using the timer in production are going to be<br> flaky. Use signals such as network events, selectors becoming visible and others instead.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// wait for 1 second</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForTimeout</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// wait for 1 second</span>
page<span class="token punctuation">.</span><span class="token function">waitForTimeout</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># wait for 1 second</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>wait_for_timeout<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># wait for 1 second</span>
page<span class="token punctuation">.</span>wait_for_timeout<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Wait for 1 second</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">WaitForTimeoutAsync</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-waitfortimeout-timeout" tabindex="-1"><a class="header-anchor" href="#param-page-waitfortimeout-timeout" aria-hidden="true">#</a> param: Page.waitForTimeout.timeout</h3><ul><li>since: v1.8</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>A timeout to wait for</p><h2 id="async-method-page-waitforurl" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforurl" aria-hidden="true">#</a> async method: Page.waitForURL</h2><ul><li>since: v1.11</li></ul><p>Waits for the main frame to navigate to the given URL.</p><p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&#39;a.delayed-navigation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Clicking the link will indirectly cause a navigation</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForURL</span><span class="token punctuation">(</span><span class="token string">&#39;**/target.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&quot;a.delayed-navigation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Clicking the link will indirectly cause a navigation</span>
page<span class="token punctuation">.</span><span class="token function">waitForURL</span><span class="token punctuation">(</span><span class="token string">&quot;**/target.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;a.delayed-navigation&quot;</span><span class="token punctuation">)</span> <span class="token comment"># clicking the link will indirectly cause a navigation</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>wait_for_url<span class="token punctuation">(</span><span class="token string">&quot;**/target.html&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;a.delayed-navigation&quot;</span><span class="token punctuation">)</span> <span class="token comment"># clicking the link will indirectly cause a navigation</span>
page<span class="token punctuation">.</span>wait_for_url<span class="token punctuation">(</span><span class="token string">&quot;**/target.html&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token string">&quot;a.delayed-navigation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// clicking the link will indirectly cause a navigation</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">WaitForURLAsync</span><span class="token punctuation">(</span><span class="token string">&quot;**/target.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="param-page-waitforurl-url-wait-for-navigation-url" tabindex="-1"><a class="header-anchor" href="#param-page-waitforurl-url-wait-for-navigation-url" aria-hidden="true">#</a> param: Page.waitForURL.url = %%-wait-for-navigation-url-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-page-waitforurl-timeout-navigation-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforurl-timeout-navigation-timeout" aria-hidden="true">#</a> option: Page.waitForURL.timeout = %%-navigation-timeout-%%</h3><ul><li>since: v1.11</li></ul><h3 id="option-page-waitforurl-waituntil-navigation-wait-until" tabindex="-1"><a class="header-anchor" href="#option-page-waitforurl-waituntil-navigation-wait-until" aria-hidden="true">#</a> option: Page.waitForURL.waitUntil = %%-navigation-wait-until-%%</h3><ul><li>since: v1.11</li></ul><h2 id="async-method-page-waitforwebsocket" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforwebsocket" aria-hidden="true">#</a> async method: Page.waitForWebSocket</h2><ul><li>since: v1.9</li><li>langs: java, python, csharp <ul><li>alias-python: expect_websocket</li><li>alias-csharp: RunAndWaitForWebSocket</li></ul></li></ul><ul><li>returns: &lt;[WebSocket]&gt;</li></ul><p>Performs action and waits for a new [WebSocket]. If predicate is provided, it passes<br> [WebSocket] value into the <code>predicate</code> function and waits for <code>predicate(webSocket)</code> to return a truthy value.<br> Will throw an error if the page is closed before the WebSocket event is fired.</p><h2 id="async-method-page-waitforwebsocket-1" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforwebsocket-1" aria-hidden="true">#</a> async method: Page.waitForWebSocket</h2><ul><li>since: v1.9</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&lt;[WebSocket]&gt;&gt;</li></ul><h3 id="param-page-waitforwebsocket-action-csharp-wait-for-event-action" tabindex="-1"><a class="header-anchor" href="#param-page-waitforwebsocket-action-csharp-wait-for-event-action" aria-hidden="true">#</a> param: Page.waitForWebSocket.action = %%-csharp-wait-for-event-action-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-page-waitforwebsocket-predicate" tabindex="-1"><a class="header-anchor" href="#option-page-waitforwebsocket-predicate" aria-hidden="true">#</a> option: Page.waitForWebSocket.predicate</h3><ul><li>since: v1.9</li></ul><ul><li><code>predicate</code> &lt;[function]([WebSocket]):[boolean]&gt;</li></ul><p>Receives the [WebSocket] object and resolves to truthy value when the waiting should resolve.</p><h3 id="option-page-waitforwebsocket-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforwebsocket-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: Page.waitForWebSocket.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-waitforwebsocket-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-page-waitforwebsocket-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: Page.waitForWebSocket.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.9</li></ul><h2 id="async-method-page-waitforworker" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforworker" aria-hidden="true">#</a> async method: Page.waitForWorker</h2><ul><li>since: v1.9</li><li>langs: java, python, csharp <ul><li>alias-python: expect_worker</li><li>alias-csharp: RunAndWaitForWorker</li></ul></li></ul><ul><li>returns: &lt;[Worker]&gt;</li></ul><p>Performs action and waits for a new [Worker]. If predicate is provided, it passes<br> [Worker] value into the <code>predicate</code> function and waits for <code>predicate(worker)</code> to return a truthy value.<br> Will throw an error if the page is closed before the worker event is fired.</p><h2 id="async-method-page-waitforworker-1" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforworker-1" aria-hidden="true">#</a> async method: Page.waitForWorker</h2><ul><li>since: v1.9</li><li>langs: python</li></ul><ul><li>returns: &lt;[EventContextManager]&lt;[Worker]&gt;&gt;</li></ul><h3 id="param-page-waitforworker-action-csharp-wait-for-event-action" tabindex="-1"><a class="header-anchor" href="#param-page-waitforworker-action-csharp-wait-for-event-action" aria-hidden="true">#</a> param: Page.waitForWorker.action = %%-csharp-wait-for-event-action-%%</h3><ul><li>since: v1.12</li></ul><h3 id="option-page-waitforworker-predicate" tabindex="-1"><a class="header-anchor" href="#option-page-waitforworker-predicate" aria-hidden="true">#</a> option: Page.waitForWorker.predicate</h3><ul><li>since: v1.9</li></ul><ul><li><code>predicate</code> &lt;[function]([Worker]):[boolean]&gt;</li></ul><p>Receives the [Worker] object and resolves to truthy value when the waiting should resolve.</p><h3 id="option-page-waitforworker-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforworker-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: Page.waitForWorker.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.9</li></ul><h3 id="param-page-waitforworker-callback-java-wait-for-event-callback" tabindex="-1"><a class="header-anchor" href="#param-page-waitforworker-callback-java-wait-for-event-callback" aria-hidden="true">#</a> param: Page.waitForWorker.callback = %%-java-wait-for-event-callback-%%</h3><ul><li>since: v1.9</li></ul><h2 id="method-page-workers" tabindex="-1"><a class="header-anchor" href="#method-page-workers" aria-hidden="true">#</a> method: Page.workers</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Array]&lt;[Worker]&gt;&gt;</li></ul>`,93),Lo={href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API",target:"_blank",rel:"noopener noreferrer"},Eo=n("br",null,null,-1),Wo=t('<div class="hint-container note"><p class="hint-container-title">注</p><p>This does not contain ServiceWorkers</p></div><h2 id="async-method-page-waitforevent2" tabindex="-1"><a class="header-anchor" href="#async-method-page-waitforevent2" aria-hidden="true">#</a> async method: Page.waitForEvent2</h2><ul><li>since: v1.8</li><li>langs: python <ul><li>alias-python: wait_for_event</li></ul></li></ul><ul><li>returns: &lt;[any]&gt;</li></ul><div class="hint-container note"><p class="hint-container-title">注</p><p>In most cases, you should use [<code>method: Page.waitForEvent</code>].</p></div><p>Waits for given <code>event</code> to fire. If predicate is provided, it passes<br> event&#39;s value into the <code>predicate</code> function and waits for <code>predicate(event)</code> to return a truthy value.<br> Will throw an error if the page is closed before the <code>event</code> is fired.</p><h3 id="param-page-waitforevent2-event-wait-for-event-event" tabindex="-1"><a class="header-anchor" href="#param-page-waitforevent2-event-wait-for-event-event" aria-hidden="true">#</a> param: Page.waitForEvent2.event = %%-wait-for-event-event-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-waitforevent2-predicate-wait-for-event-predicate" tabindex="-1"><a class="header-anchor" href="#option-page-waitforevent2-predicate-wait-for-event-predicate" aria-hidden="true">#</a> option: Page.waitForEvent2.predicate = %%-wait-for-event-predicate-%%</h3><ul><li>since: v1.8</li></ul><h3 id="option-page-waitforevent2-timeout-wait-for-event-timeout" tabindex="-1"><a class="header-anchor" href="#option-page-waitforevent2-timeout-wait-for-event-timeout" aria-hidden="true">#</a> option: Page.waitForEvent2.timeout = %%-wait-for-event-timeout-%%</h3><ul><li>since: v1.8</li></ul>',12);function Uo(Mo,Ho){const e=i("ExternalLinkIcon"),o=i("RouterLink");return l(),u("div",null,[d,k,n("p",null,[a("Page provides methods to interact with a single tab in a [Browser], or an"),h,n("a",g,[a("extension background page"),s(e)]),a(" in Chromium. One [Browser]"),v,a(" instance might have multiple [Page] instances.")]),m,n("p",null,[a("The Page class emits various events (described below) which can be handled using any of Node's native"),b,n("a",f,[w,s(e)]),a(" methods, such as "),y,a(", "),q,a(" or"),x,_,a(".")]),P,n("p",null,[a("Emitted when a JavaScript dialog appears, such as "),j,a(", "),S,a(", "),A,a(" or "),R,a(". Listener "),T,a(" either ["),F,a("] or ["),C,a("] the dialog - otherwise the page will "),n("a",L,[a("freeze"),s(e)]),a(" waiting for the dialog, and actions like click will never finish.")]),E,n("p",null,[a("Emitted when the JavaScript "),n("a",W,[U,s(e)]),M,a(" event is dispatched.")]),H,n("p",null,[a("Emitted when the JavaScript "),n("a",I,[D,s(e)]),a(" event is dispatched.")]),O,n("p",null,[a("The earliest moment that page is available is when it has navigated to the initial url. For example, when opening a"),B,a(" popup with "),z,a(', this event will fire when the network request to "'),n("a",N,[a("http://example.com"),s(e)]),a('" is'),V,a(" done and its response has started loading in the popup.")]),G,n("p",null,[a("Emitted when a dedicated "),n("a",J,[a("WebWorker"),s(e)]),a(" is spawned by the"),$,a(" page.")]),K,n("ul",null,[Y,X,n("li",null,[a("deprecated: This property is discouraged. Please use other libraries such as"),Z,n("a",Q,[a("Axe"),s(e)]),a(" if you need to test page accessibility. See our Node.js "),n("a",nn,[a("guide"),s(e)]),a(" for integration with Axe.")])]),an,n("p",null,[a("Script type. Use 'module' in order to load a Javascript ES6 module. See"),sn,n("a",tn,[a("script"),s(e)]),a(" for more details.")]),en,n("ul",null,[on,n("li",null,[a("discouraged: Use locator-based ["),pn,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),cn,n("ol",null,[ln,un,n("li",null,[a("Wait for "),s(o,{to:"/book/playwright/actionability.html"},{default:p(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),rn,a("] option is"),dn,a(" set. If the element is detached during the checks, the whole action is retried.")]),kn,hn,gn,vn]),mn,n("ul",null,[bn,n("li",null,[a("discouraged: Use locator-based ["),fn,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),wn,n("ol",null,[yn,n("li",null,[a("Wait for "),s(o,{to:"/book/playwright/actionability.html"},{default:p(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),qn,a("] option is"),xn,a(" set. If the element is detached during the checks, the whole action is retried.")]),_n,Pn,jn]),Sn,n("p",null,[a("Defaults to "),An,a(". Whether to run the"),Rn,n("a",Tn,[a("before unload"),s(e)]),a(" page handlers.")]),Fn,n("ul",null,[Cn,n("li",null,[a("discouraged: Use locator-based ["),Ln,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")]),En]),Wn,n("ol",null,[Un,n("li",null,[a("Wait for "),s(o,{to:"/book/playwright/actionability.html"},{default:p(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),Mn,a("] option is"),Hn,a(" set. If the element is detached during the checks, the whole action is retried.")]),In]),Dn,n("ul",null,[On,n("li",null,[a("discouraged: Use locator-based ["),Bn,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),n("p",null,[a("The snippet below dispatches the "),zn,a(" event on the element. Regardless of the visibility state of the element, "),Nn,Vn,a(" is dispatched. This is equivalent to calling"),Gn,n("a",Jn,[a("element.click()"),s(e)]),a(".")]),$n,n("ul",null,[n("li",null,[n("a",Kn,[a("DragEvent"),s(e)])]),n("li",null,[n("a",Yn,[a("FocusEvent"),s(e)])]),n("li",null,[n("a",Xn,[a("KeyboardEvent"),s(e)])]),n("li",null,[n("a",Zn,[a("MouseEvent"),s(e)])]),n("li",null,[n("a",Qn,[a("PointerEvent"),s(e)])]),n("li",null,[n("a",na,[a("TouchEvent"),s(e)])]),n("li",null,[n("a",aa,[a("Event"),s(e)])])]),sa,n("h3",ta,[ea,a(" param: "),n("a",oa,[a("Page.exposeBinding.name"),s(e)])]),pa,n("h3",ia,[ca,a(" param: "),n("a",la,[a("Page.exposeFunction.name"),s(e)])]),ua,n("ul",null,[ra,n("li",null,[a("discouraged: Use locator-based ["),da,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),n("p",null,[a("This method waits for an element matching ["),ka,a("], waits for "),s(o,{to:"/book/playwright/actionability.html"},{default:p(()=>[a("actionability")]),_:1}),a(" checks, focuses the element, fills it and triggers an "),ha,a(" event after filling. Note that you can pass an empty string to clear the input field.")]),n("p",null,[a("If the target element is not an "),ga,a(", "),va,a(" or "),ma,a(" element, this method throws an error. However, if the element is inside the "),ba,a(" element that has an associated "),n("a",fa,[a("control"),s(e)]),a(", the control will be filled instead.")]),wa,n("ul",null,[ya,n("li",null,[a("discouraged: Use locator-based ["),qa,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),xa,n("h3",_a,[Pa,a(" param: "),n("a",ja,[a("Page.frame.name"),s(e)])]),Sa,Aa,Ra,n("h3",Ta,[Fa,a(" option: "),n("a",Ca,[a("Page.frame.name"),s(e)])]),La,n("ul",null,[Ea,n("li",null,[a("discouraged: Use locator-based ["),Wa,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),Ua,Ma,Ha,Ia,n("h3",Da,[Oa,a(" param: "),n("a",Ba,[a("Page.getAttribute.name"),s(e)])]),za,n("div",Na,[Va,n("p",null,[a("Headless mode doesn't support navigation to a PDF document. See the"),Ga,n("a",Ja,[a("upstream issue"),s(e)]),a(".")])]),$a,Ka,Ya,n("p",null,[a("URL to navigate page to. The url should include scheme, e.g. "),Xa,a("."),Za,a(" When a ["),Qa,a("] via the context options was provided and the passed URL is a path,"),ns,a(" it gets merged via the "),n("a",as,[ss,s(e)]),a(" constructor.")]),ts,n("ul",null,[es,n("li",null,[a("discouraged: Use locator-based ["),os,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),ps,n("ol",null,[is,n("li",null,[a("Wait for "),s(o,{to:"/book/playwright/actionability.html"},{default:p(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),cs,a("] option is"),ls,a(" set. If the element is detached during the checks, the whole action is retried.")]),us,rs,ds]),ks,n("ul",null,[hs,n("li",null,[a("discouraged: Use locator-based ["),gs,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),vs,n("ul",null,[ms,n("li",null,[a("discouraged: Use locator-based ["),bs,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),fs,n("ul",null,[ws,n("li",null,[a("discouraged: Use locator-based ["),ys,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),qs,xs,n("p",null,[a("Throws for non-input elements. However, if the element is inside the "),_s,a(" element that has an associated "),n("a",Ps,[a("control"),s(e)]),a(", returns the value of the control.")]),js,n("ul",null,[Ss,n("li",null,[a("discouraged: Use locator-based ["),As,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),Rs,n("ul",null,[Ts,n("li",null,[a("discouraged: Use locator-based ["),Fs,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),Cs,n("p",null,[a("Returns whether the element is disabled, the opposite of "),s(o,{to:"/book/playwright/actionability.html#enabled"},{default:p(()=>[a("enabled")]),_:1}),a(".")]),Ls,n("ul",null,[Es,n("li",null,[a("discouraged: Use locator-based ["),Ws,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),Us,n("p",null,[a("Returns whether the element is "),s(o,{to:"/book/playwright/actionability.html#editable"},{default:p(()=>[a("editable")]),_:1}),a(".")]),Ms,n("ul",null,[Hs,n("li",null,[a("discouraged: Use locator-based ["),Is,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),Ds,n("p",null,[a("Returns whether the element is "),s(o,{to:"/book/playwright/actionability.html#enabled"},{default:p(()=>[a("enabled")]),_:1}),a(".")]),Os,n("ul",null,[Bs,n("li",null,[a("discouraged: Use locator-based ["),zs,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),Ns,n("p",null,[a("Returns whether the element is hidden, the opposite of "),s(o,{to:"/book/playwright/actionability.html#visible"},{default:p(()=>[a("visible")]),_:1}),a(". ["),Vs,a("] that does not match any elements is considered hidden.")]),Gs,n("ul",null,[Js,n("li",null,[a("discouraged: Use locator-based ["),$s,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),Ks,n("p",null,[a("Returns whether the element is "),s(o,{to:"/book/playwright/actionability.html#visible"},{default:p(()=>[a("visible")]),_:1}),a(". ["),Ys,a("] that does not match any elements is considered not visible.")]),Xs,n("p",null,[a("Receives the [Dialog] object, it "),Zs,a(" either ["),Qs,a("] or ["),nt,a("] the dialog - otherwise"),at,a(" the page will "),n("a",st,[a("freeze"),s(e)]),a(" waiting for the dialog,"),tt,a(" and actions like click will never finish.")]),et,n("div",ot,[pt,n("p",null,[a("By default, "),it,a(" generates a pdf with modified colors for printing. Use the"),ct,n("a",lt,[ut,s(e)]),a(" property to"),rt,a(" force rendering of exact colors.")])]),dt,n("ul",null,[kt,n("li",null,[a("discouraged: Use locator-based ["),ht,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),gt,n("p",null,[a("["),vt,a("] can specify the intended"),mt,n("a",bt,[a("keyboardEvent.key"),s(e)]),a(" value or a single character to"),ft,a(" generate the text for. A superset of the ["),wt,a("] values can be found"),yt,n("a",qt,[a("here"),s(e)]),a(". Examples of the keys are:")]),xt,n("ul",null,[_t,n("li",null,[a("discouraged: Use locator-based ["),Pt,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")]),jt]),St,n("ul",null,[At,n("li",null,[a("discouraged: Use locator-based ["),Rt,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")]),Tt]),Ft,n("div",Ct,[Lt,n("p",null,[a("["),Et,a("] will not intercept requests intercepted by Service Worker. See "),n("a",Wt,[a("this"),s(e)]),a(" issue. We recommend disabling Service Workers when using request interception by setting ["),Ut,a("] to "),Mt,a(".")])]),Ht,n("p",null,[a("A glob pattern, regex pattern or predicate receiving [URL] to match while routing."),It,a(" When a ["),Dt,a("] via the context options was provided and the passed URL is a path,"),Ot,a(" it gets merged via the "),n("a",Bt,[zt,s(e)]),a(" constructor.")]),Nt,n("p",null,[a("If specified the network requests that are made in the page will be served from the HAR file. Read more about "),s(o,{to:"/book/playwright/network.html#replaying-from-har"},{default:p(()=>[a("Replaying from HAR")]),_:1}),a(".")]),n("p",null,[a("Playwright will not serve requests intercepted by Service Worker from the HAR file. See "),n("a",Vt,[a("this"),s(e)]),a(" issue. We recommend disabling Service Workers when using request interception by setting ["),Gt,a("] to "),Jt,a(".")]),$t,Kt,Yt,n("p",null,[a("Path to a "),n("a",Xt,[a("HAR"),s(e)]),a(" file with prerecorded network data. If "),Zt,a(" is a relative path, then it is resolved relative to the current working directory.")]),Qt,n("ul",null,[ne,n("li",null,[a("discouraged: Use locator-based ["),ae,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),se,n("p",null,[a("This method waits for an element matching ["),te,a("], waits for "),s(o,{to:"/book/playwright/actionability.html"},{default:p(()=>[a("actionability")]),_:1}),a(" checks, waits until all specified options are present in the "),ee,a(" element and selects these options.")]),n("p",null,[a("If the target element is not a "),oe,a(" element, this method throws an error. However, if the element is inside the "),pe,a(" element that has an associated "),n("a",ie,[a("control"),s(e)]),a(", the control will be used instead.")]),ce,n("ul",null,[le,n("li",null,[a("discouraged: Use locator-based ["),ue,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),re,n("ol",null,[de,ke,he,n("li",null,[a("Wait for "),s(o,{to:"/book/playwright/actionability.html"},{default:p(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),ge,a("] option is"),ve,a(" set. If the element is detached during the checks, the whole action is retried.")]),me,be,fe,we]),ye,n("ul",null,[qe,n("li",null,[a("discouraged: Use locator-based ["),xe,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),_e,n("p",null,[a("This method expects ["),Pe,a("] to point to an"),je,n("a",Se,[a("input element"),s(e)]),a(". However, if the element is inside the "),Ae,a(" element that has an associated "),n("a",Re,[a("control"),s(e)]),a(", targets the control instead.")]),Te,n("ul",null,[Fe,n("li",null,[a("discouraged: Use locator-based ["),Ce,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),Le,n("ol",null,[Ee,n("li",null,[a("Wait for "),s(o,{to:"/book/playwright/actionability.html"},{default:p(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),We,a("] option is"),Ue,a(" set. If the element is detached during the checks, the whole action is retried.")]),Me,He,Ie]),De,n("ul",null,[Oe,n("li",null,[a("discouraged: Use locator-based ["),Be,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),ze,n("ul",null,[Ne,n("li",null,[a("discouraged: Use locator-based ["),Ve,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),Ge,n("ul",null,[Je,n("li",null,[a("discouraged: Use locator-based ["),$e,a("] instead. Read more about "),s(o,{to:"/book/playwright/locators.html"},{default:p(()=>[a("locators")]),_:1}),a(".")])]),Ke,n("ol",null,[Ye,Xe,n("li",null,[a("Wait for "),s(o,{to:"/book/playwright/actionability.html"},{default:p(()=>[a("actionability")]),_:1}),a(" checks on the matched element, unless ["),Ze,a("] option is"),Qe,a(" set. If the element is detached during the checks, the whole action is retried.")]),no,ao,so,to]),eo,n("div",oo,[po,n("p",null,[a("Usage of the "),n("a",io,[a("History API"),s(e)]),a(" to change the URL is considered"),co,a(" a navigation.")])]),lo,n("p",null,[a("Waits for the matching request and returns it. See "),s(o,{to:"/book/playwright/events.html#waiting-for-event"},{default:p(()=>[a("waiting for event")]),_:1}),a(" for more details about events.")]),uo,n("p",null,[a("Request URL string, regex or predicate receiving [Request] object."),ro,a(" When a ["),ko,a("] via the context options was provided and the passed URL is a path,"),ho,a(" it gets merged via the "),n("a",go,[vo,s(e)]),a(" constructor.")]),mo,n("p",null,[a("Returns the matched response. See "),s(o,{to:"/book/playwright/events.html#waiting-for-event"},{default:p(()=>[a("waiting for event")]),_:1}),a(" for more details about events.")]),bo,n("p",null,[a("Request URL string, regex or predicate receiving [Response] object."),fo,a(" When a ["),wo,a("] via the context options was provided and the passed URL is a path,"),yo,a(" it gets merged via the "),n("a",qo,[xo,s(e)]),a(" constructor.")]),_o,Po,jo,n("p",null,[a("Request URL string, regex or predicate receiving [Response] object."),So,a(" When a ["),Ao,a("] via the context options was provided and the passed URL is a path,"),Ro,a(" it gets merged via the "),n("a",To,[Fo,s(e)]),a(" constructor.")]),Co,n("p",null,[a("This method returns all of the dedicated "),n("a",Lo,[a("WebWorkers"),s(e)]),Eo,a(" associated with the page.")]),Wo])}const Oo=c(r,[["render",Uo],["__file","class-page.html.vue"]]);export{Oo as default};
