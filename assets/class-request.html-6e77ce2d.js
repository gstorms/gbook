import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c,a as n,b as s,d as t,f as e}from"./app-3f278ba4.js";const l={},u=e(`<h1 id="class-request" tabindex="-1"><a class="header-anchor" href="#class-request" aria-hidden="true">#</a> class: Request</h1><ul><li>since: v1.8</li></ul><p>Whenever the page sends a request for a network resource the following sequence of events are emitted by [Page]:</p><ul><li>[<code>event: Page.request</code>] emitted when the request is issued by the page.</li><li>[<code>event: Page.response</code>] emitted when/if the response status and headers are received for the request.</li><li>[<code>event: Page.requestFinished</code>] emitted when the response body is downloaded and the request is complete.</li></ul><p>If request fails at some point, then instead of <code>&#39;requestfinished&#39;</code> event (and possibly instead of &#39;response&#39; event),<br> the [<code>event: Page.requestFailed</code>] event is emitted.</p><div class="hint-container note"><p class="hint-container-title">æ³¨</p><p>HTTP Error responses, such as 404 or 503, are still successful responses from HTTP standpoint, so request will complete<br> with <code>&#39;requestfinished&#39;</code> event.</p></div><p>If request gets a &#39;redirect&#39; response, the request is successfully finished with the <code>requestfinished</code> event, and a new<br> request is issued to a redirected url.</p><h2 id="async-method-request-allheaders" tabindex="-1"><a class="header-anchor" href="#async-method-request-allheaders" aria-hidden="true">#</a> async method: Request.allHeaders</h2><ul><li>since: v1.15</li></ul><ul><li>returns: &lt;[Object]&lt;[string], [string]&gt;&gt;</li></ul><p>An object with all the request HTTP headers associated with this request. The header names are lower-cased.</p><h2 id="method-request-failure" tabindex="-1"><a class="header-anchor" href="#method-request-failure" aria-hidden="true">#</a> method: Request.failure</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[string]&gt;</li></ul><p>The method returns <code>null</code> unless this request has failed, as reported by <code>requestfailed</code> event.</p><p><strong>Usage</strong></p><p>Example of logging of all the failed requests:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;requestfailed&#39;</span><span class="token punctuation">,</span> <span class="token parameter">request</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>errorText<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">onRequestFailed</span><span class="token punctuation">(</span>request <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;requestfailed&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> request<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>failure<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>page<span class="token punctuation">.</span>RequestFailed <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> request<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Failure<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="method-request-failure-1" tabindex="-1"><a class="header-anchor" href="#method-request-failure-1" aria-hidden="true">#</a> method: Request.failure</h2><ul><li>since: v1.8</li><li>langs: js</li></ul><ul><li>returns: &lt;[null]|[Object]&gt; <ul><li><code>errorText</code> &lt;[string]&gt; Human-readable error message, e.g. <code>&#39;net::ERR_FAILED&#39;</code>.</li></ul></li></ul><h2 id="method-request-frame" tabindex="-1"><a class="header-anchor" href="#method-request-frame" aria-hidden="true">#</a> method: Request.frame</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Frame]&gt;</li></ul><p>Returns the [Frame] that initiated this request.</p><h2 id="method-request-headers" tabindex="-1"><a class="header-anchor" href="#method-request-headers" aria-hidden="true">#</a> method: Request.headers</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Object]&lt;[string], [string]&gt;&gt;</li></ul><p>An object with the request HTTP headers. The header names are lower-cased.<br> Note that this method does not return security-related headers, including cookie-related ones.<br> You can use [<code>method: Request.allHeaders</code>] for complete list of headers that include <code>cookie</code> information.</p><h2 id="async-method-request-headersarray" tabindex="-1"><a class="header-anchor" href="#async-method-request-headersarray" aria-hidden="true">#</a> async method: Request.headersArray</h2><ul><li>since: v1.15</li></ul><ul><li>returns: &lt;[Array]&lt;[Object]&gt;&gt; <ul><li><code>name</code> &lt;[string]&gt; Name of the header.</li><li><code>value</code> &lt;[string]&gt; Value of the header.</li></ul></li></ul><p>An array with all the request HTTP headers associated with this request. Unlike [<code>method: Request.allHeaders</code>], header names are NOT lower-cased.<br> Headers with multiple entries, such as <code>Set-Cookie</code>, appear in the array multiple times.</p><h2 id="async-method-request-headervalue" tabindex="-1"><a class="header-anchor" href="#async-method-request-headervalue" aria-hidden="true">#</a> async method: Request.headerValue</h2><ul><li>since: v1.15</li></ul><ul><li>returns: &lt;[null]|[string]&gt;</li></ul><p>Returns the value of the header matching the name. The name is case insensitive.</p>`,40),r={id:"param-request-headervalue-name",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#param-request-headervalue-name","aria-hidden":"true"},"#",-1),h={href:"http://Request.headerValue.name",target:"_blank",rel:"noopener noreferrer"},k=e(`<ul><li>since: v1.15</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Name of the header.</p><h2 id="method-request-isnavigationrequest" tabindex="-1"><a class="header-anchor" href="#method-request-isnavigationrequest" aria-hidden="true">#</a> method: Request.isNavigationRequest</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[boolean]&gt;</li></ul><p>Whether this request is driving frame&#39;s navigation.</p><h2 id="method-request-method" tabindex="-1"><a class="header-anchor" href="#method-request-method" aria-hidden="true">#</a> method: Request.method</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Request&#39;s method (GET, POST, etc.)</p><h2 id="method-request-postdata" tabindex="-1"><a class="header-anchor" href="#method-request-postdata" aria-hidden="true">#</a> method: Request.postData</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[string]&gt;</li></ul><p>Request&#39;s post body, if any.</p><h2 id="method-request-postdatabuffer" tabindex="-1"><a class="header-anchor" href="#method-request-postdatabuffer" aria-hidden="true">#</a> method: Request.postDataBuffer</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Buffer]&gt;</li></ul><p>Request&#39;s post body in a binary form, if any.</p><h2 id="method-request-postdatajson" tabindex="-1"><a class="header-anchor" href="#method-request-postdatajson" aria-hidden="true">#</a> method: Request.postDataJSON</h2><ul><li>since: v1.8</li><li>langs: js, python</li></ul><ul><li>returns: &lt;[null]|[Serializable]&gt;</li></ul><p>Returns parsed request&#39;s body for <code>form-urlencoded</code> and JSON as a fallback if any.</p><p>When the response is <code>application/x-www-form-urlencoded</code> then a key/value object of the values will be returned.<br> Otherwise it will be parsed as JSON.</p><h2 id="method-request-postdatajson-1" tabindex="-1"><a class="header-anchor" href="#method-request-postdatajson-1" aria-hidden="true">#</a> method: Request.postDataJSON</h2><ul><li>since: v1.12</li><li>langs: csharp</li></ul><ul><li>returns: &lt;[null]|[JsonElement]&gt;</li></ul><p>Returns parsed request&#39;s body for <code>form-urlencoded</code> and JSON as a fallback if any.</p><p>When the response is <code>application/x-www-form-urlencoded</code> then a key/value object of the values will be returned.<br> Otherwise it will be parsed as JSON.</p><h2 id="method-request-redirectedfrom" tabindex="-1"><a class="header-anchor" href="#method-request-redirectedfrom" aria-hidden="true">#</a> method: Request.redirectedFrom</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Request]&gt;</li></ul><p>Request that was redirected by the server to this one, if any.</p><p>When the server responds with a redirect, Playwright creates a new [Request] object. The two requests are connected by<br><code>redirectedFrom()</code> and <code>redirectedTo()</code> methods. When multiple server redirects has happened, it is possible to<br> construct the whole redirect chain by repeatedly calling <code>redirectedFrom()</code>.</p><p><strong>Usage</strong></p><p>For example, if the website <code>http://example.com</code> redirects to <code>https://example.com</code>:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;http://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">redirectedFrom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;http://example.com&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Response</span> response <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;http://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">redirectedFrom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;http://example.com&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>response <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;http://example.com&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>request<span class="token punctuation">.</span>redirected_from<span class="token punctuation">.</span>url<span class="token punctuation">)</span> <span class="token comment"># &quot;http://example.com&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>response <span class="token operator">=</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;http://example.com&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>request<span class="token punctuation">.</span>redirected_from<span class="token punctuation">.</span>url<span class="token punctuation">)</span> <span class="token comment"># &quot;http://example.com&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;http://www.microsoft.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>RedirectedFrom<span class="token punctuation">?.</span>Url<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// http://www.microsoft.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>If the website <code>https://google.com</code> has no redirects:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://google.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">redirectedFrom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Response</span> response <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://google.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">redirectedFrom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>response <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://google.com&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>request<span class="token punctuation">.</span>redirected_from<span class="token punctuation">)</span> <span class="token comment"># None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>response <span class="token operator">=</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://google.com&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>request<span class="token punctuation">.</span>redirected_from<span class="token punctuation">)</span> <span class="token comment"># None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.google.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>RedirectedFrom<span class="token punctuation">?.</span>Url<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="method-request-redirectedto" tabindex="-1"><a class="header-anchor" href="#method-request-redirectedto" aria-hidden="true">#</a> method: Request.redirectedTo</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Request]&gt;</li></ul><p>New request issued by the browser if the server responded with redirect.</p><p><strong>Usage</strong></p><p>This method is the opposite of [<code>method: Request.redirectedFrom</code>]:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">redirectedFrom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">redirectedTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">redirectedFrom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">redirectedTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">assert</span> request<span class="token punctuation">.</span>redirected_from<span class="token punctuation">.</span>redirected_to <span class="token operator">==</span> request
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>RedirectedFrom<span class="token punctuation">?.</span>RedirectedTo <span class="token operator">==</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="method-request-resourcetype" tabindex="-1"><a class="header-anchor" href="#method-request-resourcetype" aria-hidden="true">#</a> method: Request.resourceType</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>Contains the request&#39;s resource type as it was perceived by the rendering engine. ResourceType will be one of the<br> following: <code>document</code>, <code>stylesheet</code>, <code>image</code>, <code>media</code>, <code>font</code>, <code>script</code>, <code>texttrack</code>, <code>xhr</code>, <code>fetch</code>, <code>eventsource</code>,<br><code>websocket</code>, <code>manifest</code>, <code>other</code>.</p><h2 id="async-method-request-response" tabindex="-1"><a class="header-anchor" href="#async-method-request-response" aria-hidden="true">#</a> async method: Request.response</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[null]|[Response]&gt;</li></ul><p>Returns the matching [Response] object, or <code>null</code> if the response was not received due to error.</p><h2 id="method-request-serviceworker" tabindex="-1"><a class="header-anchor" href="#method-request-serviceworker" aria-hidden="true">#</a> method: Request.serviceWorker</h2><ul><li>since: v1.24</li><li>langs: js</li></ul><ul><li>returns: &lt;[null]|[Worker]&gt;</li></ul><div class="hint-container note"><p class="hint-container-title">æ³¨</p><p>This field is Chromium only. It&#39;s safe to call when using other browsers, but it will always be <code>null</code>.</p></div><p>The Service [Worker] that is performing the request.</p><h2 id="async-method-request-sizes" tabindex="-1"><a class="header-anchor" href="#async-method-request-sizes" aria-hidden="true">#</a> async method: Request.sizes</h2><ul><li>since: v1.15</li></ul><ul><li>returns: &lt;[Object]&gt; <ul><li><code>requestBodySize</code> &lt;[int]&gt; Size of the request body (POST data payload) in bytes. Set to 0 if there was no body.</li><li><code>requestHeadersSize</code> &lt;[int]&gt; Total number of bytes from the start of the HTTP request message until (and including) the double CRLF before the body.</li><li><code>responseBodySize</code> &lt;[int]&gt; Size of the received response body (encoded) in bytes.</li><li><code>responseHeadersSize</code> &lt;[int]&gt; Total number of bytes from the start of the HTTP response message until (and including) the double CRLF before the body.</li></ul></li></ul><p>Returns resource size information for given request.</p><h2 id="method-request-timing" tabindex="-1"><a class="header-anchor" href="#method-request-timing" aria-hidden="true">#</a> method: Request.timing</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[Object]&gt; <ul><li><code>startTime</code> &lt;[float]&gt; Request start time in milliseconds elapsed since January 1, 1970 00:00:00 UTC</li><li><code>domainLookupStart</code> &lt;[float]&gt; Time immediately before the browser starts the domain name lookup for the<br> resource. The value is given in milliseconds relative to <code>startTime</code>, -1 if not available.</li><li><code>domainLookupEnd</code> &lt;[float]&gt; Time immediately after the browser starts the domain name lookup for the resource.<br> The value is given in milliseconds relative to <code>startTime</code>, -1 if not available.</li><li><code>connectStart</code> &lt;[float]&gt; Time immediately before the user agent starts establishing the connection to the server<br> to retrieve the resource. The value is given in milliseconds relative to <code>startTime</code>, -1 if not available.</li><li><code>secureConnectionStart</code> &lt;[float]&gt; Time immediately before the browser starts the handshake process to secure the<br> current connection. The value is given in milliseconds relative to <code>startTime</code>, -1 if not available.</li><li><code>connectEnd</code> &lt;[float]&gt; Time immediately before the user agent starts establishing the connection to the server<br> to retrieve the resource. The value is given in milliseconds relative to <code>startTime</code>, -1 if not available.</li><li><code>requestStart</code> &lt;[float]&gt; Time immediately before the browser starts requesting the resource from the server,<br> cache, or local resource. The value is given in milliseconds relative to <code>startTime</code>, -1 if not available.</li><li><code>responseStart</code> &lt;[float]&gt; Time immediately after the browser starts requesting the resource from the server,<br> cache, or local resource. The value is given in milliseconds relative to <code>startTime</code>, -1 if not available.</li><li><code>responseEnd</code> &lt;[float]&gt; Time immediately after the browser receives the last byte of the resource or immediately<br> before the transport connection is closed, whichever comes first. The value is given in milliseconds relative to<br><code>startTime</code>, -1 if not available.</li></ul></li></ul>`,77),m=n("br",null,null,-1),v=n("code",null,"responseEnd",-1),g=n("br",null,null,-1),b={href:"https://developer.mozilla.org/en-US/docs/Web/API/PerformanceResourceTiming",target:"_blank",rel:"noopener noreferrer"},f=e(`<p><strong>Usage</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> requestFinishedPromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForEvent</span><span class="token punctuation">(</span><span class="token string">&#39;requestfinished&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;http://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token keyword">await</span> requestFinishedPromise<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">timing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">onRequestFinished</span><span class="token punctuation">(</span>request <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token class-name">Timing</span> timing <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">timing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>timing<span class="token punctuation">.</span>responseEnd <span class="token operator">-</span> timing<span class="token punctuation">.</span>startTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;http://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_event<span class="token punctuation">(</span><span class="token string">&quot;requestfinished&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> request_info<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;http://example.com&quot;</span><span class="token punctuation">)</span>
request <span class="token operator">=</span> <span class="token keyword">await</span> request_info<span class="token punctuation">.</span>value
<span class="token keyword">print</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>timing<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_event<span class="token punctuation">(</span><span class="token string">&quot;requestfinished&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> request_info<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;http://example.com&quot;</span><span class="token punctuation">)</span>
request <span class="token operator">=</span> request_info<span class="token punctuation">.</span>value
<span class="token keyword">print</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>timing<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> request <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RunAndWaitForRequestFinishedAsync</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.microsoft.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>Timing<span class="token punctuation">.</span>ResponseEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="method-request-url" tabindex="-1"><a class="header-anchor" href="#method-request-url" aria-hidden="true">#</a> method: Request.url</h2><ul><li>since: v1.8</li></ul><ul><li>returns: &lt;[string]&gt;</li></ul><p>URL of the request.</p>`,10);function q(y,w){const a=p("ExternalLinkIcon");return i(),c("div",null,[u,n("h3",r,[d,s(" param: "),n("a",h,[s("Request.headerValue.name"),t(a)])]),k,n("p",null,[s("Returns resource timing information for given request. Most of the timing values become available upon the response,"),m,v,s(" becomes available when request finishes. Find more information at"),g,n("a",b,[s("Resource Timing API"),t(a)]),s(".")]),f])}const R=o(l,[["render",q],["__file","class-request.html.vue"]]);export{R as default};
