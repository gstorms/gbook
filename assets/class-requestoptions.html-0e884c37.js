import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as p,c as l,a as s,b as e,d as t,f as n}from"./app-207e7d61.js";const r={},u=n(`<h1 id="class-requestoptions" tabindex="-1"><a class="header-anchor" href="#class-requestoptions" aria-hidden="true">#</a> class: RequestOptions</h1><ul><li>since: v1.18</li><li>langs: java</li></ul><p>The [RequestOptions] allows to create form data to be sent via [APIRequestContext]. Playwright will automatically<br> determine content type of the request.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>context<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>
  <span class="token string">&quot;https://example.com/submit&quot;</span><span class="token punctuation">,</span>
  <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">setQueryParam</span><span class="token punctuation">(</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&quot;My data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Uploading html form data</strong></p><p>[FormData] class can be used to send a form to the server, by default the request will use <code>application/x-www-form-urlencoded</code> encoding:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>context<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/signup&quot;</span><span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setForm</span><span class="token punctuation">(</span>
  <span class="token class-name">FormData</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;firstName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;lastName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Doe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),c={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST",target:"_blank",rel:"noopener noreferrer"},d=s("code",null,"multipart/form-data",-1),h=n(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Path</span> path <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;members.csv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">APIResponse</span> response <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/upload_members&quot;</span><span class="token punctuation">,</span>
  <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMultipart</span><span class="token punctuation">(</span><span class="token class-name">FormData</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;membersList&quot;</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Alternatively, you can build the file payload manually:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">FilePayload</span> filePayload <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilePayload</span><span class="token punctuation">(</span><span class="token string">&quot;members.csv&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/csv&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Alice, 33\\nJohn, 35\\n&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">APIResponse</span> response <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/upload_members&quot;</span><span class="token punctuation">,</span>
  <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMultipart</span><span class="token punctuation">(</span><span class="token class-name">FormData</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;membersList&quot;</span><span class="token punctuation">,</span> filePayload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="method-requestoptions-create" tabindex="-1"><a class="header-anchor" href="#method-requestoptions-create" aria-hidden="true">#</a> method: RequestOptions.create</h2><ul><li>since: v1.18</li></ul><ul><li>returns: &lt;[RequestOptions]&gt;</li></ul><p>Creates new instance of [RequestOptions].</p><h2 id="method-requestoptions-setdata" tabindex="-1"><a class="header-anchor" href="#method-requestoptions-setdata" aria-hidden="true">#</a> method: RequestOptions.setData</h2><ul><li>since: v1.18</li></ul><ul><li>returns: &lt;[RequestOptions]&gt;</li></ul><p>Sets the request&#39;s post data.</p><h3 id="param-requestoptions-setdata-data" tabindex="-1"><a class="header-anchor" href="#param-requestoptions-setdata-data" aria-hidden="true">#</a> param: RequestOptions.setData.data</h3><ul><li>since: v1.18</li></ul><ul><li><code>data</code> &lt;[string]|[Buffer]|[Serializable]&gt;</li></ul><p>Allows to set post data of the request. If the data parameter is an object, it will be serialized to json string<br> and <code>content-type</code> header will be set to <code>application/json</code> if not explicitly set. Otherwise the <code>content-type</code> header will be<br> set to <code>application/octet-stream</code> if not explicitly set.</p><h2 id="method-requestoptions-setfailonstatuscode" tabindex="-1"><a class="header-anchor" href="#method-requestoptions-setfailonstatuscode" aria-hidden="true">#</a> method: RequestOptions.setFailOnStatusCode</h2><ul><li>since: v1.18</li></ul><ul><li>returns: &lt;[RequestOptions]&gt;</li></ul><h3 id="param-requestoptions-setfailonstatuscode-failonstatuscode" tabindex="-1"><a class="header-anchor" href="#param-requestoptions-setfailonstatuscode-failonstatuscode" aria-hidden="true">#</a> param: RequestOptions.setFailOnStatusCode.failOnStatusCode</h3><ul><li>since: v1.18</li></ul><ul><li><code>failOnStatusCode</code> &lt;[boolean]&gt;</li></ul><p>Whether to throw on response codes other than 2xx and 3xx. By default response object is returned<br> for all status codes.</p><h2 id="method-requestoptions-setform" tabindex="-1"><a class="header-anchor" href="#method-requestoptions-setform" aria-hidden="true">#</a> method: RequestOptions.setForm</h2><ul><li>since: v1.18</li></ul><ul><li>returns: &lt;[RequestOptions]&gt;</li></ul><p>Provides [FormData] object that will be serialized as html form using <code>application/x-www-form-urlencoded</code> encoding and sent as<br> this request body. If this parameter is specified <code>content-type</code> header will be set to <code>application/x-www-form-urlencoded</code><br> unless explicitly provided.</p><h3 id="param-requestoptions-setform-form" tabindex="-1"><a class="header-anchor" href="#param-requestoptions-setform-form" aria-hidden="true">#</a> param: RequestOptions.setForm.form</h3><ul><li>since: v1.18</li></ul><ul><li><code>form</code> &lt;[FormData]&gt;</li></ul><p>Form data to be serialized as html form using <code>application/x-www-form-urlencoded</code> encoding and sent as<br> this request body.</p><h2 id="method-requestoptions-setheader" tabindex="-1"><a class="header-anchor" href="#method-requestoptions-setheader" aria-hidden="true">#</a> method: RequestOptions.setHeader</h2><ul><li>since: v1.18</li></ul><ul><li>returns: &lt;[RequestOptions]&gt;</li></ul><p>Sets an HTTP header to the request. This header will apply to the fetched request as well as any redirects initiated by it.</p>`,34),m={id:"param-requestoptions-setheader-name",tabindex:"-1"},k=s("a",{class:"header-anchor",href:"#param-requestoptions-setheader-name","aria-hidden":"true"},"#",-1),q={href:"http://RequestOptions.setHeader.name",target:"_blank",rel:"noopener noreferrer"},f=n('<ul><li>since: v1.18</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Header name.</p><h3 id="param-requestoptions-setheader-value" tabindex="-1"><a class="header-anchor" href="#param-requestoptions-setheader-value" aria-hidden="true">#</a> param: RequestOptions.setHeader.value</h3><ul><li>since: v1.18</li></ul><ul><li><code>value</code> &lt;[string]&gt;</li></ul><p>Header value.</p><h2 id="method-requestoptions-setignorehttpserrors" tabindex="-1"><a class="header-anchor" href="#method-requestoptions-setignorehttpserrors" aria-hidden="true">#</a> method: RequestOptions.setIgnoreHTTPSErrors</h2><ul><li>since: v1.18</li></ul><ul><li>returns: &lt;[RequestOptions]&gt;</li></ul><h3 id="param-requestoptions-setignorehttpserrors-ignorehttpserrors" tabindex="-1"><a class="header-anchor" href="#param-requestoptions-setignorehttpserrors-ignorehttpserrors" aria-hidden="true">#</a> param: RequestOptions.setIgnoreHTTPSErrors.ignoreHTTPSErrors</h3><ul><li>since: v1.18</li></ul><ul><li><code>ignoreHTTPSErrors</code> &lt;[boolean]&gt;</li></ul><p>Whether to ignore HTTPS errors when sending network requests.</p><h2 id="method-requestoptions-setmaxredirects" tabindex="-1"><a class="header-anchor" href="#method-requestoptions-setmaxredirects" aria-hidden="true">#</a> method: RequestOptions.setMaxRedirects</h2><ul><li>since: v1.26</li></ul><ul><li>returns: &lt;[RequestOptions]&gt;</li></ul><h3 id="param-requestoptions-setmaxredirects-maxredirects" tabindex="-1"><a class="header-anchor" href="#param-requestoptions-setmaxredirects-maxredirects" aria-hidden="true">#</a> param: RequestOptions.setMaxRedirects.maxRedirects</h3><ul><li>since: v1.26</li></ul><ul><li><code>maxRedirects</code> &lt;[int]&gt;</li></ul><p>Maximum number of request redirects that will be followed automatically. An error will be thrown if the number is exceeded.<br> Defaults to <code>20</code>. Pass <code>0</code> to not follow redirects.</p><h2 id="method-requestoptions-setmethod" tabindex="-1"><a class="header-anchor" href="#method-requestoptions-setmethod" aria-hidden="true">#</a> method: RequestOptions.setMethod</h2><ul><li>since: v1.18</li></ul><ul><li>returns: &lt;[RequestOptions]&gt;</li></ul>',24),v={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT",target:"_blank",rel:"noopener noreferrer"},b=s("br",null,null,-1),g={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST",target:"_blank",rel:"noopener noreferrer"},x=s("h3",{id:"param-requestoptions-setmethod-method",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#param-requestoptions-setmethod-method","aria-hidden":"true"},"#"),e(" param: RequestOptions.setMethod.method")],-1),_=s("ul",null,[s("li",null,"since: v1.18")],-1),R=s("ul",null,[s("li",null,[s("code",null,"method"),e(" <[string]>")])],-1),O={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST",target:"_blank",rel:"noopener noreferrer"},y=n('<h2 id="method-requestoptions-setmultipart" tabindex="-1"><a class="header-anchor" href="#method-requestoptions-setmultipart" aria-hidden="true">#</a> method: RequestOptions.setMultipart</h2><ul><li>since: v1.18</li></ul><ul><li>returns: &lt;[RequestOptions]&gt;</li></ul><p>Provides [FormData] object that will be serialized as html form using <code>multipart/form-data</code> encoding and sent as<br> this request body. If this parameter is specified <code>content-type</code> header will be set to <code>multipart/form-data</code><br> unless explicitly provided.</p><h3 id="param-requestoptions-setmultipart-form" tabindex="-1"><a class="header-anchor" href="#param-requestoptions-setmultipart-form" aria-hidden="true">#</a> param: RequestOptions.setMultipart.form</h3><ul><li>since: v1.18</li></ul><ul><li><code>form</code> &lt;[FormData]&gt;</li></ul><p>Form data to be serialized as html form using <code>multipart/form-data</code> encoding and sent as<br> this request body.</p><h2 id="method-requestoptions-setqueryparam" tabindex="-1"><a class="header-anchor" href="#method-requestoptions-setqueryparam" aria-hidden="true">#</a> method: RequestOptions.setQueryParam</h2><ul><li>since: v1.18</li></ul><ul><li>returns: &lt;[RequestOptions]&gt;</li></ul><p>Adds a query parameter to the request URL.</p>',12),w={id:"param-requestoptions-setqueryparam-name",tabindex:"-1"},P=s("a",{class:"header-anchor",href:"#param-requestoptions-setqueryparam-name","aria-hidden":"true"},"#",-1),T={href:"http://RequestOptions.setQueryParam.name",target:"_blank",rel:"noopener noreferrer"},S=n('<ul><li>since: v1.18</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Parameter name.</p><h3 id="param-requestoptions-setqueryparam-value" tabindex="-1"><a class="header-anchor" href="#param-requestoptions-setqueryparam-value" aria-hidden="true">#</a> param: RequestOptions.setQueryParam.value</h3><ul><li>since: v1.18</li></ul><ul><li><code>value</code> &lt;[string]|[boolean]|[int]&gt;</li></ul><p>Parameter value.</p><h2 id="method-requestoptions-settimeout" tabindex="-1"><a class="header-anchor" href="#method-requestoptions-settimeout" aria-hidden="true">#</a> method: RequestOptions.setTimeout</h2><ul><li>since: v1.18</li></ul><ul><li>returns: &lt;[RequestOptions]&gt;</li></ul><p>Sets request timeout in milliseconds. Defaults to <code>30000</code> (30 seconds). Pass <code>0</code> to disable timeout.</p><h3 id="param-requestoptions-settimeout-timeout" tabindex="-1"><a class="header-anchor" href="#param-requestoptions-settimeout-timeout" aria-hidden="true">#</a> param: RequestOptions.setTimeout.timeout</h3><ul><li>since: v1.18</li></ul><ul><li><code>timeout</code> &lt;[float]&gt;</li></ul><p>Request timeout in milliseconds.</p>',15);function j(F,H){const a=i("ExternalLinkIcon");return p(),l("div",null,[u,s("p",null,[e("You can also send files as fields of an html form. The data will be encoded using "),s("a",c,[d,t(a)]),e(":")]),h,s("h3",m,[k,e(" param: "),s("a",q,[e("RequestOptions.setHeader.name"),t(a)])]),f,s("p",null,[e("Changes the request method (e.g. "),s("a",v,[e("PUT"),t(a)]),e(" or"),b,s("a",g,[e("POST"),t(a)]),e(").")]),x,_,R,s("p",null,[e("Request method, e.g. "),s("a",O,[e("POST"),t(a)]),e(".")]),y,s("h3",w,[P,e(" param: "),s("a",T,[e("RequestOptions.setQueryParam.name"),t(a)])]),S])}const z=o(r,[["render",j],["__file","class-requestoptions.html.vue"]]);export{z as default};
