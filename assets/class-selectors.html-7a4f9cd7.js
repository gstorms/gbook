import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as i,c as l,a as n,b as s,d as t,w as u,f as e}from"./app-207e7d61.js";const r={},k=n("h1",{id:"class-selectors",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#class-selectors","aria-hidden":"true"},"#"),s(" class: Selectors")],-1),d=n("ul",null,[n("li",null,"since: v1.8")],-1),v=n("br",null,null,-1),m=e(`<h2 id="async-method-selectors-register" tabindex="-1"><a class="header-anchor" href="#async-method-selectors-register" aria-hidden="true">#</a> async method: Selectors.register</h2><ul><li>since: v1.8</li></ul><p>Selectors must be registered before creating the page.</p><p><strong>Usage</strong></p><p>An example of registering selector engine that queries elements based on a tag name:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> selectors<span class="token punctuation">,</span> firefox <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Or &#39;chromium&#39; or &#39;webkit&#39;.</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Must be a function that evaluates to a selector engine instance.</span>
  <span class="token keyword">const</span> <span class="token function-variable function">createTagNameEngine</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// Returns the first element matching given selector in the root&#39;s subtree.</span>
    <span class="token function">query</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> selector</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> root<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// Returns all elements matching given selector in the root&#39;s subtree.</span>
    <span class="token function">queryAll</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> selector</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Register the engine. Selectors will be prefixed with &quot;tag=&quot;.</span>
  <span class="token keyword">await</span> selectors<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&#39;tag&#39;</span><span class="token punctuation">,</span> createTagNameEngine<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> firefox<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;&lt;button&gt;Click me&lt;/button&gt;&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Use the selector prefixed with its name.</span>
  <span class="token keyword">const</span> button <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;tag=button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// We can combine it with built-in locators.</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;tag=div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Click me&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Can use it in any methods supporting selectors.</span>
  <span class="token keyword">const</span> buttonCount <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;tag=button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Script that evaluates to a selector engine instance. The script is evaluated in the page context.</span>
<span class="token class-name">String</span> createTagNameEngine <span class="token operator">=</span> <span class="token string">&quot;{\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  // Returns the first element matching given selector in the root&#39;s subtree.\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  query(root, selector) {\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;    return root.querySelector(selector);\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  },\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  // Returns all elements matching given selector in the root&#39;s subtree.\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  queryAll(root, selector) {\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;    return Array.from(root.querySelectorAll(selector));\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  }\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;}&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Register the engine. Selectors will be prefixed with &quot;tag=&quot;.</span>
playwright<span class="token punctuation">.</span><span class="token function">selectors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&quot;tag&quot;</span><span class="token punctuation">,</span> createTagNameEngine<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Browser</span> browser <span class="token operator">=</span> playwright<span class="token punctuation">.</span><span class="token function">firefox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Page</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;&lt;button&gt;Click me&lt;/button&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Use the selector prefixed with its name.</span>
<span class="token class-name">Locator</span> button <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;tag=button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Combine it with built-in locators.</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;tag=div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Click me&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Can use it in any methods supporting selectors.</span>
<span class="token keyword">int</span> buttonCount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;tag=button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    tag_selector <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
      {
          // Returns the first element matching given selector in the root&#39;s subtree.
          query(root, selector) {
              return root.querySelector(selector);
          },
          // Returns all elements matching given selector in the root&#39;s subtree.
          queryAll(root, selector) {
              return Array.from(root.querySelectorAll(selector));
          }
      }&quot;&quot;&quot;</span>

    <span class="token comment"># Register the engine. Selectors will be prefixed with &quot;tag=&quot;.</span>
    <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>selectors<span class="token punctuation">.</span>register<span class="token punctuation">(</span><span class="token string">&quot;tag&quot;</span><span class="token punctuation">,</span> tag_selector<span class="token punctuation">)</span>
    browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token string">&#39;&lt;div&gt;&lt;button&gt;Click me&lt;/button&gt;&lt;/div&gt;&#39;</span><span class="token punctuation">)</span>

    <span class="token comment"># Use the selector prefixed with its name.</span>
    button <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&#39;tag=button&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># Combine it with built-in locators.</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;tag=div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&#39;Click me&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># Can use it in any methods supporting selectors.</span>
    button_count <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;tag=button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>button_count<span class="token punctuation">)</span>
    <span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    tag_selector <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
      {
          // Returns the first element matching given selector in the root&#39;s subtree.
          query(root, selector) {
              return root.querySelector(selector);
          },
          // Returns all elements matching given selector in the root&#39;s subtree.
          queryAll(root, selector) {
              return Array.from(root.querySelectorAll(selector));
          }
      }&quot;&quot;&quot;</span>

    <span class="token comment"># Register the engine. Selectors will be prefixed with &quot;tag=&quot;.</span>
    playwright<span class="token punctuation">.</span>selectors<span class="token punctuation">.</span>register<span class="token punctuation">(</span><span class="token string">&quot;tag&quot;</span><span class="token punctuation">,</span> tag_selector<span class="token punctuation">)</span>
    browser <span class="token operator">=</span> playwright<span class="token punctuation">.</span>chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>set_content<span class="token punctuation">(</span><span class="token string">&#39;&lt;div&gt;&lt;button&gt;Click me&lt;/button&gt;&lt;/div&gt;&#39;</span><span class="token punctuation">)</span>

    <span class="token comment"># Use the selector prefixed with its name.</span>
    button <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;tag=button&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># Combine it with built-in locators.</span>
    page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;tag=div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&#39;Click me&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># Can use it in any methods supporting selectors.</span>
    button_count <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;tag=button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>button_count<span class="token punctuation">)</span>
    browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
    run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright</span><span class="token punctuation">;</span>

<span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Script that evaluates to a selector engine instance. The script is evaluated in the page context.</span>
<span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Selectors<span class="token punctuation">.</span><span class="token function">RegisterAsync</span><span class="token punctuation">(</span><span class="token string">&quot;tag&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Script <span class="token operator">=</span> <span class="token string">@&quot;{
    // Returns the first element matching given selector in the root&#39;s subtree.
    query(root, selector) {
        return root.querySelector(selector);
      },
      // Returns all elements matching given selector in the root&#39;s subtree.
      queryAll(root, selector) {
        return Array.from(root.querySelectorAll(selector));
      }
    }&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Chromium<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">SetContentAsync</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;&lt;button&gt;Click me&lt;/button&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Use the selector prefixed with its name.</span>
<span class="token class-name"><span class="token keyword">var</span></span> button <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;tag=button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Combine it with built-in locators.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;tag=div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;Click me&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Can use it in any methods supporting selectors.</span>
<span class="token class-name"><span class="token keyword">int</span></span> buttonCount <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;tag=button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">CountAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),g={id:"param-selectors-register-name",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#param-selectors-register-name","aria-hidden":"true"},"#",-1),h={href:"http://Selectors.register.name",target:"_blank",rel:"noopener noreferrer"},y=e('<ul><li>since: v1.8</li></ul><ul><li><code>name</code> &lt;[string]&gt;</li></ul><p>Name that is used in selectors as a prefix, e.g. <code>{name: &#39;foo&#39;}</code> enables <code>foo=myselectorbody</code> selectors. May only<br> contain <code>[a-zA-Z0-9_]</code> characters.</p><h3 id="param-selectors-register-script" tabindex="-1"><a class="header-anchor" href="#param-selectors-register-script" aria-hidden="true">#</a> param: Selectors.register.script</h3><ul><li>since: v1.8</li><li>langs: js</li></ul><ul><li><code>script</code> &lt;[function]|[string]|[Object]&gt; <ul><li><code>path</code> ?&lt;[path]&gt; Path to the JavaScript file. If <code>path</code> is a relative path, then it is resolved relative to the<br> current working directory. Optional.</li><li><code>content</code> ?&lt;[string]&gt; Raw script content. Optional.</li></ul></li></ul><p>Script that evaluates to a selector engine instance. The script is evaluated in the page context.</p><h3 id="param-selectors-register-script-1" tabindex="-1"><a class="header-anchor" href="#param-selectors-register-script-1" aria-hidden="true">#</a> param: Selectors.register.script</h3><ul><li>since: v1.8</li><li>langs: java</li></ul><ul><li><code>script</code> &lt;[string]|[path]&gt;</li></ul><p>Script that evaluates to a selector engine instance. The script is evaluated in the page context.</p><h3 id="param-selectors-register-script-2" tabindex="-1"><a class="header-anchor" href="#param-selectors-register-script-2" aria-hidden="true">#</a> param: Selectors.register.script</h3><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li><code>script</code> ?&lt;[string]&gt;</li></ul><p>Raw script content.</p><h3 id="option-selectors-register-script" tabindex="-1"><a class="header-anchor" href="#option-selectors-register-script" aria-hidden="true">#</a> option: Selectors.register.script</h3><ul><li>since: v1.8</li><li>langs: csharp</li></ul><ul><li><code>script</code> &lt;[string]&gt;</li></ul><p>Script that evaluates to a selector engine instance. The script is evaluated in the page context.</p><h3 id="option-selectors-register-path" tabindex="-1"><a class="header-anchor" href="#option-selectors-register-path" aria-hidden="true">#</a> option: Selectors.register.path</h3><ul><li>since: v1.8</li><li>langs: python</li></ul><ul><li><code>path</code> &lt;[path]&gt;</li></ul><p>Path to the JavaScript file. If <code>path</code> is a relative path, then it is resolved relative to the current working directory.</p><h3 id="option-selectors-register-path-1" tabindex="-1"><a class="header-anchor" href="#option-selectors-register-path-1" aria-hidden="true">#</a> option: Selectors.register.path</h3><ul><li>since: v1.8</li><li>langs: csharp</li></ul><ul><li><code>path</code> &lt;[path]&gt;</li></ul><p>Script that evaluates to a selector engine instance. The script is evaluated in the page context.</p><h3 id="option-selectors-register-contentscript" tabindex="-1"><a class="header-anchor" href="#option-selectors-register-contentscript" aria-hidden="true">#</a> option: Selectors.register.contentScript</h3><ul><li>since: v1.8</li></ul><ul><li><code>contentScript</code> &lt;[boolean]&gt;</li></ul><p>Whether to run this selector engine in isolated JavaScript environment. This environment has access to the same DOM, but<br> not any JavaScript objects from the frame&#39;s scripts. Defaults to <code>false</code>. Note that running as a content script is not<br> guaranteed when this engine is used together with other registered engines.</p><h2 id="method-selectors-settestidattribute" tabindex="-1"><a class="header-anchor" href="#method-selectors-settestidattribute" aria-hidden="true">#</a> method: Selectors.setTestIdAttribute</h2><ul><li>since: v1.27</li></ul><p>Defines custom attribute name to be used in [<code>method: Page.getByTestId</code>]. <code>data-testid</code> is used by default.</p><h3 id="param-selectors-settestidattribute-attributename" tabindex="-1"><a class="header-anchor" href="#param-selectors-settestidattribute-attributename" aria-hidden="true">#</a> param: Selectors.setTestIdAttribute.attributeName</h3><ul><li>since: v1.27</li></ul><ul><li><code>attributeName</code> &lt;[string]&gt;</li></ul><p>Test id attribute name.</p>',38);function w(f,q){const o=a("RouterLink"),p=a("ExternalLinkIcon");return i(),l("div",null,[k,d,n("p",null,[s("Selectors can be used to install custom selector engines. See "),t(o,{to:"/book/playwright/extensibility.html"},{default:u(()=>[s("extensibility")]),_:1}),s(" for more"),v,s(" information.")]),m,n("h3",g,[b,s(" param: "),n("a",h,[s("Selectors.register.name"),t(p)])]),y])}const S=c(r,[["render",w],["__file","class-selectors.html.vue"]]);export{S as default};
