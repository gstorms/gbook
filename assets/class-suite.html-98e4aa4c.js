import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as i,f as s}from"./app-207e7d61.js";const l={},r=s('<h1 id="class-suite" tabindex="-1"><a class="header-anchor" href="#class-suite" aria-hidden="true">#</a> class: Suite</h1><ul><li>since: v1.10</li><li>langs: js</li></ul><p><code>Suite</code> is a group of tests. All tests in Playwright Test form the following hierarchy:</p><ul><li>Root suite has a child suite for each [TestProject]. <ul><li>Project suite #1. Has a child suite for each test file in the project. <ul><li>File suite #1 <ul><li>[TestCase] #1</li><li>[TestCase] #2</li><li>Suite corresponding to a [<code>method: Test.describe#1</code>] group <ul><li>[TestCase] #1 in a group</li><li>[TestCase] #2 in a group</li></ul></li><li>&lt; more test cases ... &gt;</li></ul></li><li>File suite #2</li><li>&lt; more file suites ... &gt;</li></ul></li><li>Project suite #2</li><li>&lt; more project suites ... &gt;</li></ul></li></ul><p>Reporter is given a root suite in the [<code>method: Reporter.onBegin</code>] method.</p><h2 id="method-suite-alltests" tabindex="-1"><a class="header-anchor" href="#method-suite-alltests" aria-hidden="true">#</a> method: Suite.allTests</h2><ul><li>since: v1.10</li></ul><ul><li>returns: &lt;[Array]&lt;[TestCase]&gt;&gt;</li></ul><p>Returns the list of all test cases in this suite and its descendants, as opposite to [<code>property: Suite.tests</code>].</p><h2 id="property-suite-location" tabindex="-1"><a class="header-anchor" href="#property-suite-location" aria-hidden="true">#</a> property: Suite.location</h2><ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[Location]&gt;</li></ul><p>Location in the source where the suite is defined. Missing for root and project suites.</p><h2 id="property-suite-parent" tabindex="-1"><a class="header-anchor" href="#property-suite-parent" aria-hidden="true">#</a> property: Suite.parent</h2><ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[Suite]&gt;</li></ul><p>Parent suite, missing for the root suite.</p><h2 id="method-suite-project" tabindex="-1"><a class="header-anchor" href="#method-suite-project" aria-hidden="true">#</a> method: Suite.project</h2><ul><li>since: v1.10</li></ul><ul><li>returns: ?&lt;[TestProject]&gt;</li></ul><p>Configuration of the project this suite belongs to, or [void] for the root suite.</p><h2 id="property-suite-suites" tabindex="-1"><a class="header-anchor" href="#property-suite-suites" aria-hidden="true">#</a> property: Suite.suites</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[Array]&lt;[Suite]&gt;&gt;</li></ul><p>Child suites. See [Suite] for the hierarchy of suites.</p><h2 id="property-suite-tests" tabindex="-1"><a class="header-anchor" href="#property-suite-tests" aria-hidden="true">#</a> property: Suite.tests</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[Array]&lt;[TestCase]&gt;&gt;</li></ul><p>Test cases in the suite. Note that only test cases defined directly in this suite are in the list. Any test cases defined in nested [<code>method: Test.describe#1</code>] groups are listed<br> in the child [<code>property: Suite.suites</code>].</p><h2 id="property-suite-title" tabindex="-1"><a class="header-anchor" href="#property-suite-title" aria-hidden="true">#</a> property: Suite.title</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[string]&gt;</li></ul><p>Suite title.</p><ul><li>Empty for root suite.</li><li>Project name for project suite.</li><li>File path for file suite.</li><li>Title passed to [<code>method: Test.describe#1</code>] for a group suite.</li></ul><h2 id="method-suite-titlepath" tabindex="-1"><a class="header-anchor" href="#method-suite-titlepath" aria-hidden="true">#</a> method: Suite.titlePath</h2><ul><li>since: v1.10</li></ul><ul><li>returns: &lt;[Array]&lt;[string]&gt;&gt;</li></ul><p>Returns a list of titles from the root down to this suite.</p>',38),o=[r];function a(u,h){return t(),i("div",null,o)}const c=e(l,[["render",a],["__file","class-suite.html.vue"]]);export{c as default};
