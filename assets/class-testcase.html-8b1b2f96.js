import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as c,c as d,a as t,b as e,d as o,w as i,f as s}from"./app-207e7d61.js";const p={},h=s('<h1 id="class-testcase" tabindex="-1"><a class="header-anchor" href="#class-testcase" aria-hidden="true">#</a> class: TestCase</h1><ul><li>since: v1.10</li><li>langs: js</li></ul><p><code>TestCase</code> corresponds to every [<code>method: Test.(call)</code>] call in a test file. When a single [<code>method: Test.(call)</code>] is running in multiple projects or repeated multiple times, it will have multiple <code>TestCase</code> objects in corresponding projects&#39; suites.</p><h2 id="property-testcase-annotations" tabindex="-1"><a class="header-anchor" href="#property-testcase-annotations" aria-hidden="true">#</a> property: TestCase.annotations</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[Array]&lt;[Object]&gt;&gt; <ul><li><code>type</code> &lt;[string]&gt; Annotation type, for example <code>&#39;skip&#39;</code> or <code>&#39;fail&#39;</code>.</li><li><code>description</code> ?&lt;[string]&gt; Optional description.</li></ul></li></ul><p>The list of annotations applicable to the current test. Includes annotations from the test, annotations from all [<code>method: Test.describe#1</code>] groups the test belongs to and file-level annotations for the test file.</p><p>Annotations are available during test execution through [<code>property: TestInfo.annotations</code>].</p>',8),u=s('<h2 id="property-testcase-expectedstatus" tabindex="-1"><a class="header-anchor" href="#property-testcase-expectedstatus" aria-hidden="true">#</a> property: TestCase.expectedStatus</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[TestStatus]&lt;&quot;passed&quot;|&quot;failed&quot;|&quot;timedOut&quot;|&quot;skipped&quot;|&quot;interrupted&quot;&gt;&gt;</li></ul><p>Expected test status.</p><ul><li>Tests marked as [<code>method: Test.skip#1</code>] or [<code>method: Test.fixme#1</code>] are expected to be <code>&#39;skipped&#39;</code>.</li><li>Tests marked as [<code>method: Test.fail#1</code>] are expected to be <code>&#39;failed&#39;</code>.</li><li>Other tests are expected to be <code>&#39;passed&#39;</code>.</li></ul><p>See also [<code>property: TestResult.status</code>] for the actual status.</p>',6),m={id:"property-testcase-id",tabindex:"-1"},f=t("a",{class:"header-anchor",href:"#property-testcase-id","aria-hidden":"true"},"#",-1),y={href:"http://TestCase.id",target:"_blank",rel:"noopener noreferrer"},T=s('<ul><li>since: v1.25</li></ul><ul><li>type: &lt;[string]&gt;</li></ul><p>Unique test ID that is computed based on the test file name, test title and project name. Test ID can be used as a history ID.</p><h2 id="property-testcase-location" tabindex="-1"><a class="header-anchor" href="#property-testcase-location" aria-hidden="true">#</a> property: TestCase.location</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[Location]&gt;</li></ul><p>Location in the source where the test is defined.</p><h2 id="method-testcase-ok" tabindex="-1"><a class="header-anchor" href="#method-testcase-ok" aria-hidden="true">#</a> method: TestCase.ok</h2><ul><li>since: v1.10</li></ul><ul><li>returns: &lt;[boolean]&gt;</li></ul><p>Whether the test is considered running fine. Non-ok tests fail the test run with non-zero exit code.</p><h2 id="method-testcase-outcome" tabindex="-1"><a class="header-anchor" href="#method-testcase-outcome" aria-hidden="true">#</a> method: TestCase.outcome</h2><ul><li>since: v1.10</li></ul><ul><li>returns: &lt;[TestOutcome]&lt;&quot;skipped&quot;|&quot;expected&quot;|&quot;unexpected&quot;|&quot;flaky&quot;&gt;&gt;</li></ul><p>Testing outcome for this test. Note that outcome is not the same as [<code>property: TestResult.status</code>]:</p><ul><li>Test that is expected to fail and actually fails is <code>&#39;expected&#39;</code>.</li><li>Test that passes on a second retry is <code>&#39;flaky&#39;</code>.</li></ul><h2 id="property-testcase-parent" tabindex="-1"><a class="header-anchor" href="#property-testcase-parent" aria-hidden="true">#</a> property: TestCase.parent</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[Suite]&gt;</li></ul><p>Suite this test case belongs to.</p><h2 id="property-testcase-repeateachindex" tabindex="-1"><a class="header-anchor" href="#property-testcase-repeateachindex" aria-hidden="true">#</a> property: TestCase.repeatEachIndex</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[int]&gt;</li></ul>',23),g=t("code",null,"--repeat-each",-1),x=s('<h2 id="property-testcase-results" tabindex="-1"><a class="header-anchor" href="#property-testcase-results" aria-hidden="true">#</a> property: TestCase.results</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[Array]&lt;[TestResult]&gt;&gt;</li></ul><p>Results for each run of this test.</p><h2 id="property-testcase-retries" tabindex="-1"><a class="header-anchor" href="#property-testcase-retries" aria-hidden="true">#</a> property: TestCase.retries</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[int]&gt;</li></ul><p>The maximum number of retries given to this test in the configuration.</p>',8),b=s('<h2 id="property-testcase-timeout" tabindex="-1"><a class="header-anchor" href="#property-testcase-timeout" aria-hidden="true">#</a> property: TestCase.timeout</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[float]&gt;</li></ul><p>The timeout given to the test. Affected by [<code>property: TestConfig.timeout</code>], [<code>property: TestProject.timeout</code>], [<code>method: Test.setTimeout</code>], [<code>method: Test.slow#1</code>] and [<code>method: TestInfo.setTimeout</code>].</p><h2 id="property-testcase-title" tabindex="-1"><a class="header-anchor" href="#property-testcase-title" aria-hidden="true">#</a> property: TestCase.title</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[string]&gt;</li></ul><p>Test title as passed to the [<code>method: Test.(call)</code>] call.</p><h2 id="method-testcase-titlepath" tabindex="-1"><a class="header-anchor" href="#method-testcase-titlepath" aria-hidden="true">#</a> method: TestCase.titlePath</h2><ul><li>since: v1.10</li></ul><ul><li>returns: &lt;[Array]&lt;[string]&gt;&gt;</li></ul><p>Returns a list of titles from the root down to this test.</p>',12);function _(k,v){const a=l("RouterLink"),r=l("ExternalLinkIcon");return c(),d("div",null,[h,t("p",null,[e("Learn more about "),o(a,{to:"/book/playwright/test-annotations.html"},{default:i(()=>[e("test annotations")]),_:1}),e(".")]),u,t("h2",m,[f,e(" property: "),t("a",y,[e("TestCase.id"),o(r)])]),T,t("p",null,[e('Contains the repeat index when running in "repeat each" mode. This mode is enabled by passing '),g,e(" to the "),o(a,{to:"/book/playwright/test-cli.html"},{default:i(()=>[e("command line")]),_:1}),e(".")]),x,t("p",null,[e("Learn more about "),o(a,{to:"/book/playwright/test-retries.html#retries"},{default:i(()=>[e("test retries")]),_:1}),e(".")]),b])}const w=n(p,[["render",_],["__file","class-testcase.html.vue"]]);export{w as default};
