import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c,a as e,b as t,d as s,w as o,f as a}from"./app-207e7d61.js";const l={},u=e("h1",{id:"class-testoptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-testoptions","aria-hidden":"true"},"#"),t(" class: TestOptions")],-1),d=e("ul",null,[e("li",null,"since: v1.10"),e("li",null,"langs: js")],-1),h=e("p",null,"Playwright Test provides many options to configure test environment, [Browser], [BrowserContext] and more.",-1),k=e("code",null,"property: TestConfig.use",-1),v=e("code",null,"property: TestProject.use",-1),y=a(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// @ts-check</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">viewport</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1280</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">720</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ignoreHTTPSErrors</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">video</span><span class="token operator">:</span> <span class="token string">&#39;on-first-retry&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> type <span class="token punctuation">{</span> PlaywrightTestConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">viewport</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1280</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">720</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ignoreHTTPSErrors</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">video</span><span class="token operator">:</span> <span class="token string">&#39;on-first-retry&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Alternatively, with [<code>method: Test.use</code>] you can override some options for a file.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// example.spec.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> test<span class="token punctuation">,</span> expect <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Run tests in this file with portrait-like viewport.</span>
test<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">viewport</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">900</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;my portrait test&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> page <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// example.spec.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> test<span class="token punctuation">,</span> expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// Run tests in this file with portrait-like viewport.</span>
test<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">viewport</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">900</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;my portrait test&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> page <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="property-testoptions-acceptdownloads-context-option-acceptdownloads" tabindex="-1"><a class="header-anchor" href="#property-testoptions-acceptdownloads-context-option-acceptdownloads" aria-hidden="true">#</a> property: TestOptions.acceptDownloads = %%-context-option-acceptdownloads-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-baseurl-context-option-baseurl" tabindex="-1"><a class="header-anchor" href="#property-testoptions-baseurl-context-option-baseurl" aria-hidden="true">#</a> property: TestOptions.baseURL = %%-context-option-baseURL-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-browsername" tabindex="-1"><a class="header-anchor" href="#property-testoptions-browsername" aria-hidden="true">#</a> property: TestOptions.browserName</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[BrowserName]&lt;&quot;chromium&quot;|&quot;firefox&quot;|&quot;webkit&quot;&gt;&gt;</li></ul><p>Name of the browser that runs tests. Defaults to <code>&#39;chromium&#39;</code>. Most of the time you should set <code>browserName</code> in your [TestConfig]:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// playwright.config.js</span>
<span class="token comment">// @ts-check</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">browserName</span><span class="token operator">:</span> <span class="token string">&#39;firefox&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// playwright.config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig<span class="token punctuation">,</span> devices <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">browserName</span><span class="token operator">:</span> <span class="token string">&#39;firefox&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="property-testoptions-actiontimeout" tabindex="-1"><a class="header-anchor" href="#property-testoptions-actiontimeout" aria-hidden="true">#</a> property: TestOptions.actionTimeout</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[int]&gt;</li></ul><p>Default timeout for each Playwright action in milliseconds, defaults to 0 (no timeout).</p><p>This is a default timeout for all Playwright actions, same as configured via [<code>method: Page.setDefaultTimeout</code>].</p>`,20),m=a('<h2 id="property-testoptions-bypasscsp-context-option-bypasscsp" tabindex="-1"><a class="header-anchor" href="#property-testoptions-bypasscsp-context-option-bypasscsp" aria-hidden="true">#</a> property: TestOptions.bypassCSP = %%-context-option-bypasscsp-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-channel-browser-option-channel" tabindex="-1"><a class="header-anchor" href="#property-testoptions-channel-browser-option-channel" aria-hidden="true">#</a> property: TestOptions.channel = %%-browser-option-channel-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-colorscheme-context-option-colorscheme" tabindex="-1"><a class="header-anchor" href="#property-testoptions-colorscheme-context-option-colorscheme" aria-hidden="true">#</a> property: TestOptions.colorScheme = %%-context-option-colorscheme-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-connectoptions" tabindex="-1"><a class="header-anchor" href="#property-testoptions-connectoptions" aria-hidden="true">#</a> property: TestOptions.connectOptions</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[void]|[Object]&gt; <ul><li><code>wsEndpoint</code> &lt;[string]&gt; A browser websocket endpoint to connect to.</li><li><code>headers</code> ?&lt;[void]|[Object]&lt;[string], [string]&gt;&gt; Additional HTTP headers to be sent with web socket connect request. Optional.</li><li><code>timeout</code> ?&lt;[int]&gt; Timeout in milliseconds for the connection to be established. Optional, defaults to no timeout.</li></ul></li></ul><p>When connect options are specified, default [<code>property: Fixtures.browser</code>], [<code>property: Fixtures.context</code>] and [<code>property: Fixtures.page</code>] use the remote browser instead of launching a browser locally, and any launch options like [<code>property: TestOptions.headless</code>] or [<code>property: TestOptions.channel</code>] are ignored.</p><h2 id="property-testoptions-contextoptions" tabindex="-1"><a class="header-anchor" href="#property-testoptions-contextoptions" aria-hidden="true">#</a> property: TestOptions.contextOptions</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[Object]&gt;</li></ul><p>Options used to create the context, as passed to [<code>method: Browser.newContext</code>]. Specific options like [<code>property: TestOptions.viewport</code>] take priority over this.</p><h2 id="property-testoptions-devicescalefactor-context-option-devicescalefactor" tabindex="-1"><a class="header-anchor" href="#property-testoptions-devicescalefactor-context-option-devicescalefactor" aria-hidden="true">#</a> property: TestOptions.deviceScaleFactor = %%-context-option-devicescalefactor-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-extrahttpheaders-context-option-extrahttpheaders" tabindex="-1"><a class="header-anchor" href="#property-testoptions-extrahttpheaders-context-option-extrahttpheaders" aria-hidden="true">#</a> property: TestOptions.extraHTTPHeaders = %%-context-option-extrahttpheaders-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-geolocation-context-option-geolocation" tabindex="-1"><a class="header-anchor" href="#property-testoptions-geolocation-context-option-geolocation" aria-hidden="true">#</a> property: TestOptions.geolocation = %%-context-option-geolocation-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-hastouch-context-option-hastouch" tabindex="-1"><a class="header-anchor" href="#property-testoptions-hastouch-context-option-hastouch" aria-hidden="true">#</a> property: TestOptions.hasTouch = %%-context-option-hastouch-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-headless-browser-option-headless" tabindex="-1"><a class="header-anchor" href="#property-testoptions-headless-browser-option-headless" aria-hidden="true">#</a> property: TestOptions.headless = %%-browser-option-headless-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-httpcredentials-context-option-httpcredentials" tabindex="-1"><a class="header-anchor" href="#property-testoptions-httpcredentials-context-option-httpcredentials" aria-hidden="true">#</a> property: TestOptions.httpCredentials = %%-context-option-httpcredentials-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-ignorehttpserrors-context-option-ignorehttpserrors" tabindex="-1"><a class="header-anchor" href="#property-testoptions-ignorehttpserrors-context-option-ignorehttpserrors" aria-hidden="true">#</a> property: TestOptions.ignoreHTTPSErrors = %%-context-option-ignorehttpserrors-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-ismobile-context-option-ismobile" tabindex="-1"><a class="header-anchor" href="#property-testoptions-ismobile-context-option-ismobile" aria-hidden="true">#</a> property: TestOptions.isMobile = %%-context-option-ismobile-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-javascriptenabled-context-option-javascriptenabled" tabindex="-1"><a class="header-anchor" href="#property-testoptions-javascriptenabled-context-option-javascriptenabled" aria-hidden="true">#</a> property: TestOptions.javaScriptEnabled = %%-context-option-javascriptenabled-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-launchoptions" tabindex="-1"><a class="header-anchor" href="#property-testoptions-launchoptions" aria-hidden="true">#</a> property: TestOptions.launchOptions</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[Object]&gt;</li></ul><p>Options used to launch the browser, as passed to [<code>method: BrowserType.launch</code>]. Specific options [<code>property: TestOptions.headless</code>] and [<code>property: TestOptions.channel</code>] take priority over this.</p><h2 id="property-testoptions-locale-context-option-locale" tabindex="-1"><a class="header-anchor" href="#property-testoptions-locale-context-option-locale" aria-hidden="true">#</a> property: TestOptions.locale = %%-context-option-locale-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-navigationtimeout" tabindex="-1"><a class="header-anchor" href="#property-testoptions-navigationtimeout" aria-hidden="true">#</a> property: TestOptions.navigationTimeout</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[int]&gt;</li></ul><p>Timeout for each navigation action in milliseconds. Defaults to 0 (no timeout).</p><p>This is a default navigation timeout, same as configured via [<code>method: Page.setDefaultNavigationTimeout</code>].</p>',43),f=a('<h2 id="property-testoptions-offline-context-option-offline" tabindex="-1"><a class="header-anchor" href="#property-testoptions-offline-context-option-offline" aria-hidden="true">#</a> property: TestOptions.offline = %%-context-option-offline-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-permissions-context-option-permissions" tabindex="-1"><a class="header-anchor" href="#property-testoptions-permissions-context-option-permissions" aria-hidden="true">#</a> property: TestOptions.permissions = %%-context-option-permissions-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-proxy-browser-option-proxy" tabindex="-1"><a class="header-anchor" href="#property-testoptions-proxy-browser-option-proxy" aria-hidden="true">#</a> property: TestOptions.proxy = %%-browser-option-proxy-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-screenshot" tabindex="-1"><a class="header-anchor" href="#property-testoptions-screenshot" aria-hidden="true">#</a> property: TestOptions.screenshot</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[Object]|[ScreenshotMode]&lt;&quot;off&quot;|&quot;on&quot;|&quot;only-on-failure&quot;&gt;&gt; <ul><li><code>mode</code> &lt;[ScreenshotMode]&lt;&quot;off&quot;|&quot;on&quot;|&quot;only-on-failure&quot;&gt;&gt; Automatic screenshot mode.</li><li><code>fullPage</code> ?&lt;[boolean]&gt; When true, takes a screenshot of the full scrollable page, instead of the currently visible viewport. Defaults to <code>false</code>.</li><li><code>omitBackground</code> ?&lt;[boolean]&gt; Hides default white background and allows capturing screenshots with transparency. Not applicable to <code>jpeg</code> images. Defaults to <code>false</code>.</li></ul></li></ul><p>Whether to automatically capture a screenshot after each test. Defaults to <code>&#39;off&#39;</code>.</p><ul><li><code>&#39;off&#39;</code>: Do not capture screenshots.</li><li><code>&#39;on&#39;</code>: Capture screenshot after each test.</li><li><code>&#39;only-on-failure&#39;</code>: Capture screenshot after each test failure.</li></ul>',11),b=a('<h2 id="property-testoptions-storagestate-js-python-context-option-storage-state" tabindex="-1"><a class="header-anchor" href="#property-testoptions-storagestate-js-python-context-option-storage-state" aria-hidden="true">#</a> property: TestOptions.storageState = %%-js-python-context-option-storage-state-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-testidattribute" tabindex="-1"><a class="header-anchor" href="#property-testoptions-testidattribute" aria-hidden="true">#</a> property: TestOptions.testIdAttribute</h2><ul><li>since: v1.27</li></ul><p>Custom attribute to be used in [<code>method: Page.getByTestId</code>]. <code>data-testid</code> is used by default.</p><h2 id="property-testoptions-timezoneid-context-option-timezoneid" tabindex="-1"><a class="header-anchor" href="#property-testoptions-timezoneid-context-option-timezoneid" aria-hidden="true">#</a> property: TestOptions.timezoneId = %%-context-option-timezoneid-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-trace" tabindex="-1"><a class="header-anchor" href="#property-testoptions-trace" aria-hidden="true">#</a> property: TestOptions.trace</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[Object]|[TraceMode]&lt;&quot;off&quot;|&quot;on&quot;|&quot;retain-on-failure&quot;|&quot;on-first-retry&quot;&gt;&gt; <ul><li><code>mode</code> &lt;[TraceMode]&lt;&quot;off&quot;|&quot;on&quot;|&quot;retain-on-failure&quot;|&quot;on-first-retry&quot;&gt;&gt; Trace recording mode.</li><li><code>screenshots</code> ?&lt;[boolean]&gt; Whether to capture screenshots during tracing. Screenshots are used to build a timeline preview. Defaults to true. Optional.</li><li><code>snapshots</code> ?&lt;[boolean]&gt; Whether to capture DOM snapshot on every action. Defaults to true. Optional.</li><li><code>sources</code> ?&lt;[boolean]&gt; Whether to include source files for trace actions. Defaults to true. Optional.</li></ul></li></ul><p>Whether to record trace for each test. Defaults to <code>&#39;off&#39;</code>.</p><ul><li><code>&#39;off&#39;</code>: Do not record trace.</li><li><code>&#39;on&#39;</code>: Record trace for each test.</li><li><code>&#39;retain-on-failure&#39;</code>: Record trace for each test, but remove all traces from successful test runs.</li><li><code>&#39;on-first-retry&#39;</code>: Record trace only when retrying a test for the first time.</li></ul><p>For more control, pass an object that specifies <code>mode</code> and trace features to enable.</p>',13),g=a('<h2 id="property-testoptions-useragent-context-option-useragent" tabindex="-1"><a class="header-anchor" href="#property-testoptions-useragent-context-option-useragent" aria-hidden="true">#</a> property: TestOptions.userAgent = %%-context-option-useragent-%%</h2><ul><li>since: v1.10</li></ul><h2 id="property-testoptions-video" tabindex="-1"><a class="header-anchor" href="#property-testoptions-video" aria-hidden="true">#</a> property: TestOptions.video</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[Object]|[VideoMode]&lt;&quot;off&quot;|&quot;on&quot;|&quot;retain-on-failure&quot;|&quot;on-first-retry&quot;&gt;&gt; <ul><li><code>mode</code> &lt;[VideoMode]&lt;&quot;off&quot;|&quot;on&quot;|&quot;retain-on-failure&quot;|&quot;on-first-retry&quot;&gt;&gt; Video recording mode.</li><li><code>size</code> ?&lt;[Object]&gt; Size of the recorded video. Optional. <ul><li><code>width</code> &lt;[int]&gt;</li><li><code>height</code> &lt;[int]&gt;</li></ul></li></ul></li></ul><p>Whether to record video for each test. Defaults to <code>&#39;off&#39;</code>.</p><ul><li><code>&#39;off&#39;</code>: Do not record video.</li><li><code>&#39;on&#39;</code>: Record video for each test.</li><li><code>&#39;retain-on-failure&#39;</code>: Record video for each test, but remove all videos from successful test runs.</li><li><code>&#39;on-first-retry&#39;</code>: Record video only when retrying a test for the first time.</li></ul><p>To control video size, pass an object with <code>mode</code> and <code>size</code> properties. If video size is not specified, it will be equal to [<code>property: TestOptions.viewport</code>] scaled down to fit into 800x800. If <code>viewport</code> is not configured explicitly the video size defaults to 800x450. Actual picture of each page will be scaled down if necessary to fit the specified size.</p>',8),x=e("h2",{id:"property-testoptions-viewport-context-option-viewport",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#property-testoptions-viewport-context-option-viewport","aria-hidden":"true"},"#"),t(" property: TestOptions.viewport = %%-context-option-viewport-%%")],-1),w=e("ul",null,[e("li",null,"since: v1.10")],-1),T=e("h2",{id:"property-testoptions-serviceworkers-context-option-service-worker-policy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#property-testoptions-serviceworkers-context-option-service-worker-policy","aria-hidden":"true"},"#"),t(" property: TestOptions.serviceWorkers = %%-context-option-service-worker-policy-%%")],-1),O=e("ul",null,[e("li",null,"since: v1.10")],-1);function q(_,j){const n=i("RouterLink");return r(),c("div",null,[u,d,h,e("p",null,[t("These options are usually provided in the "),s(n,{to:"/book/playwright/test-configuration.html"},{default:o(()=>[t("configuration file")]),_:1}),t(" through ["),k,t("] and ["),v,t("].")]),y,e("p",null,[t("Learn more about "),s(n,{to:"/book/playwright/test-timeouts.html"},{default:o(()=>[t("various timeouts")]),_:1}),t(".")]),m,e("p",null,[t("Learn more about "),s(n,{to:"/book/playwright/test-timeouts.html"},{default:o(()=>[t("various timeouts")]),_:1}),t(".")]),f,e("p",null,[t("Learn more about "),s(n,{to:"/book/playwright/test-configuration.html#automatic-screenshots"},{default:o(()=>[t("automatic screenshots")]),_:1}),t(".")]),b,e("p",null,[t("Learn more about "),s(n,{to:"/book/playwright/test-configuration.html#record-test-trace"},{default:o(()=>[t("recording trace")]),_:1}),t(".")]),g,e("p",null,[t("Learn more about "),s(n,{to:"/book/playwright/test-configuration.html#record-video"},{default:o(()=>[t("recording video")]),_:1}),t(".")]),x,w,T,O])}const P=p(l,[["render",q],["__file","class-testoptions.html.vue"]]);export{P as default};
