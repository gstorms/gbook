import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as r,a as n,b as s,d as a,w as e,f as p}from"./app-207e7d61.js";const u={},d=n("h1",{id:"class-testproject",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#class-testproject","aria-hidden":"true"},"#"),s(" class: TestProject")],-1),k=n("ul",null,[n("li",null,"since: v1.10"),n("li",null,"langs: js")],-1),v=n("p",null,"Playwright Test supports running multiple test projects at the same time. This is useful for running tests in multiple configurations. For example, consider running tests against multiple browsers.",-1),m=n("code",null,"TestProject",-1),h=n("code",null,"property: TestConfig.projects",-1),y=p(`<p>Here is an example configuration that runs every test in Chromium, Firefox and WebKit, both Desktop and Mobile versions.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// playwright.config.js</span>
<span class="token comment">// @ts-check</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> devices <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// Options shared for all projects.</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>
  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">ignoreHTTPSErrors</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// Options specific to each project.</span>
  <span class="token literal-property property">projects</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;chromium&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;Desktop Chrome&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;firefox&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;Desktop Firefox&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;webkit&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;Desktop Safari&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Mobile Chrome&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;Pixel 5&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Mobile Safari&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;iPhone 12&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// playwright.config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig<span class="token punctuation">,</span> devices <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// Options shared for all projects.</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>
  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">ignoreHTTPSErrors</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// Options specific to each project.</span>
  <span class="token literal-property property">projects</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;chromium&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;Desktop Chrome&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;firefox&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;Desktop Firefox&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;webkit&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;Desktop Safari&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Mobile Chrome&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;Pixel 5&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Mobile Safari&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;iPhone 12&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="property-testproject-dependencies" tabindex="-1"><a class="header-anchor" href="#property-testproject-dependencies" aria-hidden="true">#</a> property: TestProject.dependencies</h2><ul><li>since: v1.31</li></ul><ul><li>type: ?&lt;[Array]&lt;[string]&gt;&gt;</li></ul><p>List of projects that need to run before any test in this project runs. Dependencies can<br> be useful for configuring the global setup actions in a way that every action is<br> in a form of a test. Passing <code>--no-deps</code> argument ignores the dependencies and<br> behaves as if they were not specified.</p><p>Using dependencies allows global setup to produce traces and other artifacts,<br> see the setup steps in the test report, etc.</p><p>For example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// playwright.config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">projects</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;setup&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">testMatch</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">global.setup\\.ts</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;chromium&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;Desktop Chrome&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dependencies</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;setup&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;firefox&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;Desktop Firefox&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dependencies</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;setup&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;webkit&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> devices<span class="token punctuation">[</span><span class="token string">&#39;Desktop Safari&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dependencies</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;setup&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="property-testproject-expect" tabindex="-1"><a class="header-anchor" href="#property-testproject-expect" aria-hidden="true">#</a> property: TestProject.expect</h2><ul><li>since: v1.10</li></ul>`,12),b=n("li",null,[n("code",null,"timeout"),s(" ?<[int]> Default timeout for async expect matchers in milliseconds, defaults to 5000ms.")],-1),g=n("code",null,"toHaveScreenshot",-1),f=n("code",null,"method: PageAssertions.toHaveScreenshot#1",-1),j=n("code",null,"threshold",-1),_=n("code",null,"0",-1),w=n("code",null,"1",-1),x=n("code",null,'"pixelmatch"',-1),T={href:"https://en.wikipedia.org/wiki/YIQ",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"threshold",-1),C=n("code",null,"0.2",-1),D=p("<li><code>maxDiffPixels</code> ?&lt;[int]&gt; an acceptable amount of pixels that could be different, unset by default.</li><li><code>maxDiffPixelRatio</code> ?&lt;[float]&gt; an acceptable ratio of pixels that are different to the total amount of pixels, between <code>0</code> and <code>1</code> , unset by default.</li><li><code>animations</code> ?&lt;[ScreenshotAnimations]&lt;&quot;allow&quot;|&quot;disabled&quot;&gt;&gt; See [<code>option: animations</code>] in [<code>method: Page.screenshot</code>]. Defaults to <code>&quot;disabled&quot;</code>.</li><li><code>caret</code> ?&lt;[ScreenshotCaret]&lt;&quot;hide&quot;|&quot;initial&quot;&gt;&gt; See [<code>option: caret</code>] in [<code>method: Page.screenshot</code>]. Defaults to <code>&quot;hide&quot;</code>.</li><li><code>scale</code> ?&lt;[ScreenshotScale]&lt;&quot;css&quot;|&quot;device&quot;&gt;&gt; See [<code>option: scale</code>] in [<code>method: Page.screenshot</code>]. Defaults to <code>&quot;css&quot;</code>.</li>",5),S=n("code",null,"toMatchSnapshot",-1),q=n("code",null,"method: SnapshotAssertions.toMatchSnapshot#1",-1),I=n("code",null,"threshold",-1),E=n("code",null,"0",-1),N=n("code",null,"1",-1),F=n("code",null,'"pixelmatch"',-1),M={href:"https://en.wikipedia.org/wiki/YIQ",target:"_blank",rel:"noopener noreferrer"},O=n("code",null,"threshold",-1),R=n("code",null,"0.2",-1),U=n("li",null,[n("code",null,"maxDiffPixels"),s(" ?<[int]> an acceptable amount of pixels that could be different, unset by default.")],-1),A=n("li",null,[n("code",null,"maxDiffPixelRatio"),s(" ?<[float]> an acceptable ratio of pixels that are different to the total amount of pixels, between "),n("code",null,"0"),s(" and "),n("code",null,"1"),s(" , unset by default.")],-1),H=p('<p>Configuration for the <code>expect</code> assertion library.</p><p>Use [<code>property: TestConfig.expect</code>] to change this option for all projects.</p><h2 id="property-testproject-fullyparallel" tabindex="-1"><a class="header-anchor" href="#property-testproject-fullyparallel" aria-hidden="true">#</a> property: TestProject.fullyParallel</h2><ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[boolean]&gt;</li></ul><p>Playwright Test runs tests in parallel. In order to achieve that, it runs several worker processes that run at the same time.<br> By default, <strong>test files</strong> are run in parallel. Tests in a single file are run in order, in the same worker process.</p><p>You can configure entire test project to concurrently run all tests in all files using this option.</p><h2 id="property-testproject-grep" tabindex="-1"><a class="header-anchor" href="#property-testproject-grep" aria-hidden="true">#</a> property: TestProject.grep</h2><ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[RegExp]|[Array]&lt;[RegExp]&gt;&gt;</li></ul>',10),L=n("code",null,"grep: /cart/",-1),B=n("code",null,"-g",-1),Y=n("code",null,"test.describe",-1),Q=n("code",null,"my-test.spec.ts my suite my test",-1),V=n("code",null,"grep",-1),W=n("h2",{id:"property-testproject-grepinvert",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#property-testproject-grepinvert","aria-hidden":"true"},"#"),s(" property: TestProject.grepInvert")],-1),K=n("ul",null,[n("li",null,"since: v1.10")],-1),z=n("ul",null,[n("li",null,"type: ?<[RegExp]|[Array]<[RegExp]>>")],-1),J=n("strong",null,"not",-1),G=n("code",null,"property: TestProject.grep",-1),X=n("code",null,"--grep-invert",-1),Z=n("code",null,"grepInvert",-1),$=n("h2",{id:"property-testproject-metadata",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#property-testproject-metadata","aria-hidden":"true"},"#"),s(" property: TestProject.metadata")],-1),nn=n("ul",null,[n("li",null,"since: v1.10")],-1),sn=n("ul",null,[n("li",null,"type: ?<[Metadata]>")],-1),an=n("p",null,"Metadata that will be put directly to the test report serialized as JSON.",-1),tn={id:"property-testproject-name",tabindex:"-1"},en=n("a",{class:"header-anchor",href:"#property-testproject-name","aria-hidden":"true"},"#",-1),pn={href:"http://TestProject.name",target:"_blank",rel:"noopener noreferrer"},on=p(`<ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[string]&gt;</li></ul><p>Project name is visible in the report and during test execution.</p><h2 id="property-testproject-snapshotdir" tabindex="-1"><a class="header-anchor" href="#property-testproject-snapshotdir" aria-hidden="true">#</a> property: TestProject.snapshotDir</h2><ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[string]&gt;</li></ul><p>The base directory, relative to the config file, for snapshot files created with <code>toMatchSnapshot</code>. Defaults to [<code>property: TestProject.testDir</code>].</p><p>The directory for each test can be accessed by [<code>property: TestInfo.snapshotDir</code>] and [<code>method: TestInfo.snapshotPath</code>].</p><p>This path will serve as the base directory for each test file snapshot directory. Setting <code>snapshotDir</code> to <code>&#39;snapshots&#39;</code>, the [<code>property: TestInfo.snapshotDir</code>] would resolve to <code>snapshots/a.spec.js-snapshots</code>.</p><h2 id="property-testproject-snapshotpathtemplate-test-config-snapshot-path-template" tabindex="-1"><a class="header-anchor" href="#property-testproject-snapshotpathtemplate-test-config-snapshot-path-template" aria-hidden="true">#</a> property: TestProject.snapshotPathTemplate = %%-test-config-snapshot-path-template-%%</h2><ul><li>since: v1.28</li></ul><h2 id="property-testproject-outputdir" tabindex="-1"><a class="header-anchor" href="#property-testproject-outputdir" aria-hidden="true">#</a> property: TestProject.outputDir</h2><ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[string]&gt;</li></ul><p>The output directory for files created during test execution. Defaults to <code>&lt;package.json-directory&gt;/test-results</code>.</p><p>This directory is cleaned at the start. When running a test, a unique subdirectory inside the [<code>property: TestProject.outputDir</code>] is created, guaranteeing that test running in parallel do not conflict. This directory can be accessed by [<code>property: TestInfo.outputDir</code>] and [<code>method: TestInfo.outputPath</code>].</p><p>Here is an example that uses [<code>method: TestInfo.outputPath</code>] to create a temporary file.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> test<span class="token punctuation">,</span> expect <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;example test&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> testInfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> file <span class="token operator">=</span> testInfo<span class="token punctuation">.</span><span class="token function">outputPath</span><span class="token punctuation">(</span><span class="token string">&#39;temporary-file.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token string">&#39;Put some data to the file&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> test<span class="token punctuation">,</span> expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">&#39;fs&#39;</span><span class="token punctuation">;</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;example test&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> testInfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> file <span class="token operator">=</span> testInfo<span class="token punctuation">.</span><span class="token function">outputPath</span><span class="token punctuation">(</span><span class="token string">&#39;temporary-file.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token string">&#39;Put some data to the file&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Use [<code>property: TestConfig.outputDir</code>] to change this option for all projects.</p><h2 id="property-testproject-repeateach" tabindex="-1"><a class="header-anchor" href="#property-testproject-repeateach" aria-hidden="true">#</a> property: TestProject.repeatEach</h2><ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[int]&gt;</li></ul><p>The number of times to repeat each test, useful for debugging flaky tests.</p><p>Use [<code>property: TestConfig.repeatEach</code>] to change this option for all projects.</p><h2 id="property-testproject-retries" tabindex="-1"><a class="header-anchor" href="#property-testproject-retries" aria-hidden="true">#</a> property: TestProject.retries</h2><ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[int]&gt;</li></ul>`,28),ln=p(`<p>Use [<code>method: Test.describe.configure</code>] to change the number of retries for a specific file or a group of tests.</p><p>Use [<code>property: TestConfig.retries</code>] to change this option for all projects.</p><h2 id="property-testproject-testdir" tabindex="-1"><a class="header-anchor" href="#property-testproject-testdir" aria-hidden="true">#</a> property: TestProject.testDir</h2><ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[string]&gt;</li></ul><p>Directory that will be recursively scanned for test files. Defaults to the directory of the configuration file.</p><p>Each project can use a different directory. Here is an example that runs smoke tests in three browsers and all other tests in stable Chrome browser.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// playwright.config.js</span>
<span class="token comment">// @ts-check</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">projects</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Smoke Chromium&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">testDir</span><span class="token operator">:</span> <span class="token string">&#39;./smoke-tests&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">browserName</span><span class="token operator">:</span> <span class="token string">&#39;chromium&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Smoke WebKit&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">testDir</span><span class="token operator">:</span> <span class="token string">&#39;./smoke-tests&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">browserName</span><span class="token operator">:</span> <span class="token string">&#39;webkit&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Smoke Firefox&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">testDir</span><span class="token operator">:</span> <span class="token string">&#39;./smoke-tests&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">browserName</span><span class="token operator">:</span> <span class="token string">&#39;firefox&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Chrome Stable&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">testDir</span><span class="token operator">:</span> <span class="token string">&#39;./&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">browserName</span><span class="token operator">:</span> <span class="token string">&#39;chromium&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">channel</span><span class="token operator">:</span> <span class="token string">&#39;chrome&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// playwright.config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">projects</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Smoke Chromium&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">testDir</span><span class="token operator">:</span> <span class="token string">&#39;./smoke-tests&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">browserName</span><span class="token operator">:</span> <span class="token string">&#39;chromium&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Smoke WebKit&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">testDir</span><span class="token operator">:</span> <span class="token string">&#39;./smoke-tests&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">browserName</span><span class="token operator">:</span> <span class="token string">&#39;webkit&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Smoke Firefox&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">testDir</span><span class="token operator">:</span> <span class="token string">&#39;./smoke-tests&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">browserName</span><span class="token operator">:</span> <span class="token string">&#39;firefox&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Chrome Stable&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">testDir</span><span class="token operator">:</span> <span class="token string">&#39;./&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">browserName</span><span class="token operator">:</span> <span class="token string">&#39;chromium&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">channel</span><span class="token operator">:</span> <span class="token string">&#39;chrome&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Use [<code>property: TestConfig.testDir</code>] to change this option for all projects.</p><h2 id="property-testproject-testignore" tabindex="-1"><a class="header-anchor" href="#property-testproject-testignore" aria-hidden="true">#</a> property: TestProject.testIgnore</h2><ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[string]|[RegExp]|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Files matching one of these patterns are not executed as test files. Matching is performed against the absolute file path. Strings are treated as glob patterns.</p><p>For example, <code>&#39;**/test-assets/**&#39;</code> will ignore any files in the <code>test-assets</code> directory.</p><p>Use [<code>property: TestConfig.testIgnore</code>] to change this option for all projects.</p><h2 id="property-testproject-testmatch" tabindex="-1"><a class="header-anchor" href="#property-testproject-testmatch" aria-hidden="true">#</a> property: TestProject.testMatch</h2><ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[string]|[RegExp]|[Array]&lt;[string]|[RegExp]&gt;&gt;</li></ul><p>Only the files matching one of these patterns are executed as test files. Matching is performed against the absolute file path. Strings are treated as glob patterns.</p><p>By default, Playwright Test looks for files matching <code>.*(test|spec)\\.(js|ts|mjs)</code>.</p><p>Use [<code>property: TestConfig.testMatch</code>] to change this option for all projects.</p><h2 id="property-testproject-timeout" tabindex="-1"><a class="header-anchor" href="#property-testproject-timeout" aria-hidden="true">#</a> property: TestProject.timeout</h2><ul><li>since: v1.10</li></ul><ul><li>type: ?&lt;[int]&gt;</li></ul><p>Timeout for each test in milliseconds. Defaults to 30 seconds.</p><p>This is a base timeout for all tests. Each test can configure its own timeout with [<code>method: Test.setTimeout</code>]. Each file or a group of tests can configure the timeout with [<code>method: Test.describe.configure</code>].</p><p>Use [<code>property: TestConfig.timeout</code>] to change this option for all projects.</p><h2 id="property-testproject-use" tabindex="-1"><a class="header-anchor" href="#property-testproject-use" aria-hidden="true">#</a> property: TestProject.use</h2><ul><li>since: v1.10</li></ul><ul><li>type: &lt;[Fixtures]&gt;</li></ul>`,31),cn=n("code",null,"property: TestOptions.browserName",-1),rn=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// playwright.config.js</span>
<span class="token comment">// @ts-check</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">projects</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Chromium&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">browserName</span><span class="token operator">:</span> <span class="token string">&#39;chromium&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// playwright.config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">projects</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Chromium&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">browserName</span><span class="token operator">:</span> <span class="token string">&#39;chromium&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Use [<code>property: TestConfig.use</code>] to change this option for all projects.</p>`,3);function un(dn,kn){const t=i("RouterLink"),o=i("ExternalLinkIcon");return c(),r("div",null,[d,k,v,n("p",null,[m,s(" encapsulates configuration specific to a single project. Projects are configured in ["),h,s("] specified in the "),a(t,{to:"/book/playwright/test-configuration.html"},{default:e(()=>[s("configuration file")]),_:1}),s(". Note that all properties of [TestProject] are available in the top-level [TestConfig], in which case they are shared between all projects.")]),y,n("ul",null,[n("li",null,[s("type: ?<[Object]> "),n("ul",null,[b,n("li",null,[g,s(" ?<[Object]> Configuration for the ["),f,s("] method. "),n("ul",null,[n("li",null,[j,s(" ?<[float]> an acceptable perceived color difference between the same pixel in compared images, ranging from "),_,s(" (strict) and "),w,s(" (lax). "),x,s(" comparator computes color difference in "),n("a",T,[s("YIQ color space"),a(o)]),s(" and defaults "),P,s(" value to "),C,s(".")]),D])]),n("li",null,[S,s(" ?<[Object]> Configuration for the ["),q,s("] method. "),n("ul",null,[n("li",null,[I,s(" ?<[float]> an acceptable perceived color difference between the same pixel in compared images, ranging from "),E,s(" (strict) and "),N,s(" (lax). "),F,s(" comparator computes color difference in "),n("a",M,[s("YIQ color space"),a(o)]),s(" and defaults "),O,s(" value to "),R,s(".")]),U,A])])])])]),H,n("p",null,[s("Filter to only run tests with a title matching one of the patterns. For example, passing "),L,s(' should only run tests with "cart" in the title. Also available globally and in the '),a(t,{to:"/book/playwright/test-cli.html"},{default:e(()=>[s("command line")]),_:1}),s(" with the "),B,s(" option. The regular expression will be tested against the string that consists of the test file name, "),Y,s(" name (if any) and the test name divided by spaces, e.g. "),Q,s(".")]),n("p",null,[V,s(" option is also useful for "),a(t,{to:"/book/playwright/test-annotations.html#tag-tests"},{default:e(()=>[s("tagging tests")]),_:1}),s(".")]),W,K,z,n("p",null,[s("Filter to only run tests with a title "),J,s(" matching one of the patterns. This is the opposite of ["),G,s("]. Also available globally and in the "),a(t,{to:"/book/playwright/test-cli.html"},{default:e(()=>[s("command line")]),_:1}),s(" with the "),X,s(" option.")]),n("p",null,[Z,s(" option is also useful for "),a(t,{to:"/book/playwright/test-annotations.html#tag-tests"},{default:e(()=>[s("tagging tests")]),_:1}),s(".")]),$,nn,sn,an,n("h2",tn,[en,s(" property: "),n("a",pn,[s("TestProject.name"),a(o)])]),on,n("p",null,[s("The maximum number of retry attempts given to failed tests. Learn more about "),a(t,{to:"/book/playwright/test-retries.html#retries"},{default:e(()=>[s("test retries")]),_:1}),s(".")]),ln,n("p",null,[s("Options for all tests in this project, for example ["),cn,s("]. Learn more about "),a(t,{to:"/book/playwright/test-configuration.html"},{default:e(()=>[s("configuration")]),_:1}),s(" and see [available options][TestOptions].")]),rn])}const hn=l(u,[["render",un],["__file","class-testproject.html.vue"]]);export{hn as default};
