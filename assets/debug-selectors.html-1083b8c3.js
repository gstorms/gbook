import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c as o,a,d as n,w as t,b as e,f as d}from"./app-207e7d61.js";const c={},p=a("p",null,[e("Playwright will throw a timeout exception like "),a("code",null,"locator.click: Timeout 30000ms exceeded"),e(" when an element does not exist on the page. There are multiple ways of debugging selectors:")],-1),h=a("li",null,[a("a",{href:"#using-playwright-inspector"},"Playwright Inspector"),e(" to step over each Playwright API call to inspect the page.")],-1),u=a("li",null,[a("a",{href:"#using-devtools"},"Browser DevTools"),e(" to inspect selectors with the DevTools element panel.")],-1),g=a("a",{href:"#verbose-api-logs"},"Verbose API logs",-1),v=a("h2",{id:"using-playwright-inspector",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#using-playwright-inspector","aria-hidden":"true"},"#"),e(" Using Playwright Inspector")],-1),m=a("code",null,"Explore",-1),b=a("br",null,null,-1),w=d(`<img width="602" alt="Selectors toolbar" src="https://user-images.githubusercontent.com/883973/108614696-ad5eaa00-73b1-11eb-81f5-9eebe62543a2.png"><h2 id="using-devtools" tabindex="-1"><a class="header-anchor" href="#using-devtools" aria-hidden="true">#</a> Using DevTools</h2><p>You can also use the following API inside the Developer Tools Console of any browser.</p><p>When running in Debug Mode with <code>PWDEBUG=console</code>, a <code>playwright</code> object is available in Developer tools console.</p><ol><li>Run with <code>PWDEBUG=console</code></li><li>Setup a breakpoint to pause the execution</li><li>Open the console panel in browser developer tools</li></ol><img src="https://user-images.githubusercontent.com/284612/92536317-37dd9380-f1ee-11ea-875d-daf1b206dd56.png"><h3 id="playwright-selector" tabindex="-1"><a class="header-anchor" href="#playwright-selector" aria-hidden="true">#</a> playwright.$(selector)</h3><p>Query Playwright selector, using the actual Playwright query engine, for example:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>&gt; playwright.$(&#39;.auth-form &gt;&gt; text=Log in&#39;);

&lt;button&gt;Log in&lt;/button&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="playwright-selector-1" tabindex="-1"><a class="header-anchor" href="#playwright-selector-1" aria-hidden="true">#</a> playwright.$$(selector)</h3><p>Same as <code>playwright.$</code>, but returns all matching elements.</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>&gt; playwright.$$(&#39;li &gt;&gt; text=John&#39;)

&gt; [&lt;li&gt;, &lt;li&gt;, &lt;li&gt;, &lt;li&gt;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="playwright-inspect-selector" tabindex="-1"><a class="header-anchor" href="#playwright-inspect-selector" aria-hidden="true">#</a> playwright.inspect(selector)</h3><p>Reveal element in the Elements panel (if DevTools of the respective browser supports it).</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>&gt; playwright.inspect(&#39;text=Log in&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="playwright-locator-selector" tabindex="-1"><a class="header-anchor" href="#playwright-locator-selector" aria-hidden="true">#</a> playwright.locator(selector)</h3><p>Query Playwright element using the actual Playwright query engine, for example:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>&gt; playwright.locator(&#39;.auth-form&#39;, { hasText: &#39;Log in&#39; });

&gt; Locator ()
&gt;   - element: button
&gt;   - elements: [button]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="playwright-highlight-selector" tabindex="-1"><a class="header-anchor" href="#playwright-highlight-selector" aria-hidden="true">#</a> playwright.highlight(selector)</h3><p>Highlight the first occurrence of the locator:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>&gt; playwright.highlight(&#39;.auth-form&#39;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="playwright-clear" tabindex="-1"><a class="header-anchor" href="#playwright-clear" aria-hidden="true">#</a> playwright.clear()</h3><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>&gt; playwright.clear()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Clear existing highlights.</p><h3 id="playwright-selector-element" tabindex="-1"><a class="header-anchor" href="#playwright-selector-element" aria-hidden="true">#</a> playwright.selector(element)</h3><p>Generates selector for the given element.</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>&gt; playwright.selector($0)

&quot;div[id=&quot;glow-ingress-block&quot;] &gt;&gt; text=/.*Hello.*/&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="verbose-api-logs" tabindex="-1"><a class="header-anchor" href="#verbose-api-logs" aria-hidden="true">#</a> Verbose API logs</h2><p>Playwright supports verbose logging with the <code>DEBUG</code> environment variable.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">DEBUG</span><span class="token operator">=</span>pw:api npx playwright <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-batch line-numbers-mode" data-ext="batch"><pre class="language-batch"><code><span class="token command"><span class="token keyword">set</span> <span class="token variable">DEBUG</span><span class="token operator">=</span>pw:api</span>
<span class="token command"><span class="token keyword">npx</span> playwright test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token variable">$env</span>:DEBUG=<span class="token string">&quot;pw:api&quot;</span>
npx playwright test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">DEBUG</span><span class="token operator">=</span>pw:api mvn <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-batch line-numbers-mode" data-ext="batch"><pre class="language-batch"><code><span class="token command"><span class="token keyword">set</span> <span class="token variable">DEBUG</span><span class="token operator">=</span>pw:api</span>
<span class="token command"><span class="token keyword">mvn</span> test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token variable">$env</span>:DEBUG=<span class="token string">&quot;pw:api&quot;</span>
mvn test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">DEBUG</span><span class="token operator">=</span>pw:api pytest <span class="token parameter variable">-s</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-batch line-numbers-mode" data-ext="batch"><pre class="language-batch"><code><span class="token command"><span class="token keyword">set</span> <span class="token variable">DEBUG</span><span class="token operator">=</span>pw:api</span>
<span class="token command"><span class="token keyword">pytest</span> <span class="token parameter attr-name">-s</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token variable">$env</span>:DEBUG=<span class="token string">&quot;pw:api&quot;</span>
pytest <span class="token operator">-</span>s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">DEBUG</span><span class="token operator">=</span>pw:api dotnet run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-batch line-numbers-mode" data-ext="batch"><pre class="language-batch"><code><span class="token command"><span class="token keyword">set</span> <span class="token variable">DEBUG</span><span class="token operator">=</span>pw:api</span>
<span class="token command"><span class="token keyword">dotnet</span> run</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token variable">$env</span>:DEBUG=<span class="token string">&quot;pw:api&quot;</span>
dotnet run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,41);function x(y,k){const s=i("RouterLink");return r(),o("div",null,[p,a("ul",null,[h,u,a("li",null,[n(s,{to:"/book/playwright/trace-viewer.html"},{default:t(()=>[e("Trace Viewer")]),_:1}),e(" to see what the page looked like during the test run.")]),a("li",null,[g,e(" shows "),n(s,{to:"/book/playwright/actionability.html"},{default:t(()=>[e("actionability checks")]),_:1}),e(" when locating the element.")])]),v,a("p",null,[e("Open the "),n(s,{to:"/book/playwright/debug.html"},{default:t(()=>[e("Playwright Inspector")]),_:1}),e(" and click the "),m,e(" button to hover over elements in the screen and click them to"),b,e(" automatically generate selectors for those elements. To verify where selector points, paste it into the inspector input field:")]),w])}const D=l(c,[["render",x],["__file","debug-selectors.html.vue"]]);export{D as default};
