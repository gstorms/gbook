import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c,e as d,a as e,d as s,b as a,w as p,f as t}from"./app-3f278ba4.js";const u={},h=e("p",null,"[Dockerfile.focal] can be used to run Playwright scripts in Docker environment. These image includes all the dependencies needed to run browsers in a Docker container, and also include the browsers themselves.",-1),m=t(`<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>This Docker image is published on [Docker Hub].</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>This Docker image is intended to be used for testing and development purposes only. It is not recommended to use this Docker image to visit untrusted websites.</p></div><h3 id="pull-the-image" tabindex="-1"><a class="header-anchor" href="#pull-the-image" aria-hidden="true">#</a> Pull the image</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull mcr.microsoft.com/playwright:v1.32.0-focal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull mcr.microsoft.com/playwright/python:v1.32.0-focal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull mcr.microsoft.com/playwright/dotnet:v1.32.0-focal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull mcr.microsoft.com/playwright/java:v1.32.0-focal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="run-the-image" tabindex="-1"><a class="header-anchor" href="#run-the-image" aria-hidden="true">#</a> Run the image</h3><p>By default, the Docker image will use the <code>root</code> user to run the browsers. This will disable the Chromium sandbox which is not available with root. If you run trusted code (e.g. End-to-end tests) and want to avoid the hassle of managing separate user then the root user may be fine. For web scraping or crawling, we recommend to create a separate user inside the Docker container and use the seccomp profile.</p><h4 id="end-to-end-tests" tabindex="-1"><a class="header-anchor" href="#end-to-end-tests" aria-hidden="true">#</a> End-to-end tests</h4><p>On trusted websites, you can avoid creating a separate user and use root for it since you trust the code which will run on the browsers.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--ipc</span><span class="token operator">=</span>host mcr.microsoft.com/playwright:v1.32.0-focal /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--ipc</span><span class="token operator">=</span>host mcr.microsoft.com/playwright/python:v1.32.0-focal /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--ipc</span><span class="token operator">=</span>host mcr.microsoft.com/playwright/dotnet:v1.32.0-focal /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--ipc</span><span class="token operator">=</span>host mcr.microsoft.com/playwright/java:v1.32.0-focal /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="crawling-and-scraping" tabindex="-1"><a class="header-anchor" href="#crawling-and-scraping" aria-hidden="true">#</a> Crawling and scraping</h4><p>On untrusted websites, it&#39;s recommended to use a separate user for launching the browsers in combination with the seccomp profile. Inside the container or if you are using the Docker image as a base image you have to use <code>adduser</code> for it.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--ipc</span><span class="token operator">=</span>host <span class="token parameter variable">--user</span> pwuser --security-opt <span class="token assign-left variable">seccomp</span><span class="token operator">=</span>seccomp_profile.json mcr.microsoft.com/playwright:v1.32.0-focal /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--ipc</span><span class="token operator">=</span>host <span class="token parameter variable">--user</span> pwuser --security-opt <span class="token assign-left variable">seccomp</span><span class="token operator">=</span>seccomp_profile.json mcr.microsoft.com/playwright/python:v1.32.0-focal /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--ipc</span><span class="token operator">=</span>host <span class="token parameter variable">--user</span> pwuser --security-opt <span class="token assign-left variable">seccomp</span><span class="token operator">=</span>seccomp_profile.json mcr.microsoft.com/playwright/dotnet:v1.32.0-focal /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--ipc</span><span class="token operator">=</span>host <span class="token parameter variable">--user</span> pwuser --security-opt <span class="token assign-left variable">seccomp</span><span class="token operator">=</span>seccomp_profile.json mcr.microsoft.com/playwright/java:v1.32.0-focal /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,22),b={href:"https://github.com/microsoft/playwright/blob/main/utils/docker/seccomp_profile.json",target:"_blank",rel:"noopener noreferrer"},v=e("code",null,"seccomp_profile.json",-1),g={href:"https://github.com/docker/engine/blob/d0d99b04cf6e00ed3fc27e81fc3d94e7eda70af3/profiles/seccomp/default.json",target:"_blank",rel:"noopener noreferrer"},k=t(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;comment&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Allow create user namespaces&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;names&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;clone&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;setns&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;unshare&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;action&quot;</span><span class="token operator">:</span> <span class="token string">&quot;SCMP_ACT_ALLOW&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;includes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;excludes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),f={class:"hint-container note"},_=e("p",{class:"hint-container-title"},"注",-1),w=e("code",null,"--ipc=host",-1),y={href:"https://docs.docker.com/engine/reference/run/#ipc-settings---ipc",target:"_blank",rel:"noopener noreferrer"},x=e("h3",{id:"using-on-ci",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#using-on-ci","aria-hidden":"true"},"#"),a(" Using on CI")],-1),q=e("h2",{id:"image-tags",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#image-tags","aria-hidden":"true"},"#"),a(" Image tags")],-1),T=e("p",null,"See [all available image tags].",-1),j=e("p",null,[a("Docker images are published automatically by GitHub Actions. We currently publish images with the"),e("br"),a(" following tags ("),e("code",null,"v1.20.0"),a(" in this case is an example:):")],-1),D=e("li",null,[e("code",null,":next"),a(" - tip-of-tree image version based on Ubuntu 20.04 LTS (Focal Fossa).")],-1),S=e("li",null,[e("code",null,":next-focal"),a(" - tip-of-tree image version based on Ubuntu 20.04 LTS (Focal Fossa).")],-1),C=e("li",null,[e("code",null,":v1.20.0"),a(" - Playwright v1.20.0 release docker image based on Ubuntu 20.04 LTS (Focal Fossa).")],-1),L=e("li",null,[e("code",null,":v1.20.0-focal"),a(" - Playwright v1.20.0 release docker image based on Ubuntu 20.04 LTS (Focal Fossa).")],-1),F=e("code",null,":sha-XXXXXXX",-1),U=e("br",null,null,-1),I={href:"https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection#Short-SHA-1",target:"_blank",rel:"noopener noreferrer"},A=e("div",{class:"hint-container note"},[e("p",{class:"hint-container-title"},"注"),e("p",null,"It is recommended to always pin your Docker image to a specific version if possible. If the Playwright version in your Docker image does not match the version in your project/tests, Playwright will be unable to locate browser executables.")],-1),B=e("h3",{id:"base-images",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#base-images","aria-hidden":"true"},"#"),a(" Base images")],-1),P={href:"https://hub.docker.com/_/ubuntu",target:"_blank",rel:"noopener noreferrer"},X=e("ul",null,[e("li",null,[e("strong",null,"Ubuntu 22.04 LTS"),a(" (Jammy Jellyfish), image tags include "),e("code",null,"jammy"),a(" (not published for Java and .NET)")]),e("li",null,[e("strong",null,"Ubuntu 20.04 LTS"),a(" (Focal Fossa), image tags include "),e("code",null,"focal")])],-1),E=e("h4",{id:"alpine",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#alpine","aria-hidden":"true"},"#"),a(" Alpine")],-1),N={href:"https://en.wikipedia.org/wiki/Glibc",target:"_blank",rel:"noopener noreferrer"},V={href:"https://en.wikipedia.org/wiki/Musl",target:"_blank",rel:"noopener noreferrer"},H=e("h2",{id:"development",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#development","aria-hidden":"true"},"#"),a(" Development")],-1),O=e("ul",null,[e("li",null,"langs: js")],-1),R=e("h3",{id:"build-the-image",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#build-the-image","aria-hidden":"true"},"#"),a(" Build the image")],-1),W={href:"https://github.com/microsoft/playwright/blob/main/utils/docker/build.sh",target:"_blank",rel:"noopener noreferrer"},G=e("code",null,"//utils/docker/build.sh",-1),J=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./utils/docker/build.sh focal playwright:localbuild-focal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The image will be tagged as <code>playwright:localbuild-focal</code> and could be run as:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run --rm -it playwright:localbuild /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3);function M(K,z){const n=o("ExternalLinkIcon"),i=o("RouterLink");return l(),c("div",null,[h,d(" TOC "),m,e("p",null,[e("a",b,[v,s(n)]),a(" is needed to run Chromium with sandbox. This is a "),e("a",g,[a("default Docker seccomp profile"),s(n)]),a(" with extra user namespace cloning permissions:")]),k,e("div",f,[_,e("p",null,[a("Using "),w,a(" is recommended when using Chrome ("),e("a",y,[a("Docker docs"),s(n)]),a("). Chrome can run out of memory without this flag.")])]),x,e("p",null,[a("See our "),s(i,{to:"/book/playwright/ci.html"},{default:p(()=>[a("Continuous Integration guides")]),_:1}),a(" for sample configs.")]),q,T,j,e("ul",null,[D,S,C,L,e("li",null,[F,a(" - docker image for every commit that changed"),U,a(" docker files or browsers, marked with a "),e("a",I,[a("short sha"),s(n)]),a(" (first 7 digits of the SHA commit).")])]),A,B,e("p",null,[a("We currently publish images based on the following "),e("a",P,[a("Ubuntu"),s(n)]),a(" versions:")]),X,E,e("p",null,[a("Browser builds for Firefox and WebKit are built for the "),e("a",N,[a("glibc"),s(n)]),a(" library. Alpine Linux and other distributions that are based on the "),e("a",V,[a("musl"),s(n)]),a(" standard library are not supported.")]),H,O,R,e("p",null,[a("Use "),e("a",W,[G,s(n)]),a(" to build the image.")]),J])}const Z=r(u,[["render",M],["__file","docker.html.vue"]]);export{Z as default};
