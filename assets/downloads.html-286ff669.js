import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as e,c as p,a,b as n,d as c,w as l,f as i}from"./app-207e7d61.js";const u={},d=i(`<p>For every attachment downloaded by the page, [<code>event: Page.download</code>] event is emitted. All these attachments are downloaded into a temporary folder. You can obtain the download url, file system path and payload stream using the [Download] object from the event.</p><p>You can specify where to persist downloaded files using the [<code>option: downloadsPath</code>] option in [<code>method: BrowserType.launch</code>].</p><div class="hint-container note"><p class="hint-container-title">æ³¨</p><p>Downloaded files are deleted when the browser context that produced them is closed.</p></div><p>Here is the simplest way to handle the file download:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Start waiting for download before clicking. Note no await.</span>
<span class="token keyword">const</span> downloadPromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForEvent</span><span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Download file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> download <span class="token operator">=</span> <span class="token keyword">await</span> downloadPromise<span class="token punctuation">;</span>
<span class="token comment">// Wait for the download process to complete</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> download<span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Save downloaded file somewhere</span>
<span class="token keyword">await</span> download<span class="token punctuation">.</span><span class="token function">saveAs</span><span class="token punctuation">(</span><span class="token string">&#39;/path/to/save/download/at.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Wait for the download to start</span>
<span class="token class-name">Download</span> download <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForDownload</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Perform the action that initiates download</span>
    page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Download file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Wait for the download process to complete</span>
<span class="token class-name">Path</span> path <span class="token operator">=</span> download<span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>download<span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Save downloaded file somewhere</span>
download<span class="token punctuation">.</span><span class="token function">saveAs</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/path/to/save/download/at.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Start waiting for the download</span>
<span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_download<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> download_info<span class="token punctuation">:</span>
    <span class="token comment"># Perform the action that initiates download</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Download file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
download <span class="token operator">=</span> <span class="token keyword">await</span> download_info<span class="token punctuation">.</span>value
<span class="token comment"># Wait for the download process to complete</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> download<span class="token punctuation">.</span>path<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># Save downloaded file somewhere</span>
<span class="token keyword">await</span> download<span class="token punctuation">.</span>save_as<span class="token punctuation">(</span><span class="token string">&quot;/path/to/save/download/at.txt&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Start waiting for the download</span>
<span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_download<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> download_info<span class="token punctuation">:</span>
    <span class="token comment"># Perform the action that initiates download</span>
    page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Download file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Wait for the download to start</span>
download <span class="token operator">=</span> download_info<span class="token punctuation">.</span>value
<span class="token comment"># Wait for the download process to complete</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>download<span class="token punctuation">.</span>path<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># Save downloaded file somewhere</span>
download<span class="token punctuation">.</span>save_as<span class="token punctuation">(</span><span class="token string">&quot;/path/to/save/download/at.txt&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Start the task of waiting for the download before clicking</span>
<span class="token class-name"><span class="token keyword">var</span></span> waitForDownloadTask <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">WaitForDownloadAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;Download file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> download <span class="token operator">=</span> <span class="token keyword">await</span> waitForDownloadTask<span class="token punctuation">;</span>
<span class="token comment">// Wait for the download process to complete</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token keyword">await</span> download<span class="token punctuation">.</span><span class="token function">PathAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Save downloaded file somewhere</span>
<span class="token keyword">await</span> download<span class="token punctuation">.</span><span class="token function">SaveAsAsync</span><span class="token punctuation">(</span><span class="token string">&quot;/path/to/save/download/at.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="variations" tabindex="-1"><a class="header-anchor" href="#variations" aria-hidden="true">#</a> Variations</h4><p>If you have no idea what initiates the download, you can still handle the event:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span><span class="token punctuation">,</span> <span class="token parameter">download</span> <span class="token operator">=&gt;</span> download<span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">onDownload</span><span class="token punctuation">(</span>download <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>download<span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">handle_download</span><span class="token punctuation">(</span>download<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">await</span> download<span class="token punctuation">.</span>path<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;download&quot;</span><span class="token punctuation">,</span> handle_download<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;download&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> download<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>download<span class="token punctuation">.</span>path<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>page<span class="token punctuation">.</span>Download <span class="token operator">+=</span> <span class="token punctuation">(</span>sender<span class="token punctuation">,</span> download<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>download<span class="token punctuation">.</span>Url<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Note that handling the event forks the control flow and makes the script harder to follow. Your scenario might end while you are downloading a file since your main control flow is not awaiting for this operation to resolve.</p>`,17),k={class:"hint-container note"},r=a("p",{class:"hint-container-title"},"æ³¨",-1);function v(m,w){const s=o("RouterLink");return e(),p("div",null,[d,a("div",k,[r,a("p",null,[n("For uploading files, see the "),c(s,{to:"/book/playwright/input.html#upload-files"},{default:l(()=>[n("uploading files")]),_:1}),n(" section.")])])])}const f=t(u,[["render",v],["__file","downloads.html.vue"]]);export{f as default};
