import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as p,c as o,a as n,b as s,d as c,f as l}from"./app-3f278ba4.js";const u={},d=l(`<h1 id="flask-sqlalchemy模型属性和mysql数据库数据类型对应关系" tabindex="-1"><a class="header-anchor" href="#flask-sqlalchemy模型属性和mysql数据库数据类型对应关系" aria-hidden="true">#</a> flask-SQLAlchemy模型属性和MySQL数据库数据类型对应关系</h1><table><thead><tr><th>类型名</th><th>Python类型</th><th>数据库类型</th></tr></thead><tbody><tr><td>Integer</td><td>int 整数(4字节)</td><td>INT</td></tr><tr><td>SmallInteger</td><td>int取值范围小的整数(2字节)</td><td>SMALLINT</td></tr><tr><td>BigInteger</td><td>int或long</td><td>BIGINT</td></tr><tr><td>Float</td><td>float</td><td>FLOAT</td></tr><tr><td>Numeric</td><td>decimal.Decimal</td><td>DECIMAL</td></tr><tr><td>String</td><td>str</td><td>VARCHAR</td></tr><tr><td>Text</td><td>str</td><td>TEXT</td></tr><tr><td>Boolean</td><td>bool</td><td>BOOLEAN</td></tr><tr><td>Date</td><td>datetime.date</td><td>DATE</td></tr><tr><td>Time</td><td>datetime.time</td><td>TIME</td></tr><tr><td>DateTime</td><td>datetime.datetime</td><td>DATETIME</td></tr><tr><td>Enum</td><td>str</td><td>ENUM</td></tr><tr><td>LargeBinary</td><td>str</td><td>VARBINARY</td></tr></tbody></table><p>使用：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
db <span class="token operator">=</span> SQLAlchemy<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">id</span> <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>Integer<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    username <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> unique<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    email <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> unique<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    password_hash <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    about_me <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    info <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>Text<span class="token punctuation">)</span>
    last_seen <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>DateTime<span class="token punctuation">,</span> default<span class="token operator">=</span>datetime<span class="token punctuation">.</span>utcnow<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;&lt;User {}&gt;&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>username<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),i={href:"http://blog.51cto.com/13914991/2172809",target:"_blank",rel:"noopener noreferrer"};function r(k,m){const a=e("ExternalLinkIcon");return p(),o("div",null,[d,n("blockquote",null,[n("p",null,[s("参考:"),n("a",i,[s("http://blog.51cto.com/13914991/2172809"),c(a)])])])])}const v=t(u,[["render",r],["__file","flask-SQLAlchemy模型属性和MySQL数据库数据类型对应关系.html.vue"]]);export{v as default};
