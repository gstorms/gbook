import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c,a as n,b as a,d as l,f as s}from"./app-207e7d61.js";const i={},u=s(`<p>Playwright can create handles to the page DOM elements or any other objects inside the<br> page. These handles live in the Playwright process, whereas the actual objects live<br> in the browser. There are two types of handles:</p><ul><li>[JSHandle] to reference any JavaScript objects in the page</li><li>[ElementHandle] to reference DOM elements in the page, it has extra methods that allow<br> performing actions on the elements and asserting their properties.</li></ul><p>Since any DOM element in the page is also a JavaScript object, any [ElementHandle] is<br> a [JSHandle] as well.</p><p>Handles are used to perform operations on those actual objects in the page. You can evaluate<br> on a handle, get handle properties, pass handle as an evaluation parameter, serialize page<br> object into JSON etc. See the [JSHandle] class API for these and methods.</p><h3 id="api-reference" tabindex="-1"><a class="header-anchor" href="#api-reference" aria-hidden="true">#</a> API reference</h3><ul><li>[JSHandle]</li><li>[ElementHandle]</li></ul><p>Here is the easiest way to obtain a [JSHandle].</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> jsHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&#39;window&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//  Use jsHandle for evaluations.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">JSHandle</span> jsHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;window&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//  Use jsHandle for evaluations.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>js_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&#39;window&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  Use jsHandle for evaluations.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>js_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token string">&#39;window&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  Use jsHandle for evaluations.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> jsHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">&quot;window&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//  Use jsHandle for evaluations.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="element-handles" tabindex="-1"><a class="header-anchor" href="#element-handles" aria-hidden="true">#</a> Element Handles</h2><p>:::caution Discouraged<br> The use of [ElementHandle] is discouraged, use [Locator] objects and web-first assertions instead.<br> :::</p><p>When [ElementHandle] is required, it is recommended to fetch it with the<br> [<code>method: Page.waitForSelector</code>] or [<code>method: Frame.waitForSelector</code>] methods. These<br> APIs wait for the element to be attached and visible.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Get the element handle</span>
<span class="token keyword">const</span> elementHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&#39;#box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Assert bounding box for the element</span>
<span class="token keyword">const</span> boundingBox <span class="token operator">=</span> <span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">boundingBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>boundingBox<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Assert attribute for the element</span>
<span class="token keyword">const</span> classNames <span class="token operator">=</span> <span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>classNames<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;highlighted&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Get the element handle</span>
<span class="token class-name">JSHandle</span> jsHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&quot;#box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ElementHandle</span> elementHandle <span class="token operator">=</span> jsHandle<span class="token punctuation">.</span><span class="token function">asElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Assert bounding box for the element</span>
<span class="token class-name">BoundingBox</span> boundingBox <span class="token operator">=</span> elementHandle<span class="token punctuation">.</span><span class="token function">boundingBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> boundingBox<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Assert attribute for the element</span>
<span class="token class-name">String</span> classNames <span class="token operator">=</span> elementHandle<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertTrue</span><span class="token punctuation">(</span>classNames<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;highlighted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Get the element handle</span>
element_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>wait_for_selector<span class="token punctuation">(</span><span class="token string">&#39;#box&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># Assert bounding box for the element</span>
bounding_box <span class="token operator">=</span> <span class="token keyword">await</span> element_handle<span class="token punctuation">.</span>bounding_box<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> bounding_box<span class="token punctuation">.</span>width <span class="token operator">==</span> <span class="token number">100</span>

<span class="token comment"># Assert attribute for the element</span>
class_names <span class="token operator">=</span> <span class="token keyword">await</span> element_handle<span class="token punctuation">.</span>get_attribute<span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> <span class="token string">&#39;highlighted&#39;</span> <span class="token keyword">in</span> class_names
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Get the element handle</span>
element_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>wait_for_selector<span class="token punctuation">(</span><span class="token string">&#39;#box&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># Assert bounding box for the element</span>
bounding_box <span class="token operator">=</span> element_handle<span class="token punctuation">.</span>bounding_box<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> bounding_box<span class="token punctuation">.</span>width <span class="token operator">==</span> <span class="token number">100</span>

<span class="token comment"># Assert attribute for the element</span>
class_names <span class="token operator">=</span> element_handle<span class="token punctuation">.</span>get_attribute<span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">assert</span> <span class="token string">&#39;highlighted&#39;</span> <span class="token keyword">in</span> class_names
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Get the element handle</span>
<span class="token class-name"><span class="token keyword">var</span></span> jsHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">WaitForSelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;#box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> elementHandle <span class="token operator">=</span> jsHandle <span class="token keyword">as</span> <span class="token class-name">ElementHandle</span><span class="token punctuation">;</span>

<span class="token comment">// Assert bounding box for the element</span>
<span class="token class-name"><span class="token keyword">var</span></span> boundingBox <span class="token operator">=</span> <span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">BoundingBoxAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Assert<span class="token punctuation">.</span><span class="token function">AreEqual</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> boundingBox<span class="token punctuation">.</span>Width<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Assert attribute for the element</span>
<span class="token class-name"><span class="token keyword">var</span></span> classNames <span class="token operator">=</span> <span class="token keyword">await</span> elementHandle<span class="token punctuation">.</span><span class="token function">GetAttributeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Assert<span class="token punctuation">.</span><span class="token function">True</span><span class="token punctuation">(</span>classNames<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token string">&quot;highlighted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="handles-as-parameters" tabindex="-1"><a class="header-anchor" href="#handles-as-parameters" aria-hidden="true">#</a> Handles as parameters</h2><p>Handles can be passed into the [<code>method: Page.evaluate</code>] and similar methods.<br> The following snippet creates a new array in the page, initializes it with data<br> and returns a handle to this array into Playwright. It then uses the handle<br> in subsequent evaluations:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Create new array in page.</span>
<span class="token keyword">const</span> myArrayHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  window<span class="token punctuation">.</span>myArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> myArray<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get the length of the array.</span>
<span class="token keyword">const</span> length <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token parameter">a</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">,</span> myArrayHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Add one more element to the array using the handle</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token parameter">arg</span> <span class="token operator">=&gt;</span> arg<span class="token punctuation">.</span>myArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>newElement<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">myArray</span><span class="token operator">:</span> myArrayHandle<span class="token punctuation">,</span>
  <span class="token literal-property property">newElement</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Release the object when it&#39;s no longer needed.</span>
<span class="token keyword">await</span> myArrayHandle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Create new array in page.</span>
<span class="token class-name">JSHandle</span> myArrayHandle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">evaluateHandle</span><span class="token punctuation">(</span><span class="token string">&quot;() =&gt; {\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  window.myArray = [1];\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;  return myArray;\\n&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get the length of the array.</span>
<span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;a =&gt; a.length&quot;</span><span class="token punctuation">,</span> myArrayHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Add one more element to the array using the handle</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> arg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arg<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;myArray&quot;</span><span class="token punctuation">,</span> myArrayHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>
arg<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;newElement&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&quot;arg =&gt; arg.myArray.add(arg.newElement)&quot;</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Release the object when it is no longer needed.</span>
myArrayHandle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create new array in page.</span>
my_array_handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;() =&gt; {
  window.myArray = [1];
  return myArray;
}&quot;&quot;&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Get current length of the array.</span>
length <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;a =&gt; a.length&quot;</span><span class="token punctuation">,</span> my_array_handle<span class="token punctuation">)</span>

<span class="token comment"># Add one more element to the array using the handle</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;(arg) =&gt; arg.myArray.push(arg.newElement)&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token string">&#39;myArray&#39;</span><span class="token punctuation">:</span> my_array_handle<span class="token punctuation">,</span>
  <span class="token string">&#39;newElement&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment"># Release the object when it&#39;s no longer needed.</span>
<span class="token keyword">await</span> my_array_handle<span class="token punctuation">.</span>dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create new array in page.</span>
my_array_handle <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate_handle<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;() =&gt; {
  window.myArray = [1];
  return myArray;
}&quot;&quot;&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Get current length of the array.</span>
length <span class="token operator">=</span> page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;a =&gt; a.length&quot;</span><span class="token punctuation">,</span> my_array_handle<span class="token punctuation">)</span>

<span class="token comment"># Add one more element to the array using the handle</span>
page<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token string">&quot;(arg) =&gt; arg.myArray.push(arg.newElement)&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token string">&#39;myArray&#39;</span><span class="token punctuation">:</span> my_array_handle<span class="token punctuation">,</span>
  <span class="token string">&#39;newElement&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment"># Release the object when it&#39;s no longer needed.</span>
my_array_handle<span class="token punctuation">.</span>dispose<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Create new array in page.</span>
<span class="token class-name"><span class="token keyword">var</span></span> myArrayHandle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateHandleAsync</span><span class="token punctuation">(</span><span class="token string">@&quot;() =&gt; {
    window.myArray = [1];
    return myArray;
}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get the length of the array.</span>
<span class="token class-name"><span class="token keyword">var</span></span> length <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EvaluateAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;a =&gt; a.length&quot;</span><span class="token punctuation">,</span> myArrayHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Add one more element to the array using the handle</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">EvaluateAsync</span><span class="token punctuation">(</span><span class="token string">&quot;arg =&gt; arg.myArray.add(arg.newElement)&quot;</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token punctuation">{</span> myArray <span class="token operator">=</span> myArrayHandle<span class="token punctuation">,</span> newElement <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Release the object when it is no longer needed.</span>
<span class="token keyword">await</span> myArrayHandle<span class="token punctuation">.</span><span class="token function">DisposeAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="handle-lifecycle" tabindex="-1"><a class="header-anchor" href="#handle-lifecycle" aria-hidden="true">#</a> Handle Lifecycle</h2>`,28),r=n("code",null,"method: Page.evaluateHandle",-1),d=n("br",null,null,-1),k=n("code",null,"method: Page.querySelector",-1),m=n("code",null,"method: Page.querySelectorAll",-1),v=n("br",null,null,-1),h=n("code",null,"method: Frame.evaluateHandle",-1),b=n("code",null,"method: Frame.querySelector",-1),g=n("code",null,"method: Frame.querySelectorAll",-1),y=n("br",null,null,-1),w=n("br",null,null,-1),f={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management",target:"_blank",rel:"noopener noreferrer"},_=n("br",null,null,-1),q=n("code",null,"method: JSHandle.dispose",-1),x=s(`<h3 id="api-reference-1" tabindex="-1"><a class="header-anchor" href="#api-reference-1" aria-hidden="true">#</a> API reference</h3><ul><li>[JSHandle]</li><li>[ElementHandle]</li><li>[<code>method: ElementHandle.boundingBox</code>]</li><li>[<code>method: ElementHandle.getAttribute</code>]</li><li>[<code>method: ElementHandle.innerText</code>]</li><li>[<code>method: ElementHandle.innerHTML</code>]</li><li>[<code>method: ElementHandle.textContent</code>]</li><li>[<code>method: JSHandle.evaluate</code>]</li><li>[<code>method: Page.evaluateHandle</code>]</li><li>[<code>method: Page.querySelector</code>]</li><li>[<code>method: Page.querySelectorAll</code>]</li></ul><h2 id="locator-vs-elementhandle" tabindex="-1"><a class="header-anchor" href="#locator-vs-elementhandle" aria-hidden="true">#</a> Locator vs ElementHandle</h2><p>:::caution<br> We only recommend using [ElementHandle] in the rare cases when you need to perform extensive DOM traversal<br> on a static page. For all user actions and assertions use locator instead.<br> :::</p><p>The difference between the [Locator] and [ElementHandle] is that the latter points to a particular element, while Locator captures the logic of how to retrieve that element.</p><p>In the example below, handle points to a particular DOM element on page. If that element changes text or is used by React to render an entirely different component, handle is still pointing to that very stale DOM element. This can lead to unexpected behaviors.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;text=Submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ElementHandle</span> handle <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;text=Submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
handle<span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
handle<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;text=Submit&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span>hover<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>handle <span class="token operator">=</span> page<span class="token punctuation">.</span>query_selector<span class="token punctuation">(</span><span class="token string">&quot;text=Submit&quot;</span><span class="token punctuation">)</span>
handle<span class="token punctuation">.</span>hover<span class="token punctuation">(</span><span class="token punctuation">)</span>
handle<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> handle <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">QuerySelectorAsync</span><span class="token punctuation">(</span><span class="token string">&quot;text=Submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">HoverAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> handle<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>With the locator, every time the locator is used, up-to-date DOM element is located in the page using the selector. So in the snippet below, underlying DOM element is going to be located twice.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Locator</span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
locator<span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
locator<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span>hover<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span>
locator<span class="token punctuation">.</span>hover<span class="token punctuation">(</span><span class="token punctuation">)</span>
locator<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> locator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">HoverAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> locator<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function H(A,j){const e=p("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[a("Handles can be acquired using the page methods such as ["),r,a("],"),d,a(" ["),k,a("] or ["),m,a("] or their frame counterparts"),v,a(" ["),h,a("], ["),b,a("] or ["),g,a("]. Once"),y,a(" created, handles will retain object from"),w,n("a",f,[a("garbage collection"),l(e)]),_,a(" unless page navigates or the handle is manually disposed via the ["),q,a("] method.")]),x])}const B=t(i,[["render",H],["__file","handles.html.vue"]]);export{B as default};
