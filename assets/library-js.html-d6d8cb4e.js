import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c as u,a as n,b as s,d as a,w as e,f as o}from"./app-3f278ba4.js";const r={},d=n("p",null,"Playwright Library provides unified APIs for launching and interacting with browsers, while Playwright Test provides all this plus a fully managed end-to-end Test Runner and experience.",-1),k=n("code",null,"@playwright/test",-1),h=n("code",null,"playwright",-1),m=o(`<h2 id="differences-when-using-library" tabindex="-1"><a class="header-anchor" href="#differences-when-using-library" aria-hidden="true">#</a> Differences when using library</h2><h3 id="library-example" tabindex="-1"><a class="header-anchor" href="#library-example" aria-hidden="true">#</a> Library Example</h3><p>The following is an example of using the Playwright Library directly to launch Chromium, go to a page, and check its title:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> chromium<span class="token punctuation">,</span> devices <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;playwright&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> assert <span class="token keyword">from</span> <span class="token string">&#39;node:assert&#39;</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Setup</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span>devices<span class="token punctuation">[</span><span class="token string">&#39;iPhone 11&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// The actual interesting bit</span>
  <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**.jpg&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;Example Domain&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ðŸ‘Ž not a Web First assertion</span>

  <span class="token comment">// Teardown</span>
  <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> assert <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:assert&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> chromium<span class="token punctuation">,</span> devices <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Setup</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span>devices<span class="token punctuation">[</span><span class="token string">&#39;iPhone 11&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// The actual interesting bit</span>
  <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**.jpg&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;Example Domain&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ðŸ‘Ž not a Web First assertion</span>

  <span class="token comment">// Teardown</span>
  <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run it with <code>node my-script.js</code>.</p><h3 id="test-example" tabindex="-1"><a class="header-anchor" href="#test-example" aria-hidden="true">#</a> Test Example</h3><p>A test to achieve similar behavior, would look like:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> expect<span class="token punctuation">,</span> test<span class="token punctuation">,</span> devices <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>

test<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>devices<span class="token punctuation">[</span><span class="token string">&#39;iPhone 11&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;should be titled&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> page<span class="token punctuation">,</span> context <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**.jpg&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveTitle</span><span class="token punctuation">(</span><span class="token string">&#39;Example&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> expect<span class="token punctuation">,</span> test<span class="token punctuation">,</span> devices <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

test<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>devices<span class="token punctuation">[</span><span class="token string">&#39;iPhone 11&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;should be titled&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> page<span class="token punctuation">,</span> context <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**.jpg&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveTitle</span><span class="token punctuation">(</span><span class="token string">&#39;Example&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run it with <code>npx playwright test</code>.</p><h3 id="key-differences" tabindex="-1"><a class="header-anchor" href="#key-differences" aria-hidden="true">#</a> Key Differences</h3><p>The key differences to note are as follows:</p>`,13),v=n("thead",null,[n("tr",null,[n("th"),n("th",null,"Library"),n("th",null,"Test")])],-1),g=n("tr",null,[n("td",null,"Installation"),n("td",null,[n("code",null,"npm install playwright")]),n("td",null,[n("code",null,"npm init playwright@latest"),s(" - note "),n("code",null,"install"),s(" vs. "),n("code",null,"init")])],-1),w=n("tr",null,[n("td",null,"Install browsers"),n("td",null,"Chromium, Firefox, WebKit are installed by default"),n("td",null,[n("code",null,"npx playwright install"),s(" or "),n("code",null,"npx playwright install chromium"),s(" for a single one")])],-1),b=n("tr",null,[n("td",null,[n("code",null,"import"),s("/"),n("code",null,"require"),s(" name")]),n("td",null,[n("code",null,"playwright")]),n("td",null,[n("code",null,"@playwright/test")])],-1),y=n("td",null,"Initialization",-1),f=n("td",null,[s("Explicitly need to: "),n("ol",null,[n("li",null,[s("Pick a browser to use, e.g. "),n("code",null,"chromium")]),n("li",null,[s("Launch browser with ["),n("code",null,"method: BrowserType.launch"),s("]")]),n("li",null,[s("Create a context with ["),n("code",null,"method: Browser.newContext"),s("], "),n("em",null,"and"),s(" pass any context options explicitly, e.g. "),n("code",null,"devices['iPhone 11']")]),n("li",null,[s("Create a page with ["),n("code",null,"method: BrowserContext.newPage"),s("]")])])],-1),x=n("code",null,"page",-1),_=n("code",null,"context",-1),j=n("td",null,"Assertions",-1),T=n("td",null,"No built-in Web-First Assertions",-1),P=n("ul",null,[n("li",null,[s("["),n("code",null,"method: PageAssertions.toHaveTitle"),s("]")]),n("li",null,[s("["),n("code",null,"method: PageAssertions.toHaveScreenshot#1"),s("]")])],-1),C=n("td",null,"Cleanup",-1),S=n("td",null,[s("Explicitly need to: "),n("ol",null,[n("li",null,[s("Close context with ["),n("code",null,"method: BrowserContext.close"),s("]")]),n("li",null,[s("Close browser with ["),n("code",null,"method: Browser.close"),s("]")])])],-1),I=n("td",null,"Running",-1),E=n("td",null,"When using the Library, you run the code as a node script, possibly with some compilation first.",-1),A=n("code",null,"npx playwright test",-1),L=n("p",null,"In addition to the above, Playwright Test, as a full-featured Test Runner, includes:",-1),R=n("li",null,"and moreâ€¦",-1),W=n("h2",{id:"usage",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#usage","aria-hidden":"true"},"#"),s(" Usage")],-1),N=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> playwright
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),q=o(`<p>Once installed, you can <code>require</code> Playwright in a Node.js script, and launch any of the 3 browsers (<code>chromium</code>, <code>firefox</code> and <code>webkit</code>).</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> chromium <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Create pages, interact with UI elements, assert values</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),B={href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await",target:"_blank",rel:"noopener noreferrer"},F=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// Start of async arrow function</span>
  <span class="token comment">// Function code</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// End of the function and () to invoke itself</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="first-script" tabindex="-1"><a class="header-anchor" href="#first-script" aria-hidden="true">#</a> First script</h2><p>In our first script, we will navigate to <code>whatsmyuseragent.org</code> and take a screenshot in WebKit.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> webkit <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> webkit<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;http://whatsmyuseragent.org/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">example.png</span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),D=n("code",null,"headless: false",-1),J=n("code",null,"slowMo",-1),U=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>firefox<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">slowMo</span><span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="record-scripts" tabindex="-1"><a class="header-anchor" href="#record-scripts" aria-hidden="true">#</a> Record scripts</h2>`,2),z=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright codegen wikipedia.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="typescript-support" tabindex="-1"><a class="header-anchor" href="#typescript-support" aria-hidden="true">#</a> TypeScript support</h2><p>Playwright includes built-in support for TypeScript. Type definitions will be imported automatically. It is recommended to use type-checking to improve the IDE experience.</p><h3 id="in-javascript" tabindex="-1"><a class="header-anchor" href="#in-javascript" aria-hidden="true">#</a> In JavaScript</h3><p>Add the following to the top of your JavaScript file to get type-checking in VS Code or WebStorm.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//@ts-check</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Alternatively, you can use JSDoc to set types for variables.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Page<span class="token punctuation">}</span></span> */</span>
<span class="token keyword">let</span> page<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="in-typescript" tabindex="-1"><a class="header-anchor" href="#in-typescript" aria-hidden="true">#</a> In TypeScript</h3><p>TypeScript support will work out-of-the-box. Types can also be imported explicitly.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">page</span><span class="token operator">:</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Page<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11);function V(H,K){const t=p("RouterLink"),c=p("ExternalLinkIcon");return l(),u("div",null,[d,n("p",null,[s("Under most circumstances, for end-to-end testing, you'll want to use "),k,s(" (Playwright Test), and not "),h,s(" (Playwright Library) directly. To get started with Playwright Test, follow the "),a(t,{to:"/book/playwright/intro-js.html"},{default:e(()=>[s("Getting Started Guide")]),_:1}),s(".")]),m,n("table",null,[v,n("tbody",null,[g,w,b,n("tr",null,[y,f,n("td",null,[s("An isolated "),x,s(" and "),_,s(" are provided to each test out-of the box, along with other "),a(t,{to:"/book/playwright/test-fixtures.html#built-in-fixtures"},{default:e(()=>[s("built-in fixtures")]),_:1}),s(". No explicit creation. If referenced by the test in it's arguments, the Test Runner will create them for the test. (i.e. lazy-initialization)")])]),n("tr",null,[j,T,n("td",null,[a(t,{to:"/book/playwright/test-assertions.html"},{default:e(()=>[s("Web-First assertions")]),_:1}),s(" like: "),P,s(" which auto-wait and retry for the condition to be met.")])]),n("tr",null,[C,S,n("td",null,[s("No explicit close of "),a(t,{to:"/book/playwright/test-fixtures.html#built-in-fixtures"},{default:e(()=>[s("built-in fixtures")]),_:1}),s("; the Test Runner will take care of it.")])]),n("tr",null,[I,E,n("td",null,[s("When using the Test Runner, you use the "),A,s(" command. Along with your "),a(t,{to:"/book/playwright/test-configuration.html"},{default:e(()=>[s("config")]),_:1}),s(", the Test Runner handles any compilation and choosing what to run and how to run it.")])])])]),L,n("ul",null,[n("li",null,[a(t,{to:"/book/playwright/test-configuration.html"},{default:e(()=>[s("Configuration Matrix and Projects")]),_:1}),s(": In the above example, in the Playwright Library version, if we wanted to run with a different device or browser, we'd have to modify the script and plumb the information through. With Playwright Test, we can just specify the "),a(t,{to:"/book/playwright/test-configuration.html"},{default:e(()=>[s("matrix of configurations")]),_:1}),s(" in one place, and it will create run the one test under each of these configurations.")]),n("li",null,[a(t,{to:"/book/playwright/test-parallel.html"},{default:e(()=>[s("Parallelization")]),_:1})]),n("li",null,[a(t,{to:"/book/playwright/test-assertions.html"},{default:e(()=>[s("Web-First Assertions")]),_:1})]),n("li",null,[a(t,{to:"/book/playwright/test-reporters.html"},{default:e(()=>[s("Reporting")]),_:1})]),n("li",null,[a(t,{to:"/book/playwright/test-retries.html"},{default:e(()=>[s("Retries")]),_:1})]),n("li",null,[a(t,{to:"/book/playwright/test-configuration.html#record-test-trace"},{default:e(()=>[s("Easily Enabled Tracing")]),_:1})]),R]),W,n("p",null,[s("Use npm or Yarn to install Playwright library in your Node.js project. See "),a(t,{to:"/book/playwright/troubleshooting.html#system-requirements"},{default:e(()=>[s("system requirements")]),_:1}),s(".")]),N,n("p",null,[s("This single command downloads the Playwright NPM package and browser binaries for Chromium, Firefox and WebKit. To modify this behavior see "),a(t,{to:"/book/playwright/browsers.html#managing-browser-binaries"},{default:e(()=>[s("managing browsers")]),_:1}),s(".")]),q,n("p",null,[s("Playwright APIs are asynchronous and return Promise objects. Our code examples use "),n("a",B,[s("the async/await pattern"),a(c)]),s(" to ease readability. The code is wrapped in an unnamed async arrow function which is invoking itself.")]),F,n("p",null,[s("By default, Playwright runs the browsers in headless mode. To see the browser UI, pass the "),D,s(" flag while launching the browser. You can also use "),J,s(" to slow down execution. Learn more in the debugging tools "),a(t,{to:"/book/playwright/debug.html"},{default:e(()=>[s("section")]),_:1}),s(".")]),U,n("p",null,[a(t,{to:"/book/playwright/cli.html"},{default:e(()=>[s("Command line tools")]),_:1}),s(" can be used to record user interactions and generate JavaScript code.")]),z])}const O=i(r,[["render",V],["__file","library-js.html.vue"]]);export{O as default};
