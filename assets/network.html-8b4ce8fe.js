import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as i,c as u,a as s,b as n,d as a,w as l,f as p}from"./app-3f278ba4.js";const r={},k=s("strong",null,"monitor",-1),d=s("strong",null,"modify",-1),v={href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest",target:"_blank",rel:"noopener noreferrer"},m=s("br",null,null,-1),g={href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",target:"_blank",rel:"noopener noreferrer"},b=p(`<h2 id="http-authentication" tabindex="-1"><a class="header-anchor" href="#http-authentication" aria-hidden="true">#</a> HTTP Authentication</h2><p>Perform HTTP Authentication.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">httpCredentials</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;bill&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;pa55w0rd&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">httpCredentials</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;bill&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;pa55w0rd&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BrowserContext</span> context <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Browser<span class="token punctuation">.</span>NewContextOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setHttpCredentials</span><span class="token punctuation">(</span><span class="token string">&quot;bill&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pa55w0rd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Page</span> page <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>
    http_credentials<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bill&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;pa55w0rd&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>
    http_credentials<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bill&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;pa55w0rd&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
page <span class="token operator">=</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> <span class="token keyword">await</span> Browser<span class="token punctuation">.</span><span class="token function">NewContextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    HttpCredentials <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpCredentials</span>
    <span class="token punctuation">{</span>
        Username <span class="token operator">=</span> <span class="token string">&quot;bill&quot;</span><span class="token punctuation">,</span>
        Password <span class="token operator">=</span> <span class="token string">&quot;pa55w0rd&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="http-proxy" tabindex="-1"><a class="header-anchor" href="#http-proxy" aria-hidden="true">#</a> HTTP Proxy</h2><p>You can configure pages to load over the HTTP(S) proxy or SOCKSv5. Proxy can be either set globally<br> for the entire browser, or for each browser context individually.</p><p>You can optionally specify username and password for HTTP(S) proxy, you can also specify hosts to<br> bypass proxy for.</p><p>Here is an example of a global proxy:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token string">&#39;http://myproxy.com:3128&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;usr&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;pwd&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token string">&#39;http://myproxy.com:3128&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;usr&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;pwd&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Browser</span> browser <span class="token operator">=</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BrowserType<span class="token punctuation">.</span>LaunchOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setProxy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token string">&quot;http://myproxy.com:3128&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token char">&#39;usr&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token char">&#39;pwd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>proxy<span class="token operator">=</span><span class="token punctuation">{</span>
  <span class="token string">&quot;server&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://myproxy.com:3128&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;usr&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;pwd&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>browser <span class="token operator">=</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>proxy<span class="token operator">=</span><span class="token punctuation">{</span>
  <span class="token string">&quot;server&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://myproxy.com:3128&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;usr&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;pwd&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Proxy</span>
<span class="token punctuation">{</span>
    Server <span class="token operator">=</span> <span class="token string">&quot;http://myproxy.com:3128&quot;</span><span class="token punctuation">,</span>
    Username <span class="token operator">=</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
    Password <span class="token operator">=</span> <span class="token string">&quot;pwd&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> BrowserType<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Proxy <span class="token operator">=</span> proxy
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When specifying proxy for each context individually, <strong>Chromium on Windows</strong> needs a hint that proxy will be set. This is done via passing a non-empty proxy server to the browser itself. Here is an example of a context-specific proxy:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">launchOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// Browser proxy option is required for Chromium on Windows.</span>
      <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token string">&#39;per-context&#39;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token string">&#39;http://myproxy.com:3128&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// Browser proxy option is required for Chromium on Windows.</span>
  <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token string">&#39;per-context&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token string">&#39;http://myproxy.com:3128&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Browser</span> browser <span class="token operator">=</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BrowserType<span class="token punctuation">.</span>LaunchOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// Browser proxy option is required for Chromium on Windows.</span>
  <span class="token punctuation">.</span><span class="token function">setProxy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token string">&quot;per-context&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">BrowserContext</span> context <span class="token operator">=</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Browser<span class="token punctuation">.</span>NewContextOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setProxy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token string">&quot;http://myproxy.com:3128&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Browser proxy option is required for Chromium on Windows.</span>
browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>proxy<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;server&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;per-context&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>proxy<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;server&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://myproxy.com:3128&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Browser proxy option is required for Chromium on Windows.</span>
browser <span class="token operator">=</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span>proxy<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;server&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;per-context&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>proxy<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;server&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://myproxy.com:3128&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Proxy</span> <span class="token punctuation">{</span> Server <span class="token operator">=</span> <span class="token string">&quot;per-context&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> BrowserType<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Browser proxy option is required for Chromium on Windows.</span>
    Proxy <span class="token operator">=</span> proxy
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> <span class="token keyword">await</span> Browser<span class="token punctuation">.</span><span class="token function">NewContextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Proxy</span> <span class="token punctuation">{</span> Server <span class="token operator">=</span> <span class="token string">&quot;http://myproxy.com:3128&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="network-events" tabindex="-1"><a class="header-anchor" href="#network-events" aria-hidden="true">#</a> Network events</h2><p>You can monitor all the [Request]s and [Response]s:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Subscribe to &#39;request&#39; and &#39;response&#39; events.</span>
page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> <span class="token parameter">request</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;&gt;&#39;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;response&#39;</span><span class="token punctuation">,</span> <span class="token parameter">response</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;&lt;&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>microsoft<span class="token punctuation">.</span>playwright<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Playwright</span> playwright <span class="token operator">=</span> <span class="token class-name">Playwright</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">BrowserType</span> chromium <span class="token operator">=</span> playwright<span class="token punctuation">.</span><span class="token function">chromium</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Browser</span> browser <span class="token operator">=</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Page</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">onRequest</span><span class="token punctuation">(</span>request <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt; &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">onResponse</span><span class="token punctuation">(</span>response <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> async_playwright

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    chromium <span class="token operator">=</span> playwright<span class="token punctuation">.</span>chromium
    browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># Subscribe to &quot;request&quot; and &quot;response&quot; events.</span>
    page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> request<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>method<span class="token punctuation">,</span> request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;response&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> response<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>status<span class="token punctuation">,</span> response<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> async_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
        <span class="token keyword">await</span> run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> sync_playwright

<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>playwright<span class="token punctuation">)</span><span class="token punctuation">:</span>
    chromium <span class="token operator">=</span> playwright<span class="token punctuation">.</span>chromium
    browser <span class="token operator">=</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># Subscribe to &quot;request&quot; and &quot;response&quot; events.</span>
    page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> request<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>method<span class="token punctuation">,</span> request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;response&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> response<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>status<span class="token punctuation">,</span> response<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>
    page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
    browser<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> sync_playwright<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> playwright<span class="token punctuation">:</span>
    run<span class="token punctuation">(</span>playwright<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Playwright</span><span class="token punctuation">;</span>

<span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> playwright <span class="token operator">=</span> <span class="token keyword">await</span> Playwright<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> browser <span class="token operator">=</span> <span class="token keyword">await</span> playwright<span class="token punctuation">.</span>Chromium<span class="token punctuation">.</span><span class="token function">LaunchAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewPageAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span>Request <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> request<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt; &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>Method <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>Url<span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span>Response <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> response<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt; &quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span>Status <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span>Url<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or wait for a network response after the button click with [<code>method: Page.waitForResponse</code>]:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Use a glob URL pattern. Note no await.</span>
<span class="token keyword">const</span> responsePromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForResponse</span><span class="token punctuation">(</span><span class="token string">&#39;**/api/fetch_data&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Update&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> responsePromise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Use a glob URL pattern</span>
<span class="token class-name">Response</span> response <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForResponse</span><span class="token punctuation">(</span><span class="token string">&quot;**/api/fetch_data&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Use a glob url pattern</span>
<span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_response<span class="token punctuation">(</span><span class="token string">&quot;**/api/fetch_data&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> response_info<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> <span class="token keyword">await</span> response_info<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Use a glob url pattern</span>
<span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_response<span class="token punctuation">(</span><span class="token string">&quot;**/api/fetch_data&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> response_info<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> response_info<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Use a glob URL pattern</span>
<span class="token class-name"><span class="token keyword">var</span></span> waitForResponseTask <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">WaitForResponseAsync</span><span class="token punctuation">(</span><span class="token string">&quot;**/api/fetch_data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;Update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> waitForResponseTask<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="variations" tabindex="-1"><a class="header-anchor" href="#variations" aria-hidden="true">#</a> Variations</h4><p>Wait for [Response]s with [<code>method: Page.waitForResponse</code>]</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Use a RegExp. Note no await.</span>
<span class="token keyword">const</span> responsePromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForResponse</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.jpeg$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Update&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> responsePromise<span class="token punctuation">;</span>

<span class="token comment">// Use a predicate taking a Response object. Note no await.</span>
<span class="token keyword">const</span> responsePromise <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForResponse</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Update&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> responsePromise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Use a RegExp</span>
<span class="token class-name">Response</span> response <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForResponse</span><span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\.jpeg$&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Use a predicate taking a Response object</span>
<span class="token class-name">Response</span> response <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForResponse</span><span class="token punctuation">(</span>r <span class="token operator">-&gt;</span> r<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Use a regular expression</span>
<span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_response<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;\\.jpeg$&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> response_info<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> <span class="token keyword">await</span> response_info<span class="token punctuation">.</span>value

<span class="token comment"># Use a predicate taking a response object</span>
<span class="token keyword">async</span> <span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_response<span class="token punctuation">(</span><span class="token keyword">lambda</span> response<span class="token punctuation">:</span> token <span class="token keyword">in</span> response<span class="token punctuation">.</span>url<span class="token punctuation">)</span> <span class="token keyword">as</span> response_info<span class="token punctuation">:</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> <span class="token keyword">await</span> response_info<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Use a regular expression</span>
<span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_response<span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;\\.jpeg$&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> response_info<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> response_info<span class="token punctuation">.</span>value

<span class="token comment"># Use a predicate taking a response object</span>
<span class="token keyword">with</span> page<span class="token punctuation">.</span>expect_response<span class="token punctuation">(</span><span class="token keyword">lambda</span> response<span class="token punctuation">:</span> token <span class="token keyword">in</span> response<span class="token punctuation">.</span>url<span class="token punctuation">)</span> <span class="token keyword">as</span> response_info<span class="token punctuation">:</span>
    page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
response <span class="token operator">=</span> response_info<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Use a regular expression</span>
<span class="token class-name"><span class="token keyword">var</span></span> waitForResponseTask <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">WaitForResponseAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\.jpeg$&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;Update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> waitForResponseTask<span class="token punctuation">;</span>

<span class="token comment">// Use a predicate taking a Response object</span>
<span class="token class-name"><span class="token keyword">var</span></span> waitForResponseTask <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">WaitForResponseAsync</span><span class="token punctuation">(</span>r <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span>Url<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;Update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> waitForResponseTask<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="handle-requests" tabindex="-1"><a class="header-anchor" href="#handle-requests" aria-hidden="true">#</a> Handle requests</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**/api/fetch_data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">fulfill</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token literal-property property">body</span><span class="token operator">:</span> testData<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;**/api/fetch_data&quot;</span><span class="token punctuation">,</span> route <span class="token operator">-&gt;</span> route<span class="token punctuation">.</span><span class="token function">fulfill</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Route<span class="token punctuation">.</span>FulfillOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span>testData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>route<span class="token punctuation">(</span>
    <span class="token string">&quot;**/api/fetch_data&quot;</span><span class="token punctuation">,</span>
    <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>fulfill<span class="token punctuation">(</span>status<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> body<span class="token operator">=</span>test_data<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>route<span class="token punctuation">(</span>
    <span class="token string">&quot;**/api/fetch_data&quot;</span><span class="token punctuation">,</span>
    <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>fulfill<span class="token punctuation">(</span>status<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> body<span class="token operator">=</span>test_data<span class="token punctuation">)</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can mock API endpoints via handling the network requests in your Playwright script.</p><h4 id="variations-1" tabindex="-1"><a class="header-anchor" href="#variations-1" aria-hidden="true">#</a> Variations</h4><p>Set up route on the entire browser context with [<code>method: BrowserContext.route</code>] or page with [<code>method: Page.route</code>]. It will apply to popup windows and opened links.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> browserContext<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**/api/login&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">fulfill</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&#39;accept&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>browserContext<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;**/api/login&quot;</span><span class="token punctuation">,</span> route <span class="token operator">-&gt;</span> route<span class="token punctuation">.</span><span class="token function">fulfill</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Route<span class="token punctuation">.</span>FulfillOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span><span class="token string">&quot;accept&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> context<span class="token punctuation">.</span>route<span class="token punctuation">(</span>
    <span class="token string">&quot;**/api/login&quot;</span><span class="token punctuation">,</span>
    <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>fulfill<span class="token punctuation">(</span>status<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> body<span class="token operator">=</span><span class="token string">&quot;accept&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context<span class="token punctuation">.</span>route<span class="token punctuation">(</span>
    <span class="token string">&quot;**/api/login&quot;</span><span class="token punctuation">,</span>
    <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>fulfill<span class="token punctuation">(</span>status<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> body<span class="token operator">=</span><span class="token string">&quot;accept&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RouteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;**/api/fetch_data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> route <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> route<span class="token punctuation">.</span><span class="token function">FulfillAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span> Body <span class="token operator">=</span> testData <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GotoAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="modify-requests" tabindex="-1"><a class="header-anchor" href="#modify-requests" aria-hidden="true">#</a> Modify requests</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Delete header</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**/*&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> headers <span class="token operator">=</span> route<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">headers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">delete</span> headers<span class="token punctuation">[</span><span class="token string">&#39;X-Secret&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  route<span class="token punctuation">.</span><span class="token function">continue</span><span class="token punctuation">(</span><span class="token punctuation">{</span> headers <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Continue requests as POST.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**/*&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">continue</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Delete header</span>
page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> route <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>route<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">headers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  headers<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&quot;X-Secret&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    route<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Route<span class="token punctuation">.</span>ResumeOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setHeaders</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Continue requests as POST.</span>
page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> route <span class="token operator">-&gt;</span> route<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Route<span class="token punctuation">.</span>ResumeOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMethod</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Delete header</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">handle_route</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span><span class="token punctuation">:</span>
    headers <span class="token operator">=</span> route<span class="token punctuation">.</span>request<span class="token punctuation">.</span>headers
    <span class="token keyword">del</span> headers<span class="token punctuation">[</span><span class="token string">&quot;x-secret&quot;</span><span class="token punctuation">]</span>
    route<span class="token punctuation">.</span>continue_<span class="token punctuation">(</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> handle_route<span class="token punctuation">)</span>

<span class="token comment"># Continue requests as POST.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>continue_<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Delete header</span>
<span class="token keyword">def</span> <span class="token function">handle_route</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span><span class="token punctuation">:</span>
    headers <span class="token operator">=</span> route<span class="token punctuation">.</span>request<span class="token punctuation">.</span>headers
    <span class="token keyword">del</span> headers<span class="token punctuation">[</span><span class="token string">&quot;x-secret&quot;</span><span class="token punctuation">]</span>
    route<span class="token punctuation">.</span>continue_<span class="token punctuation">(</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> handle_route<span class="token punctuation">)</span>

<span class="token comment"># Continue requests as POST.</span>
page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>continue_<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Delete header</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RouteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> route <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Headers<span class="token punctuation">.</span><span class="token function">ToDictionary</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Key<span class="token punctuation">,</span> x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    headers<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span><span class="token string">&quot;X-Secret&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> route<span class="token punctuation">.</span><span class="token function">ContinueAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">RouteContinueOptions</span> <span class="token punctuation">{</span> Headers <span class="token operator">=</span> headers <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Continue requests as POST.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RouteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> route <span class="token operator">=&gt;</span> <span class="token keyword">await</span> route<span class="token punctuation">.</span><span class="token function">ContinueAsync</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">method</span><span class="token punctuation">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can continue requests with modifications. Example above removes an HTTP header from the outgoing requests.</p><h2 id="abort-requests" tabindex="-1"><a class="header-anchor" href="#abort-requests" aria-hidden="true">#</a> Abort requests</h2><p>You can abort requests using [<code>method: Page.route</code>] and [<code>method: Route.abort</code>].</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**/*.{png,jpg,jpeg}&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Abort based on the request type</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**/*&#39;</span><span class="token punctuation">,</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> route<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resourceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;image&#39;</span> <span class="token operator">?</span>
      route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> route<span class="token punctuation">.</span><span class="token function">continue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;**/*.{png,jpg,jpeg}&quot;</span><span class="token punctuation">,</span> route <span class="token operator">-&gt;</span> route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Abort based on the request type</span>
page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> route <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resourceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    route<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span>
    route<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*.{png,jpg,jpeg}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Abort based on the request type</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> route<span class="token punctuation">.</span>request<span class="token punctuation">.</span>resource_type <span class="token operator">==</span> <span class="token string">&quot;image&quot;</span>  <span class="token keyword">else</span> route<span class="token punctuation">.</span>continue_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*.{png,jpg,jpeg}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Abort based on the request type</span>
page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> route<span class="token punctuation">:</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> route<span class="token punctuation">.</span>request<span class="token punctuation">.</span>resource_type <span class="token operator">==</span> <span class="token string">&quot;image&quot;</span>  <span class="token keyword">else</span> route<span class="token punctuation">.</span>continue_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RouteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;**/*.{png,jpg,jpeg}&quot;</span><span class="token punctuation">,</span> route <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span><span class="token function">AbortAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Abort based on the request type</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">RouteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> route <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">.</span><span class="token function">Equals</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>ResourceType<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> route<span class="token punctuation">.</span><span class="token function">AbortAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
    <span class="token keyword">await</span> route<span class="token punctuation">.</span><span class="token function">ContinueAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="modify-responses" tabindex="-1"><a class="header-anchor" href="#modify-responses" aria-hidden="true">#</a> Modify responses</h2><p>To modify a response use [APIRequestContext] to get the original response and then pass the response to [<code>method: Route.fulfill</code>]. You can override individual fields on the response via options:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;**/title.html&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">route</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Fetch original response.</span>
  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> route<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Add a prefix to the title.</span>
  <span class="token keyword">let</span> body <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  body <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;title&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;title&gt;My prefix:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  route<span class="token punctuation">.</span><span class="token function">fulfill</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// Pass all fields from the response.</span>
    response<span class="token punctuation">,</span>
    <span class="token comment">// Override response body.</span>
    body<span class="token punctuation">,</span>
    <span class="token comment">// Force content type to be html.</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>response<span class="token punctuation">.</span><span class="token function">headers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;content-type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/html&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;**/title.html&quot;</span><span class="token punctuation">,</span> route <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Fetch original response.</span>
  <span class="token class-name">APIResponse</span> response <span class="token operator">=</span> route<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Add a prefix to the title.</span>
  <span class="token class-name">String</span> body <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  body <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;title&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;title&gt;My prefix:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">headers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  headers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  route<span class="token punctuation">.</span><span class="token function">fulfill</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Route<span class="token punctuation">.</span>FulfillOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// Pass all fields from the response.</span>
    <span class="token punctuation">.</span><span class="token function">setResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
    <span class="token comment">// Override response body.</span>
    <span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>
    <span class="token comment">// Force content type to be html.</span>
    <span class="token punctuation">.</span><span class="token function">setHeaders</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">handle_route</span><span class="token punctuation">(</span>route<span class="token punctuation">:</span> Route<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token comment"># Fetch original response.</span>
    response <span class="token operator">=</span> <span class="token keyword">await</span> route<span class="token punctuation">.</span>fetch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># Add a prefix to the title.</span>
    body <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span>
    body <span class="token operator">=</span> body<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;&lt;title&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;title&gt;My prefix:&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> route<span class="token punctuation">.</span>fulfill<span class="token punctuation">(</span>
        <span class="token comment"># Pass all fields from the response.</span>
        response<span class="token operator">=</span>response<span class="token punctuation">,</span>
        <span class="token comment"># Override response body.</span>
        body<span class="token operator">=</span>body<span class="token punctuation">,</span>
        <span class="token comment"># Force content type to be html.</span>
        headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">**</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">,</span> <span class="token string">&quot;content-type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/title.html&quot;</span><span class="token punctuation">,</span> handle_route<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">handle_route</span><span class="token punctuation">(</span>route<span class="token punctuation">:</span> Route<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token comment"># Fetch original response.</span>
    response <span class="token operator">=</span> route<span class="token punctuation">.</span>fetch<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># Add a prefix to the title.</span>
    body <span class="token operator">=</span> response<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span>
    body <span class="token operator">=</span> body<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;&lt;title&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;title&gt;My prefix:&quot;</span><span class="token punctuation">)</span>
    route<span class="token punctuation">.</span>fulfill<span class="token punctuation">(</span>
        <span class="token comment"># Pass all fields from the response.</span>
        response<span class="token operator">=</span>response<span class="token punctuation">,</span>
        <span class="token comment"># Override response body.</span>
        body<span class="token operator">=</span>body<span class="token punctuation">,</span>
        <span class="token comment"># Force content type to be html.</span>
        headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">**</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">,</span> <span class="token string">&quot;content-type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/title.html&quot;</span><span class="token punctuation">,</span> handle_route<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> Page<span class="token punctuation">.</span><span class="token function">RouteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;**/title.html&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> route <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Fetch original response.</span>
    <span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> route<span class="token punctuation">.</span><span class="token function">FetchAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Add a prefix to the title.</span>
    <span class="token class-name"><span class="token keyword">var</span></span> body <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">TextAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    body <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;title&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;title&gt;My prefix:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> headers <span class="token operator">=</span> response<span class="token punctuation">.</span>Headers<span class="token punctuation">;</span>
    headers<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">await</span> route<span class="token punctuation">.</span><span class="token function">FulfillAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Pass all fields from the response.</span>
        Response <span class="token operator">=</span> response<span class="token punctuation">,</span>
        <span class="token comment">// Override response body.</span>
        Body <span class="token operator">=</span> body<span class="token punctuation">,</span>
        <span class="token comment">// Force content type to be html.</span>
        Headers <span class="token operator">=</span> headers<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="record-and-replay-requests" tabindex="-1"><a class="header-anchor" href="#record-and-replay-requests" aria-hidden="true">#</a> Record and replay requests</h2><p>You can record network activity as an HTTP Archive file (HAR). Later on, this archive can be used to mock responses to the network requests. You&#39;ll need to:</p><ol><li>Record a HAR file.</li><li>Commit the HAR file alongside the tests.</li><li>Route requests using the saved HAR files in the tests.</li></ol><h3 id="recording-har-with-cli" tabindex="-1"><a class="header-anchor" href="#recording-har-with-cli" aria-hidden="true">#</a> Recording HAR with CLI</h3>`,83),h=s("code",null,"--save-har",-1),y=s("code",null,"--save-har-glob",-1),w=s("code",null,".zip",-1),f=s("code",null,"zip",-1),q=p(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Save API requests from example.com as &quot;example.har&quot; archive.</span>
npx playwright <span class="token function">open</span> --save-har<span class="token operator">=</span>example.har --save-har-glob<span class="token operator">=</span><span class="token string">&quot;**/api/**&quot;</span> https://example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Save API requests from example.com as &quot;example.har&quot; archive.</span>
mvn exec:java <span class="token parameter variable">-e</span> <span class="token parameter variable">-D</span> <span class="token assign-left variable">exec.mainClass</span><span class="token operator">=</span>com.microsoft.playwright.CLI <span class="token parameter variable">-D</span> <span class="token assign-left variable">exec.args</span><span class="token operator">=</span><span class="token string">&quot;open --save-har=example.har --save-har-glob=&#39;**/api/**&#39; https://example.com&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Save API requests from example.com as &quot;example.har&quot; archive.</span>
playwright <span class="token function">open</span> --save-har<span class="token operator">=</span>example.har --save-har-glob<span class="token operator">=</span><span class="token string">&quot;**/api/**&quot;</span> https://example.coms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Save API requests from example.com as &quot;example.har&quot; archive.</span>
pwsh bin/Debug/netX/playwright.ps1 <span class="token function">open</span> --save-har<span class="token operator">=</span>example.har --save-har-glob<span class="token operator">=</span><span class="token string">&quot;**/api/**&quot;</span> https://example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="recording-har-with-a-script" tabindex="-1"><a class="header-anchor" href="#recording-har-with-a-script" aria-hidden="true">#</a> Recording HAR with a script</h3><p>Alternatively, instead of using the CLI, you can record HAR programmatically. Pass [<code>option: har</code>] option when creating a [BrowserContext] with [<code>method: Browser.newContext</code>] to create an archive. If the har file name ends with <code>.zip</code>, artifacts are written as separate files and are all compressed into a single <code>zip</code>.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">recordHar</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;example.har&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">urlFilter</span><span class="token operator">:</span> <span class="token string">&#39;**/api/**&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ... Perform actions ...</span>

<span class="token comment">// Close context to ensure HAR is saved to disk.</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BrowserContext</span> context <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Browser<span class="token punctuation">.</span>NewContextOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">setRecordHarPath</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;example.har&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">setRecordHarUrlFilter</span><span class="token punctuation">(</span><span class="token string">&quot;**/api/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ... Perform actions ...</span>

<span class="token comment">// Close context to ensure HAR is saved to disk.</span>
context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>record_har_path<span class="token operator">=</span><span class="token string">&quot;example.har&quot;</span><span class="token punctuation">,</span> record_har_url_filter<span class="token operator">=</span><span class="token string">&quot;**/api/**&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># ... Perform actions ...</span>

<span class="token comment"># Close context to ensure HAR is saved to disk.</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>record_har_path<span class="token operator">=</span><span class="token string">&quot;example.har&quot;</span><span class="token punctuation">,</span> record_har_url_filter<span class="token operator">=</span><span class="token string">&quot;**/api/**&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># ... Perform actions ...</span>

<span class="token comment"># Close context to ensure HAR is saved to disk.</span>
context<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">NewContextAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    RecordHarPath <span class="token operator">=</span> <span class="token string">&quot;example.har&quot;</span><span class="token punctuation">,</span>
    RecordHarUrlFilter <span class="token operator">=</span> <span class="token string">&quot;**/api/**&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ... Perform actions ...</span>

<span class="token comment">// Close context to ensure HAR is saved to disk.</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">CloseAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="replaying-from-har" tabindex="-1"><a class="header-anchor" href="#replaying-from-har" aria-hidden="true">#</a> Replaying from HAR</h3>`,12),x=s("code",null,"method: Page.routeFromHAR",-1),_=s("code",null,"method: BrowserContext.routeFromHAR",-1),j={href:"http://www.softwareishard.com/blog/har-12-spec/",target:"_blank",rel:"noopener noreferrer"},R=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Replay API requests from HAR.</span>
<span class="token comment">// Either use a matching response from the HAR,</span>
<span class="token comment">// or abort the request if nothing matches.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">routeFromHAR</span><span class="token punctuation">(</span><span class="token string">&#39;example.har&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Either use a matching response from the HAR,</span>
<span class="token comment">// or abort the request if nothing matches.</span>
page<span class="token punctuation">.</span><span class="token function">routeFromHAR</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;example.har&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Either use a matching response from the HAR,</span>
<span class="token comment"># or abort the request if nothing matches.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>route_from_har<span class="token punctuation">(</span><span class="token string">&quot;example.har&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Either use a matching response from the HAR,</span>
<span class="token comment"># or abort the request if nothing matches.</span>
page<span class="token punctuation">.</span>route_from_har<span class="token punctuation">(</span><span class="token string">&quot;example.har&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Either use a matching response from the HAR,</span>
<span class="token comment">// or abort the request if nothing matches.</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">RouteFromHARAsync</span><span class="token punctuation">(</span><span class="token string">&quot;example.har&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HAR replay matches URL and HTTP method strictly. For POST requests, it also matches POST payloads strictly. If multiple recordings match a request, the one with the most matching headers is picked. An entry resulting in a redirect will be followed automatically.</p><p>Similar to when recording, if given HAR file name ends with <code>.zip</code>, it is considered an archive containing the HAR file along with network payloads stored as separate entries. You can also extract this archive, edit payloads or HAR log manually and point to the extracted har file. All the payloads will be resolved relative to the extracted har file on the file system.</p><h2 id="websockets" tabindex="-1"><a class="header-anchor" href="#websockets" aria-hidden="true">#</a> WebSockets</h2>`,8),P={href:"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API",target:"_blank",rel:"noopener noreferrer"},A=s("code",null,"event: Page.webSocket",-1),C=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;websocket&#39;</span><span class="token punctuation">,</span> <span class="token parameter">ws</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">WebSocket opened: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ws<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;framesent&#39;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;framereceived&#39;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;WebSocket closed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">onWebSocket</span><span class="token punctuation">(</span>ws <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;WebSocket opened: &quot;</span> <span class="token operator">+</span> ws<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ws<span class="token punctuation">.</span><span class="token function">onFrameSent</span><span class="token punctuation">(</span>frameData <span class="token operator">-&gt;</span> <span class="token function">log</span><span class="token punctuation">(</span>frameData<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ws<span class="token punctuation">.</span><span class="token function">onFrameReceived</span><span class="token punctuation">(</span>frameData <span class="token operator">-&gt;</span> <span class="token function">log</span><span class="token punctuation">(</span>frameData<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ws<span class="token punctuation">.</span><span class="token function">onClose</span><span class="token punctuation">(</span>ws1 <span class="token operator">-&gt;</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;WebSocket closed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">on_web_socket</span><span class="token punctuation">(</span>ws<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;WebSocket opened: </span><span class="token interpolation"><span class="token punctuation">{</span>ws<span class="token punctuation">.</span>url<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    ws<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;framesent&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>
    ws<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;framereceived&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>
    ws<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;close&quot;</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> payload<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;WebSocket closed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

page<span class="token punctuation">.</span>on<span class="token punctuation">(</span><span class="token string">&quot;websocket&quot;</span><span class="token punctuation">,</span> on_web_socket<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>page<span class="token punctuation">.</span>WebSocket <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> ws<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;WebSocket opened: &quot;</span> <span class="token operator">+</span> ws<span class="token punctuation">.</span>Url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ws<span class="token punctuation">.</span>FrameSent <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> f<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>Text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ws<span class="token punctuation">.</span>FrameReceived <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> f<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>Text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ws<span class="token punctuation">.</span>Close <span class="token operator">+=</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> ws1<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;WebSocket closed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="missing-network-events-and-service-workers" tabindex="-1"><a class="header-anchor" href="#missing-network-events-and-service-workers" aria-hidden="true">#</a> Missing Network Events and Service Workers</h2><p>Playwright&#39;s built-in [<code>method: BrowserContext.route</code>] and [<code>method: Page.route</code>] allow your tests to natively route requests and perform mocking and interception.</p>`,6),S=p('<li>If you&#39;re using Playwright&#39;s native [<code>method: BrowserContext.route</code>] and [<code>method: Page.route</code>], and it appears network events are missing, disable Service Workers by setting [<code>option: Browser.newContext.serviceWorkers</code>] to <code>&#39;block&#39;</code>.</li><li>It might be that you are using a mock tool such as Mock Service Worker (MSW). While this tool works out of the box for mocking responses, it adds its own Service Worker that takes over the network requests, hence making them invisible to [<code>method: BrowserContext.route</code>] and [<code>method: Page.route</code>]. If you are interested in both network testing and mocking, consider using built-in [<code>method: BrowserContext.route</code>] and [<code>method: Page.route</code>] for <a href="#handle-requests">response mocking</a>.</li>',2),T={href:"https://github.com/microsoft/playwright/issues/15684",target:"_blank",rel:"noopener noreferrer"};function H(B,F){const t=e("ExternalLinkIcon"),o=e("RouterLink");return i(),u("div",null,[s("p",null,[n("Playwright provides APIs to "),k,n(" and "),d,n(" network traffic, both HTTP and HTTPS. Any requests that a page does, including "),s("a",v,[n("XHRs"),a(t)]),n(" and"),m,s("a",g,[n("fetch"),a(t)]),n(" requests, can be tracked, modified and handled.")]),b,s("p",null,[n("Open the browser with "),a(o,{to:"/book/playwright/cli.html"},{default:l(()=>[n("Playwright CLI")]),_:1}),n(" and pass "),h,n(" option to produce a HAR file. Optionally, use "),y,n(" to only save requests you are interested in, for example API endpoints. If the har file name ends with "),w,n(", artifacts are written as separate files and are all compressed into a single "),f,n(".")]),q,s("p",null,[n("Use ["),x,n("] or ["),_,n("] to serve matching responses from the "),s("a",j,[n("HAR"),a(t)]),n(" file.")]),R,s("p",null,[n("Playwright supports "),s("a",P,[n("WebSockets"),a(t)]),n(" inspection out of the box. Every time a WebSocket is created, the ["),A,n("] event is fired. This event contains the [WebSocket] instance for further web socket frames inspection:")]),C,s("ol",null,[S,s("li",null,[n("If you're interested in not solely using Service Workers for testing and network mocking, but in routing and listening for requests made by Service Workers themselves, please see "),s("a",T,[n("this experimental feature"),a(t)]),n(".")])])])}const O=c(r,[["render",H],["__file","network.html.vue"]]);export{O as default};
