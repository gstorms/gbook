import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as u,a as n,b as a,d as s,w as p,f as t}from"./app-3f278ba4.js";const d={},r=t('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>Check out the main <a href="./locators">locators guide</a> for most common and recommended locators.</p></div><p>In addition to recommended locators like [<code>method: Page.getByRole</code>] and [<code>method: Page.getByText</code>], Playwright supports a variety of other locators described in this guide.</p><h2 id="css-locator" tabindex="-1"><a class="header-anchor" href="#css-locator" aria-hidden="true">#</a> CSS locator</h2>',3),k={class:"hint-container note"},g=n("p",{class:"hint-container-title"},"注",-1),v=t(`<p>Playwright can locate an element by CSS selector.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;css=button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;css=button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;css=button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;css=button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;css=button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Playwright augments standard CSS selectors in two ways:</p><ul><li>CSS selectors pierce open shadow DOM.</li><li>Playwright adds custom pseudo-classes like <code>:visible</code>, <code>:has-text()</code>, <code>:has()</code>, <code>:is()</code>, <code>:nth-match()</code> and more.</li></ul><h3 id="css-matching-by-text" tabindex="-1"><a class="header-anchor" href="#css-matching-by-text" aria-hidden="true">#</a> CSS: matching by text</h3><p>Playwright include a number of CSS pseudo-classes to match elements by their text content.</p><ul><li><p><code>article:has-text(&quot;Playwright&quot;)</code> - the <code>:has-text()</code> matches any element containing specified text somewhere inside, possibly in a child or a descendant element. Matching is case-insensitive, trims whitespace and searches for a substring.</p><p>For example, <code>article:has-text(&quot;Playwright&quot;)</code> matches <code>&lt;article&gt;&lt;div&gt;Playwright&lt;/div&gt;&lt;/article&gt;</code>.</p><p>Note that <code>:has-text()</code> should be used together with other CSS specifiers, otherwise it will match all the elements containing specified text, including the <code>&lt;body&gt;</code>.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Wrong, will match many elements including &lt;body&gt;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;:has-text(&quot;Playwright&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Correct, only matches the &lt;article&gt; element</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;article:has-text(&quot;Playwright&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Wrong, will match many elements including &lt;body&gt;</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;:has-text(\\&quot;Playwright\\&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Correct, only matches the &lt;article&gt; element</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;article:has-text(\\&quot;Playwright\\&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Wrong, will match many elements including &lt;body&gt;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;:has-text(&quot;Playwright&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Correct, only matches the &lt;article&gt; element</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;article:has-text(&quot;Playwright&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Wrong, will match many elements including &lt;body&gt;</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;:has-text(&quot;Playwright&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Correct, only matches the &lt;article&gt; element</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;article:has-text(&quot;All products&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Wrong, will match many elements including &lt;body&gt;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;:has-text(\\&quot;Playwright\\&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Correct, only matches the &lt;article&gt; element</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;article:has-text(\\&quot;Playwright\\&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>#nav-bar :text(&quot;Home&quot;)</code> - the <code>:text()</code> pseudo-class matches the smallest element containing specified text. Matching is case-insensitive, trims whitespace and searches for a substring.</p><p>For example, this will find an element with text &quot;Home&quot; somewhere inside the <code>#nav-bar</code> element:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;#nav-bar :text(&quot;Home&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;#nav-bar :text(&#39;Home&#39;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;#nav-bar :text(&#39;Home&#39;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;#nav-bar :text(&#39;Home&#39;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;#nav-bar :text(&#39;Home&#39;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>#nav-bar :text-is(&quot;Home&quot;)</code> - the <code>:text-is()</code> pseudo-class matches the smallest element with exact text. Exact matching is case-sensitive, trims whitespace and searches for the full string.</p><p>For example, <code>:text-is(&quot;Log&quot;)</code> does not match <code>&lt;button&gt;Log in&lt;/button&gt;</code> because <code>&lt;button&gt;</code> contains a single text node <code>&quot;Log in&quot;</code> that is not equal to <code>&quot;Log&quot;</code>. However, <code>:text-is(&quot;Log&quot;)</code> matches <code>&lt;button&gt; Log &lt;span&gt;in&lt;/span&gt;&lt;/button&gt;</code>, because <code>&lt;button&gt;</code> contains a text node <code>&quot; Log &quot;</code>.</p><p>Similarly, <code>:text-is(&quot;Download&quot;)</code> will not match <code>&lt;button&gt;download&lt;/button&gt;</code> because it is case-sensitive.</p></li></ul>`,11),m=n("code",null,'#nav-bar :text-matches("reg?ex", "i")',-1),h=n("code",null,":text-matches()",-1),b={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,[a("For example, "),n("code",null,':text-matches("Log\\s*in", "i")'),a(" matches "),n("code",null,"<button>Login</button>"),a(" and "),n("code",null,"<button>log IN</button>"),a(".")],-1),q=t(`<div class="hint-container note"><p class="hint-container-title">注</p><p>Text matching always normalizes whitespace. For example, it turns multiple spaces into one, turns line breaks into spaces and ignores leading and trailing whitespace.</p></div><div class="hint-container note"><p class="hint-container-title">注</p><p>Input elements of the type <code>button</code> and <code>submit</code> are matched by their <code>value</code> instead of text content. For example, <code>:text(&quot;Log in&quot;)</code> matches <code>&lt;input type=button value=&quot;Log in&quot;&gt;</code>.</p></div><h3 id="css-matching-only-visible-elements" tabindex="-1"><a class="header-anchor" href="#css-matching-only-visible-elements" aria-hidden="true">#</a> CSS: matching only visible elements</h3><p>Playwright supports the <code>:visible</code> pseudo class in CSS selectors. For example, <code>css=button</code> matches all the buttons on the page, while <code>css=button:visible</code> only matches visible buttons. This is useful to distinguish elements that are very similar but differ in visibility.</p><p>Consider a page with two buttons, first invisible and second visible.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none</span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>Invisible<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Visible<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,6),f=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),x=t(`<li><p>This will only find a second button, because it is visible, and then click it.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;button:visible&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;button:visible&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button:visible&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button:visible&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;button:visible&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,1),w=n("h3",{id:"css-elements-that-contain-other-elements",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#css-elements-that-contain-other-elements","aria-hidden":"true"},"#"),a(" CSS: elements that contain other elements")],-1),_=n("code",null,":has()",-1),j={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:has",target:"_blank",rel:"noopener noreferrer"},L=n("br",null,null,-1),C=n("code",null,":scope",-1),S=t(`<p>Following snippet returns text content of an <code>&lt;article&gt;</code> element that has a <code>&lt;div class=promo&gt;</code> inside.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;article:has(div.promo)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">textContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;article:has(div.promo)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">textContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;article:has(div.promo)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text_content<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;article:has(div.promo)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text_content<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;article:has(div.promo)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">TextContentAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="css-elements-matching-one-of-the-conditions" tabindex="-1"><a class="header-anchor" href="#css-elements-matching-one-of-the-conditions" aria-hidden="true">#</a> CSS: elements matching one of the conditions</h3><p>Comma-separated list of CSS selectors will match all elements that can be selected by<br> one of the selectors in that list.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Clicks a &lt;button&gt; that has either a &quot;Log in&quot; or &quot;Sign in&quot; text.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;button:has-text(&quot;Log in&quot;), button:has-text(&quot;Sign in&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Clicks a &lt;button&gt; that has either a &quot;Log in&quot; or &quot;Sign in&quot; text.</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;button:has-text(\\&quot;Log in\\&quot;), button:has-text(\\&quot;Sign in\\&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Clicks a &lt;button&gt; that has either a &quot;Log in&quot; or &quot;Sign in&quot; text.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;button:has-text(&quot;Log in&quot;), button:has-text(&quot;Sign in&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Clicks a &lt;button&gt; that has either a &quot;Log in&quot; or &quot;Sign in&quot; text.</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;button:has-text(&quot;Log in&quot;), button:has-text(&quot;Sign in&quot;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Clicks a &lt;button&gt; that has either a &quot;Log in&quot; or &quot;Sign in&quot; text.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;button:has-text(\\&quot;Log in\\&quot;), button:has-text(\\&quot;Sign in\\&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,13),F=n("code",null,":is()",-1),P={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:is",target:"_blank",rel:"noopener noreferrer"},B=n("br",null,null,-1),A=t('<h3 id="css-matching-elements-based-on-layout" tabindex="-1"><a class="header-anchor" href="#css-matching-elements-based-on-layout" aria-hidden="true">#</a> CSS: matching elements based on layout</h3><div class="hint-container note"><p class="hint-container-title">注</p><p>Matching based on layout may produce unexpected results. For example, a different element could be matched when layout changes by one pixel.</p></div><p>Sometimes, it is hard to come up with a good selector to the target element when it lacks distinctive features. In this case, using Playwright layout CSS pseudo-classes could help. These can be combined with regular CSS to pinpoint one of the multiple choices.</p><p>For example, <code>input:right-of(:text(&quot;Password&quot;))</code> matches an input field that is to the right of text &quot;Password&quot; - useful when the page has multiple inputs that are hard to distinguish between each other.</p><p>Note that layout pseudo-classes are useful in addition to something else, like <code>input</code>. If you use a layout pseudo-class alone, like <code>:right-of(:text(&quot;Password&quot;))</code>, most likely you&#39;ll get not the input you are looking for, but some empty element in between the text and the target input.</p>',5),T={href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect",target:"_blank",rel:"noopener noreferrer"},I=n("br",null,null,-1),W=t(`<ul><li><code>:right-of(div &gt; button)</code> - Matches elements that are to the right of any element matching the inner selector, at any vertical position.</li><li><code>:left-of(div &gt; button)</code> - Matches elements that are to the left of any element matching the inner selector, at any vertical position.</li><li><code>:above(div &gt; button)</code> - Matches elements that are above any of the elements matching the inner selector, at any horizontal position.</li><li><code>:below(div &gt; button)</code> - Matches elements that are below any of the elements matching the inner selector, at any horizontal position.</li><li><code>:near(div &gt; button)</code> - Matches elements that are near (within 50 CSS pixels) any of the elements matching the inner selector.</li></ul><p>Note that resulting matches are sorted by their distance to the anchor element, so you can use [<code>method: Locator.first</code>] to pick the closest one. This is only useful if you have something like a list of similar elements, where the closest is obviously the right one. However, using [<code>method: Locator.first</code>] in other cases most likely won&#39;t work as expected - it will not target the element you are searching for, but some other element that happens to be the closest like a random empty <code>&lt;div&gt;</code>, or an element that is scrolled out and is not currently visible.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Fill an input to the right of &quot;Username&quot;.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;input:right-of(:text(&quot;Username&quot;))&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Click a button near the promo card.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;button:near(.promo-card)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Click the radio input in the list closest to the &quot;Label 3&quot;.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;[type=radio]:left-of(:text(&quot;Label 3&quot;))&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Fill an input to the right of &quot;Username&quot;.</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;input:right-of(:text(\\&quot;Username\\&quot;))&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Click a button near the promo card.</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;button:near(.promo-card)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Click the radio input in the list closest to the &quot;Label 3&quot;.</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;[type=radio]:left-of(:text(\\&quot;Label 3\\&quot;))&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Fill an input to the right of &quot;Username&quot;.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;input:right-of(:text(\\&quot;Username\\&quot;))&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Click a button near the promo card.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button:near(.promo-card)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Click the radio input in the list closest to the &quot;Label 3&quot;.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;[type=radio]:left-of(:text(\\&quot;Label 3\\&quot;))&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Fill an input to the right of &quot;Username&quot;.</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;input:right-of(:text(\\&quot;Username\\&quot;))&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Click a button near the promo card.</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button:near(.promo-card)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Click the radio input in the list closest to the &quot;Label 3&quot;.</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;[type=radio]:left-of(:text(\\&quot;Label 3\\&quot;))&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Fill an input to the right of &quot;Username&quot;.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;input:right-of(:text(\\&quot;Username\\&quot;))&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FillAsync</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Click a button near the promo card.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;button:near(.promo-card)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Click the radio input in the list closest to the &quot;Label 3&quot;.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;[type=radio]:left-of(:text(\\&quot;Label 3\\&quot;))&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>First<span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>All layout pseudo-classes support optional maximum pixel distance as the last argument. For example<br><code>button:near(:text(&quot;Username&quot;), 120)</code> matches a button that is at most 120 CSS pixels away from the element with the text &quot;Username&quot;.</p><h3 id="css-pick-n-th-match-from-the-query-result" tabindex="-1"><a class="header-anchor" href="#css-pick-n-th-match-from-the-query-result" aria-hidden="true">#</a> CSS: pick n-th match from the query result</h3><div class="hint-container note"><p class="hint-container-title">注</p><p>It is usually possible to distinguish elements by some attribute or text content, which is more resilient to page changes.</p></div><p>Sometimes page contains a number of similar elements, and it is hard to select a particular one. For example:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Buy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Buy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Buy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this case, <code>:nth-match(:text(&quot;Buy&quot;), 3)</code> will select the third button from the snippet above. Note that index is one-based.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Click the third &quot;Buy&quot; button</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;:nth-match(:text(&quot;Buy&quot;), 3)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Click the third &quot;Buy&quot; button</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;:nth-match(:text(&#39;Buy&#39;), 3)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Click the third &quot;Buy&quot; button</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;:nth-match(:text(&#39;Buy&#39;), 3)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Click the third &quot;Buy&quot; button</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;:nth-match(:text(&#39;Buy&#39;), 3)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Click the third &quot;Buy&quot; button</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;:nth-match(:text(&#39;Buy&#39;), 3)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>:nth-match()</code> is also useful to wait until a specified number of elements appear, using [<code>method: Locator.waitFor</code>].</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Wait until all three buttons are visible</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;:nth-match(:text(&quot;Buy&quot;), 3)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Wait until all three buttons are visible</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;:nth-match(:text(&#39;Buy&#39;), 3)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Wait until all three buttons are visible</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;:nth-match(:text(&#39;Buy&#39;), 3)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>wait_for<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Wait until all three buttons are visible</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;:nth-match(:text(&#39;Buy&#39;), 3)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>wait_for<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Wait until all three buttons are visible</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;:nth-match(:text(&#39;Buy&#39;), 3)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WaitForAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,24),R={class:"hint-container note"},U=n("p",{class:"hint-container-title"},"注",-1),H={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,":nth-child()",-1),V=n("code",null,':text("Buy")',-1),M=n("code",null,":nth-match()",-1),N=t(`<h2 id="n-th-element-locator" tabindex="-1"><a class="header-anchor" href="#n-th-element-locator" aria-hidden="true">#</a> N-th element locator</h2><p>You can narrow down query to the n-th match using the <code>nth=</code> locator passing a zero-based index.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Click first button</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;nth=0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Click last button</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;nth=-1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Click first button</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;nth=0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Click last button</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;nth=-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Click first button</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;nth=0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Click last button</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;nth=-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Click first button</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;nth=0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Click last button</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;nth=-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Click first button</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;nth=0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Click last button</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;nth=-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="parent-element-locator" tabindex="-1"><a class="header-anchor" href="#parent-element-locator" aria-hidden="true">#</a> Parent element locator</h2><p>The parent element could be selected with <code>..</code>, which is a short form for <code>xpath=..</code>.</p><p>For example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> parentLocator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;..&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Locator</span> parentLocator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getByRole</span><span class="token punctuation">(</span><span class="token class-name">AriaRole</span><span class="token punctuation">.</span><span class="token constant">BUTTON</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>parent_locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;..&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>parent_locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;..&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> parentLocator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">GetByRole</span><span class="token punctuation">(</span>AriaRole<span class="token punctuation">.</span>Button<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="locating-only-visible-elements" tabindex="-1"><a class="header-anchor" href="#locating-only-visible-elements" aria-hidden="true">#</a> Locating only visible elements</h3>`,16),D={class:"hint-container note"},E=n("p",{class:"hint-container-title"},"注",-1),O=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none</span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>Invisible<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Visible<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),K=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),X=t(`<li><p>This will only find a second button, because it is visible, and then click it.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;visible=true&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;visible=true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;visible=true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;visible=true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;visible=true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,1),G=n("h2",{id:"react-locator",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react-locator","aria-hidden":"true"},"#"),a(" React locator")],-1),J=n("div",{class:"hint-container note"},[n("p",{class:"hint-container-title"},"注"),n("p",null,[a("React locator is experimental and prefixed with "),n("code",null,"_"),a(". The functionality might change in future.")])],-1),Y={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors",target:"_blank",rel:"noopener noreferrer"},$=t(`<p>In React locator, component names are transcribed with <strong>CamelCase</strong>.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;_react=BookItem&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;_react=BookItem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;_react=BookItem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;_react=BookItem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;_react=BookItem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>More examples:</p><ul><li>match by <strong>component</strong>: <code>_react=BookItem</code></li><li>match by component and <strong>exact property value</strong>, case-sensitive: <code>_react=BookItem[author = &quot;Steven King&quot;]</code></li><li>match by property value only, <strong>case-insensitive</strong>: <code>_react=[author = &quot;steven king&quot; i]</code></li><li>match by component and <strong>truthy property value</strong>: <code>_react=MyButton[enabled]</code></li><li>match by component and <strong>boolean value</strong>: <code>_react=MyButton[enabled = false]</code></li><li>match by property <strong>value substring</strong>: <code>_react=[author *= &quot;King&quot;]</code></li><li>match by component and <strong>multiple properties</strong>: <code>_react=BookItem[author *= &quot;king&quot; i][year = 1990]</code></li><li>match by <strong>nested</strong> property value: <code>_react=[some.nested.value = 12]</code></li><li>match by component and property value <strong>prefix</strong>: <code>_react=BookItem[author ^= &quot;Steven&quot;]</code></li><li>match by component and property value <strong>suffix</strong>: <code>_react=BookItem[author $= &quot;Steven&quot;]</code></li><li>match by component and <strong>key</strong>: <code>_react=BookItem[key = &#39;2&#39;]</code></li><li>match by property value <strong>regex</strong>: <code>_react=[author = /Steven(\\\\s+King)?/i]</code></li></ul>`,8),Q={href:"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi",target:"_blank",rel:"noopener noreferrer"},Z=n("div",{class:"hint-container note"},[n("p",{class:"hint-container-title"},"注"),n("p",null,"React locator supports React 15 and above.")],-1),nn={class:"hint-container note"},an=n("p",{class:"hint-container-title"},"注",-1),sn={href:"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi",target:"_blank",rel:"noopener noreferrer"},tn=n("strong",null,"unminified",-1),en=n("h2",{id:"vue-locator",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vue-locator","aria-hidden":"true"},"#"),a(" Vue locator")],-1),on=n("div",{class:"hint-container note"},[n("p",{class:"hint-container-title"},"注"),n("p",null,[a("Vue locator is experimental and prefixed with "),n("code",null,"_"),a(". The functionality might change in future.")])],-1),pn={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors",target:"_blank",rel:"noopener noreferrer"},cn=t(`<p>In Vue locator, component names are transcribed with <strong>kebab-case</strong>.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;_vue=book-item&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;_vue=book-item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;_vue=book-item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;_vue=book-item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;_vue=book-item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>More examples:</p><ul><li>match by <strong>component</strong>: <code>_vue=book-item</code></li><li>match by component and <strong>exact property value</strong>, case-sensitive: <code>_vue=book-item[author = &quot;Steven King&quot;]</code></li><li>match by property value only, <strong>case-insensitive</strong>: <code>_vue=[author = &quot;steven king&quot; i]</code></li><li>match by component and <strong>truthy property value</strong>: <code>_vue=my-button[enabled]</code></li><li>match by component and <strong>boolean value</strong>: <code>_vue=my-button[enabled = false]</code></li><li>match by property <strong>value substring</strong>: <code>_vue=[author *= &quot;King&quot;]</code></li><li>match by component and <strong>multiple properties</strong>: <code>_vue=book-item[author *= &quot;king&quot; i][year = 1990]</code></li><li>match by <strong>nested</strong> property value: <code>_vue=[some.nested.value = 12]</code></li><li>match by component and property value <strong>prefix</strong>: <code>_vue=book-item[author ^= &quot;Steven&quot;]</code></li><li>match by component and property value <strong>suffix</strong>: <code>_vue=book-item[author $= &quot;Steven&quot;]</code></li><li>match by property value <strong>regex</strong>: <code>_vue=[author = /Steven(\\\\s+King)?/i]</code></li></ul>`,8),ln={href:"https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=en",target:"_blank",rel:"noopener noreferrer"},un=n("div",{class:"hint-container note"},[n("p",{class:"hint-container-title"},"注"),n("p",null,"Vue locator supports Vue2 and above.")],-1),dn={class:"hint-container note"},rn=n("p",{class:"hint-container-title"},"注",-1),kn={href:"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi",target:"_blank",rel:"noopener noreferrer"},gn=n("strong",null,"unminified",-1),vn=n("h2",{id:"xpath-locator",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#xpath-locator","aria-hidden":"true"},"#"),a(" XPath locator")],-1),mn={class:"hint-container warning"},hn=n("p",{class:"hint-container-title"},"注意",-1),bn={href:"https://developer.mozilla.org/en/docs/Web/API/Document/evaluate",target:"_blank",rel:"noopener noreferrer"},yn=n("code",null,"Document.evaluate",-1),qn=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;xpath=//button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;xpath=//button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;xpath=//button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;xpath=//button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;xpath=//button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">注</p><p>Any selector string starting with <code>//</code> or <code>..</code> are assumed to be an xpath selector. For example, Playwright converts <code>&#39;//html/body&#39;</code> to <code>&#39;xpath=//html/body&#39;</code>.</p></div><div class="hint-container note"><p class="hint-container-title">注</p><p>XPath does not pierce shadow roots.</p></div><h3 id="xpath-union" tabindex="-1"><a class="header-anchor" href="#xpath-union" aria-hidden="true">#</a> XPath union</h3><p>Pipe operator (<code>|</code>) can be used to specify multiple selectors in XPath. It will match all<br> elements that can be selected by one of the selectors in that list.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Waits for either confirmation dialog or load spinner.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">//span[contains(@class, &#39;spinner__loading&#39;)]|//div[@id=&#39;confirmation&#39;]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Waits for either confirmation dialog or load spinner.</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;//span[contains(@class, &#39;spinner__loading&#39;)]|//div[@id=&#39;confirmation&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Waits for either confirmation dialog or load spinner.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;//span[contains(@class, &#39;spinner__loading&#39;)]|//div[@id=&#39;confirmation&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>wait_for<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Waits for either confirmation dialog or load spinner.</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;//span[contains(@class, &#39;spinner__loading&#39;)]|//div[@id=&#39;confirmation&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>wait_for<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Waits for either confirmation dialog or load spinner.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;//span[contains(@class, &#39;spinner__loading&#39;)]|//div[@id=&#39;confirmation&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WaitForAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="label-to-form-control-retargeting" tabindex="-1"><a class="header-anchor" href="#label-to-form-control-retargeting" aria-hidden="true">#</a> Label to form control retargeting</h2>`,15),fn={class:"hint-container warning"},xn=n("p",{class:"hint-container-title"},"注意",-1),wn=t(`<p>Targeted input actions in Playwright automatically distinguish between labels and controls, so you can target the label to perform an action on the associated control.</p><p>For example, consider the following DOM structure: <code>&lt;label for=&quot;password&quot;&gt;Password:&lt;/label&gt;&lt;input id=&quot;password&quot; type=&quot;password&quot;&gt;</code>. You can target the label by it&#39;s &quot;Password&quot; text using [<code>method: Page.getByText</code>]. However, the following actions will be performed on the input instead of the label:</p><ul><li>[<code>method: Locator.click</code>] will click the label and automatically focus the input field;</li><li>[<code>method: Locator.fill</code>] will fill the input field;</li><li>[<code>method: Locator.inputValue</code>] will return the value of the input field;</li><li>[<code>method: Locator.selectText</code>] will select text in the input field;</li><li>[<code>method: Locator.setInputFiles</code>] will set files for the input field with <code>type=file</code>;</li><li>[<code>method: Locator.selectOption</code>] will select an option from the select box.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Fill the input by targeting the label.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&#39;Password&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;secret&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Fill the input by targeting the label.</span>
page<span class="token punctuation">.</span><span class="token function">getByText</span><span class="token punctuation">(</span><span class="token string">&quot;Password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&quot;secret&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Fill the input by targeting the label.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token string">&quot;secret&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Fill the input by targeting the label.</span>
page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token string">&quot;secret&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Fill the input by targeting the label.</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">GetByText</span><span class="token punctuation">(</span><span class="token string">&quot;Password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FillAsync</span><span class="token punctuation">(</span><span class="token string">&quot;secret&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>However, other methods will target the label itself, for example [<code>method: LocatorAssertions.toHaveText</code>] will assert the text content of the label, not the input field.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Fill the input by targeting the label.</span>
<span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;label&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveText</span><span class="token punctuation">(</span><span class="token string">&#39;Password&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Fill the input by targeting the label.</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span><span class="token string">&quot;Password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Fill the input by targeting the label.</span>
<span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token string">&quot;Password&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Fill the input by targeting the label.</span>
expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token string">&quot;Password&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Fill the input by targeting the label.</span>
<span class="token keyword">await</span> <span class="token function">Expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToHaveTextAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="legacy-text-locator" tabindex="-1"><a class="header-anchor" href="#legacy-text-locator" aria-hidden="true">#</a> Legacy text locator</h2>`,15),_n={class:"hint-container warning"},jn=n("p",{class:"hint-container-title"},"注意",-1),Ln=t(`<p>Legacy text locator matches elements that contain passed text.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;text=Log in&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;text=Log in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;text=Log in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;text=Log in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;text=Log in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Legacy text locator has a few variations:</p>`,7),Cn=t(`<li><p><code>text=Log in</code> - default matching is case-insensitive, trims whitespace and searches for a substring. For example, <code>text=Log</code> matches <code>&lt;button&gt;Log in&lt;/button&gt;</code>.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;text=Log in&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;text=Log in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;text=Log in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;text=Log in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;text=Log in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>text=&quot;Log in&quot;</code> - text body can be escaped with single or double quotes to search for a text node with exact content after trimming whitespace.</p><p>For example, <code>text=&quot;Log&quot;</code> does not match <code>&lt;button&gt;Log in&lt;/button&gt;</code> because <code>&lt;button&gt;</code> contains a single text node <code>&quot;Log in&quot;</code> that is not equal to <code>&quot;Log&quot;</code>. However, <code>text=&quot;Log&quot;</code> matches <code>&lt;button&gt; Log &lt;span&gt;in&lt;/span&gt;&lt;/button&gt;</code>, because <code>&lt;button&gt;</code> contains a text node <code>&quot; Log &quot;</code>. This exact mode implies case-sensitive matching, so <code>text=&quot;Download&quot;</code> will not match <code>&lt;button&gt;download&lt;/button&gt;</code>.</p><p>Quoted body follows the usual escaping rules, e.g. use <code>\\&quot;</code> to escape double quote in a double-quoted string: <code>text=&quot;foo\\&quot;bar&quot;</code>.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;text=&quot;Log in&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;text=&#39;Log in&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;text=&#39;Log in&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;text=&#39;Log in&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;text=&#39;Log in&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,2),Sn=n("code",null,"/Log\\s*in/i",-1),Fn={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",target:"_blank",rel:"noopener noreferrer"},Pn=n("code",null,"/",-1),Bn=n("code",null,"text=/Log\\s*in/i",-1),An=n("code",null,"<button>Login</button>",-1),Tn=n("code",null,"<button>log IN</button>",-1),In=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;text=/Log\\\\s*in/i&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;text=/Log\\\\s*in/i&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;text=/Log\\s*in/i&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;text=/Log\\s*in/i&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;text=/Log\\\\s*in/i&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),Wn=t('<div class="hint-container note"><p class="hint-container-title">注</p><p>String selectors starting and ending with a quote (either <code>&quot;</code> or <code>&#39;</code>) are assumed to be a legacy text locators. For example, <code>&quot;Log in&quot;</code> is converted to <code>text=&quot;Log in&quot;</code> internally.</p></div><div class="hint-container note"><p class="hint-container-title">注</p><p>Matching always normalizes whitespace. For example, it turns multiple spaces into one, turns line breaks into spaces and ignores leading and trailing whitespace.</p></div><div class="hint-container note"><p class="hint-container-title">注</p><p>Input elements of the type <code>button</code> and <code>submit</code> are matched by their <code>value</code> instead of text content. For example, <code>text=Log in</code> matches <code>&lt;input type=button value=&quot;Log in&quot;&gt;</code>.</p></div><h2 id="id-data-testid-data-test-id-data-test-selectors" tabindex="-1"><a class="header-anchor" href="#id-data-testid-data-test-id-data-test-selectors" aria-hidden="true">#</a> id, data-testid, data-test-id, data-test selectors</h2>',4),Rn={class:"hint-container warning"},Un=n("p",{class:"hint-container-title"},"注意",-1),Hn=t(`<p>Playwright supports shorthand for selecting elements using certain attributes. Currently, only<br> the following attributes are supported:</p><ul><li><code>id</code></li><li><code>data-testid</code></li><li><code>data-test-id</code></li><li><code>data-test</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Fill an input with the id &quot;username&quot;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;id=username&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Click an element with data-test-id &quot;submit&quot;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;data-test-id=submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Fill an input with the id &quot;username&quot;</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;id=username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Click an element with data-test-id &quot;submit&quot;</span>
page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&quot;data-test-id=submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Fill an input with the id &quot;username&quot;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;id=username&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># Click an element with data-test-id &quot;submit&quot;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;data-test-id=submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Fill an input with the id &quot;username&quot;</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;id=username&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># Click an element with data-test-id &quot;submit&quot;</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&#39;data-test-id=submit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// Fill an input with the id &quot;username&quot;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;id=username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FillAsync</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Click an element with data-test-id &quot;submit&quot;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">Locator</span><span class="token punctuation">(</span><span class="token string">&quot;data-test-id=submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClickAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">注</p><p>Attribute selectors are not CSS selectors, so anything CSS-specific like <code>:enabled</code> is not supported. For more features, use a proper <a href="#css-selector">css</a> selector, e.g. <code>css=[data-test=&quot;login&quot;]:enabled</code>.</p></div><div class="hint-container note"><p class="hint-container-title">注</p><p>Attribute selectors pierce shadow DOM. To opt-out from this behavior, use <code>:light</code> suffix after attribute, for example <code>page.locator(&#39;data-test-id:light=submit&#39;).click()</code></p></div><h2 id="chaining-selectors" tabindex="-1"><a class="header-anchor" href="#chaining-selectors" aria-hidden="true">#</a> Chaining selectors</h2>`,10),zn={class:"hint-container warning"},Vn=n("p",{class:"hint-container-title"},"注意",-1),Mn=t(`<p>Selectors defined as <code>engine=body</code> or in short-form can be combined with the <code>&gt;&gt;</code> token, e.g. <code>selector1 &gt;&gt; selector2 &gt;&gt; selectors3</code>. When selectors are chained, the next one is queried relative to the previous one&#39;s result.</p><p>For example,</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>css=article &gt;&gt; css=.bar &gt; .baz &gt;&gt; css=span[attr=value]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>is equivalent to</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document
  <span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;article&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.bar &gt; .baz&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;span[attr=value]&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If a selector needs to include <code>&gt;&gt;</code> in the body, it should be escaped inside a string to not be confused with chaining separator, e.g. <code>text=&quot;some &gt;&gt; text&quot;</code>.</p><h3 id="intermediate-matches" tabindex="-1"><a class="header-anchor" href="#intermediate-matches" aria-hidden="true">#</a> Intermediate matches</h3>`,7),Nn={class:"hint-container warning"},Dn=n("p",{class:"hint-container-title"},"注意",-1),En=t("<p>By default, chained selectors resolve to an element queried by the last selector. A selector can be prefixed with <code>*</code> to capture elements that are queried by an intermediate selector.</p><p>For example, <code>css=article &gt;&gt; text=Hello</code> captures the element with the text <code>Hello</code>, and <code>*css=article &gt;&gt; text=Hello</code> (note the <code>*</code>) captures the <code>article</code> element that contains some element with the text <code>Hello</code>.</p>",2);function On(Kn,Xn){const o=c("RouterLink"),e=c("ExternalLinkIcon");return l(),u("div",null,[r,n("div",k,[g,n("p",null,[a("We recommend prioritizing "),s(o,{to:"/book/playwright/locators.html#quick-guide"},{default:p(()=>[a("user-visible locators")]),_:1}),a(" like text or accessible role instead of using CSS that is tied to the implementation and could break when the page changes.")])]),v,n("ul",null,[n("li",null,[n("p",null,[m,a(" - the "),h,a(" pseudo-class matches the smallest element with text content matching the "),n("a",b,[a("JavaScript-like regex"),s(e)]),a(".")]),y])]),q,n("ul",null,[n("li",null,[n("p",null,[a("This will find both buttons and throw a "),s(o,{to:"/book/playwright/locators.html#strictness"},{default:p(()=>[a("strictness")]),_:1}),a(" violation error:")]),f]),x]),w,n("p",null,[a("The "),_,a(" pseudo-class is an "),n("a",j,[a("experimental CSS pseudo-class"),s(e)]),a(". It returns an element if any of the selectors passed as parameters"),L,a(" relative to the "),C,a(" of the given element match at least one element.")]),S,n("p",null,[a("The "),F,a(" pseudo-class is an "),n("a",P,[a("experimental CSS pseudo-class"),s(e)]),a(" that"),B,a(" may be useful for specifying a list of extra conditions on an element.")]),A,n("p",null,[a("Layout pseudo-classes use "),n("a",T,[a("bounding client rect"),s(e)]),I,a(" to compute distance and relative position of the elements.")]),W,n("div",R,[U,n("p",null,[a("Unlike "),n("a",H,[z,s(e)]),a(", elements do not have to be siblings, they could be anywhere on the page. In the snippet above, all three buttons match "),V,a(" selector, and "),M,a(" selects the third button.")])]),N,n("div",D,[E,n("p",null,[a("It's usually better to find a "),s(o,{to:"/book/playwright/locators.html#quick-guide"},{default:p(()=>[a("more reliable way")]),_:1}),a(" to uniquely identify the element instead of checking the visibility.")])]),n("p",null,[a("Consider a page with two buttons, first invisible and second "),s(o,{to:"/book/playwright/actionability.html#visible"},{default:p(()=>[a("visible")]),_:1}),a(".")]),O,n("ul",null,[n("li",null,[n("p",null,[a("This will find both buttons and throw a "),s(o,{to:"/book/playwright/locators.html#strictness"},{default:p(()=>[a("strictness")]),_:1}),a(" violation error:")]),K]),X]),G,J,n("p",null,[a("React locator allows finding elements by their component name and property values. The syntax is very similar to "),n("a",Y,[a("CSS attribute selectors"),s(e)]),a(" and supports all CSS attribute selector operators.")]),$,n("p",null,[a("To find React element names in a tree use "),n("a",Q,[a("React DevTools"),s(e)]),a(".")]),Z,n("div",nn,[an,n("p",null,[a("React locator, as well as "),n("a",sn,[a("React DevTools"),s(e)]),a(", only work against "),tn,a(" application builds.")])]),en,on,n("p",null,[a("Vue locator allows finding elements by their component name and property values. The syntax is very similar to "),n("a",pn,[a("CSS attribute selectors"),s(e)]),a(" and supports all CSS attribute selector operators.")]),cn,n("p",null,[a("To find Vue element names in a tree use "),n("a",ln,[a("Vue DevTools"),s(e)]),a(".")]),un,n("div",dn,[rn,n("p",null,[a("Vue locator, as well as "),n("a",kn,[a("Vue DevTools"),s(e)]),a(", only work against "),gn,a(" application builds.")])]),vn,n("div",mn,[hn,n("p",null,[a("We recommend prioritizing "),s(o,{to:"/book/playwright/locators.html#quick-guide"},{default:p(()=>[a("user-visible locators")]),_:1}),a(" like text or accessible role instead of using XPath that is tied to the implementation and easily break when the page changes.")])]),n("p",null,[a("XPath locators are equivalent to calling "),n("a",bn,[yn,s(e)]),a(".")]),qn,n("div",fn,[xn,n("p",null,[a("We recommend "),s(o,{to:"/book/playwright/locators.html#locate-by-label"},{default:p(()=>[a("locating by label text")]),_:1}),a(" instead of relying to label-to-control retargeting.")])]),wn,n("div",_n,[jn,n("p",null,[a("We recommend the modern "),s(o,{to:"/book/playwright/locators.html#get-by-text"},{default:p(()=>[a("text locator")]),_:1}),a(" instead.")])]),Ln,n("ul",null,[Cn,n("li",null,[n("p",null,[Sn,a(" - body can be a "),n("a",Fn,[a("JavaScript-like regex"),s(e)]),a(" wrapped in "),Pn,a(" symbols. For example, "),Bn,a(" matches "),An,a(" and "),Tn,a(".")]),In])]),Wn,n("div",Rn,[Un,n("p",null,[a("We recommend "),s(o,{to:"/book/playwright/locators.html#locate-by-test-id"},{default:p(()=>[a("locating by test id")]),_:1}),a(" instead.")])]),Hn,n("div",zn,[Vn,n("p",null,[a("We recommend "),s(o,{to:"/book/playwright/locators.html#chaining-locators"},{default:p(()=>[a("chaining locators")]),_:1}),a(" instead.")])]),Mn,n("div",Nn,[Dn,n("p",null,[a("We recommend "),s(o,{to:"/book/playwright/locators.html#filter-by-another-locator"},{default:p(()=>[a("filtering by another locator")]),_:1}),a(" to locate elements that contain other elements.")])]),En])}const Yn=i(d,[["render",On],["__file","other-locators.html.vue"]]);export{Yn as default};
