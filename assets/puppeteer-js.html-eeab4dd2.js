import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as i,c as l,e as r,a as n,b as a,d as t,w as e,f as o}from"./app-207e7d61.js";const u={},d=n("h2",{id:"migration-principles",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#migration-principles","aria-hidden":"true"},"#"),a(" Migration Principles")],-1),k=n("a",{href:"./library"},"Playwright Library",-1),h=o(`<ul><li>Most Puppeteer APIs can be used as is</li><li>The use of [ElementHandle] is discouraged, use [Locator] objects and web-first assertions instead.</li><li>Playwright is cross-browser</li><li>You probably don&#39;t need explicit wait</li></ul><h2 id="cheat-sheet" tabindex="-1"><a class="header-anchor" href="#cheat-sheet" aria-hidden="true">#</a> Cheat Sheet</h2><table><thead><tr><th>Puppeteer</th><th>Playwright Library</th></tr></thead><tbody><tr><td><code>await puppeteer.launch()</code></td><td><code>await playwright.chromium.launch()</code></td></tr><tr><td><code>puppeteer.launch({product: &#39;firefox&#39;})</code></td><td><code>await playwright.firefox.launch()</code></td></tr><tr><td>WebKit is not supported by Puppeteer</td><td><code>await playwright.webkit.launch()</code></td></tr><tr><td><code>await browser.createIncognitoBrowserContext(...)</code></td><td><code>await browser.newContext(...)</code></td></tr><tr><td><code>await page.setViewport(...)</code></td><td><code>await page.setViewportSize(...)</code></td></tr><tr><td><code>await page.waitForXPath(XPathSelector)</code></td><td><code>await page.waitForSelector(XPathSelector)</code></td></tr><tr><td><code>await page.waitForNetworkIdle(...)</code></td><td><code>await page.waitForLoadState(&#39;networkidle&#39;)</code></td></tr><tr><td><code>await page.$eval(...)</code></td><td><a href="./test-assertions">Assertions</a> can often be used instead to verify text, attribute, class...</td></tr><tr><td><code>await page.$(...)</code></td><td>Discouraged, use <a href="./api/class-locator">Locators</a> instead</td></tr><tr><td><code>await page.$x(xpath_selector)</code></td><td>Discouraged, use <a href="./api/class-locator">Locators</a> instead</td></tr><tr><td>No methods dedicated to checkbox or radio input</td><td><code>await page.locator(selector).check()</code><br><code>await page.locator(selector).uncheck()</code></td></tr><tr><td><code>await page.click(selector)</code></td><td><code>await page.locator(selector).click()</code></td></tr><tr><td><code>await page.focus(selector)</code></td><td><code>await page.locator(selector).focus()</code></td></tr><tr><td><code>await page.hover(selector)</code></td><td><code>await page.locator(selector).hover()</code></td></tr><tr><td><code>await page.select(selector, values)</code></td><td><code>await page.locator(selector).selectOption(values)</code></td></tr><tr><td><code>await page.tap(selector)</code></td><td><code>await page.locator(selector).tap()</code></td></tr><tr><td><code>await page.type(selector, ...)</code></td><td><code>await page.locator(selector).type(...)</code><br> Please also consider [<code>method: Locator.fill</code>]</td></tr><tr><td><code>await page.waitForFileChooser(...)</code><br><code>await elementHandle.uploadFile(...)</code></td><td><code>await page.locator(selector).setInputFiles(...)</code></td></tr><tr><td><code>await page.cookies([...urls])</code></td><td><code>await browserContext.cookies([urls])</code></td></tr><tr><td><code>await page.deleteCookie(...cookies)</code></td><td><code>await browserContext.clearCookies()</code></td></tr><tr><td><code>await page.setCookie(...cookies)</code></td><td><code>await browserContext.addCookies(cookies)</code></td></tr><tr><td><code>page.on(...)</code></td><td><code>page.on(...)</code><br>In order to intercept and mutate requests, see [<code>method: Page.route</code>]</td></tr></tbody></table><p><code>page.waitForNavigation</code> and <code>page.waitForSelector</code> remain, but in many cases will not be necessary due to <a href="./actionability">auto-waiting</a>.</p><p>The use of [ElementHandle] is discouraged, use [Locator] objects and web-first assertions instead.</p><p>Locators are the central piece of Playwright&#39;s auto-waiting and retry-ability. Locators are strict. This means that all operations on locators that imply some target DOM element will throw an exception if more than one element matches a given selector.</p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><h3 id="automation-example" tabindex="-1"><a class="header-anchor" href="#automation-example" aria-hidden="true">#</a> Automation example</h3><p>Puppeteer:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setViewport</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1280</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">800</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;http://whatsmyuseragent.org/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">waitUntil</span><span class="token operator">:</span> <span class="token string">&#39;networkidle2&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;example.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Line-by-line migration to Playwright:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> chromium <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;playwright&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setViewportSize</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1280</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">800</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;http://whatsmyuseragent.org/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">waitUntil</span><span class="token operator">:</span> <span class="token string">&#39;networkidle&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 4</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;example.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Migration highlights (see inline comments in the Playwright code snippet):</p>`,13),w=n("li",null,[a("Each Playwright Library file has explicit import of "),n("code",null,"chromium"),a(". Other browsers "),n("code",null,"webkit"),a(" or "),n("code",null,"firefox"),a(" can be used.")],-1),g=n("li",null,[n("code",null,"setViewport"),a(" becomes "),n("code",null,"setViewportSize")],-1),m=n("li",null,[n("code",null,"networkidle2"),a(" becomes "),n("code",null,"networkidle"),a(". Please note that in most cases it is not useful, thanks to auto-waiting.")],-1),b=o(`<h3 id="test-example" tabindex="-1"><a class="header-anchor" href="#test-example" aria-hidden="true">#</a> Test example</h3><p>Puppeteer with Jest:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> puppeteer <span class="token keyword">from</span> <span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Playwright homepage&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> browser<span class="token punctuation">;</span>
  <span class="token keyword">let</span> page<span class="token punctuation">;</span>

  <span class="token function">beforeAll</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;contains hero title&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://playwright.dev/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&#39;.hero__title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$eval</span><span class="token punctuation">(</span><span class="token string">&#39;.hero__title&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>textContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&#39;Playwright enables reliable end-to-end testing&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">afterAll</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Line-by-line migration to Playwright Test:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> test<span class="token punctuation">,</span> expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@playwright/test&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

test<span class="token punctuation">.</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;Playwright homepage&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;contains hero title&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> page <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// 2, 3</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://playwright.dev/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> titleLocator <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">locator</span><span class="token punctuation">(</span><span class="token string">&#39;.hero__title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
    <span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>titleLocator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContainText</span><span class="token punctuation">(</span> <span class="token comment">// 5</span>
      <span class="token string">&#39;Playwright enables reliable end-to-end testing&#39;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>Each Playwright Test file has explicit import of the <code>test</code> and <code>expect</code> functions</li><li>Test function is marked with <code>async</code></li><li>Playwright Test is given a <code>page</code> as one of its parameters. This is one of the many <a href="./api/class-fixtures">useful fixtures</a> in Playwright Test.<br> Playwright Test creates an isolated [Page] object for each test. However, if you&#39;d like to reuse a single [Page] object between multiple tests, you can create your own in [<code>method: Test.beforeAll</code>] and close it in [<code>method: Test.afterAll</code>].</li><li>Locator creation with [<code>method: Page.locator</code>] is one of the few methods that is sync.</li><li>Use <a href="./test-assertions">assertions</a> to verify the state instead of <code>page.$eval()</code>.</li></ol><h2 id="testing" tabindex="-1"><a class="header-anchor" href="#testing" aria-hidden="true">#</a> Testing</h2><p>To improve testing, it is advised to use <a href="./api/class-locator">Locators</a> and web-first <a href="./test-assertions">Assertions</a>. See <a href="./writing-tests">Writing Tests</a></p><p>It is common with Puppeteer to use <code>page.evaluate()</code> or <code>page.$eval()</code> to inspect an [ElementHandle] and extract the value of text content, attribute, class... Web-first <a href="./test-assertions">Assertions</a> offers several matchers for this purpose, it is more reliable and readable.</p>`,9),v=o('<h2 id="playwright-test-super-powers" tabindex="-1"><a class="header-anchor" href="#playwright-test-super-powers" aria-hidden="true">#</a> Playwright Test Super Powers</h2><p>Once you&#39;re on Playwright Test, you get a lot!</p><ul><li>Full zero-configuration TypeScript support</li><li>Run tests across <strong>all web engines</strong> (Chrome, Firefox, Safari) on <strong>any popular operating system</strong> (Windows, macOS, Ubuntu)</li><li>Full support for multiple origins, <a href="./api/class-frame">(i)frames</a>, <a href="./pages">tabs and contexts</a></li><li>Run tests in isolation in parallel across multiple browsers</li><li>Built-in test artifact collection: <a href="./test-configuration#record-video">video recording</a>, <a href="./test-configuration#automatic-screenshots">screenshots</a> and <a href="./test-configuration#record-test-trace">playwright traces</a></li></ul><p>You also get all these ✨ awesome tools ✨ that come bundled with Playwright Test:</p>',4),f=n("li",null,[n("a",{href:"./auth#code-generation"},"Playwright Test Code generation")],-1),y=n("li",null,[n("a",{href:"./trace-viewer"},"Playwright Tracing"),a(" for post-mortem debugging")],-1),x=n("h2",{id:"further-reading",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#further-reading","aria-hidden":"true"},"#"),a(" Further Reading")],-1),_=n("p",null,"Learn more about Playwright Test runner:",-1),P=n("li",null,[n("a",{href:".-js"},"Getting Started")],-1),T=n("li",null,[n("a",{href:"./test-fixtures"},"Fixtures")],-1),j=n("li",null,[n("a",{href:"./test-assertions"},"Assertions")],-1),L=n("li",null,[n("a",{href:"./actionability"},"Auto-waiting")],-1);function C(F,S){const s=c("RouterLink");return i(),l("div",null,[r(" TOC "),d,n("p",null,[a("This guide describes migration to "),k,a(" and "),t(s,{to:"/book/playwright/intro-js.html"},{default:e(()=>[a("Playwright Test")]),_:1}),a(" from Puppeteer. The APIs have similarities, but Playwright offers much more possibilities for web testing and cross-browser automation.")]),h,n("ol",null,[w,n("li",null,[a("For browser state isolation, consider "),t(s,{to:"/book/playwright/browser-contexts.html"},{default:e(()=>[a("browser contexts")]),_:1})]),g,m]),b,n("p",null,[t(s,{to:"/book/playwright/intro-js.html"},{default:e(()=>[a("Playwright Test")]),_:1}),a(" is our first-party recommended test runner to be used with Playwright. It provides several features like Page Object Model, parallelism, fixtures or reporters.")]),v,n("ul",null,[n("li",null,[t(s,{to:"/book/playwright/debug.html"},{default:e(()=>[a("Playwright Inspector")]),_:1})]),f,y]),x,_,n("ul",null,[P,T,n("li",null,[t(s,{to:"/book/playwright/locators.html"},{default:e(()=>[a("Locators")]),_:1})]),j,L])])}const I=p(u,[["render",C],["__file","puppeteer-js.html.vue"]]);export{I as default};
