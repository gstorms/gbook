import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as c,c as p,a as e,b as n,d as a,w as i,f as t}from"./app-3f278ba4.js";const d={},u=e("h2",{id:"version-1-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#version-1-31","aria-hidden":"true"},"#"),n(" Version 1.31")],-1),h=e("h3",{id:"new-apis",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#new-apis","aria-hidden":"true"},"#"),n(" New APIs")],-1),g=e("code",null,"method: LocatorAssertions.toBeInViewport",-1),m={href:"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API",target:"_blank",rel:"noopener noreferrer"},b=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> expect

locator <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Make sure at least some part of element intersects viewport.</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_in_viewport<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Make sure element is fully outside of viewport.</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>not_to_be_in_viewport<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Make sure that at least half of the element intersects viewport.</span>
expect<span class="token punctuation">(</span>locator<span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_in_viewport<span class="token punctuation">(</span>ratio<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),k=e("h3",{id:"miscellaneous",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#miscellaneous","aria-hidden":"true"},"#"),n(" Miscellaneous")],-1),v=e("li",null,"DOM snapshots in trace viewer can be now opened in a separate window.",-1),w=e("li",null,[n("New option ["),e("code",null,"option: Route.fetch.maxRedirects"),n("] for method ["),e("code",null,"method: Route.fetch"),n("].")],-1),f=e("li",null,"Playwright now supports Debian 11 arm64.",-1),y=t(`<h3 id="browser-versions" tabindex="-1"><a class="header-anchor" href="#browser-versions" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 111.0.5563.19</li><li>Mozilla Firefox 109.0</li><li>WebKit 16.4</li></ul><p>This version was also tested against the following stable channels:</p><ul><li>Google Chrome 110</li><li>Microsoft Edge 110</li></ul><h2 id="version-1-30" tabindex="-1"><a class="header-anchor" href="#version-1-30" aria-hidden="true">#</a> Version 1.30</h2><h3 id="browser-versions-1" tabindex="-1"><a class="header-anchor" href="#browser-versions-1" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 110.0.5481.38</li><li>Mozilla Firefox 108.0.2</li><li>WebKit 16.4</li></ul><p>This version was also tested against the following stable channels:</p><ul><li>Google Chrome 109</li><li>Microsoft Edge 109</li></ul><h2 id="version-1-29" tabindex="-1"><a class="header-anchor" href="#version-1-29" aria-hidden="true">#</a> Version 1.29</h2><h3 id="new-apis-1" tabindex="-1"><a class="header-anchor" href="#new-apis-1" aria-hidden="true">#</a> New APIs</h3><ul><li><p>New method [<code>method: Route.fetch</code>] and new option <code>json</code> for [<code>method: Route.fulfill</code>]:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">handle_route</span><span class="token punctuation">(</span>route<span class="token punctuation">:</span> Route<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token comment"># Fetch original settings.</span>
  response <span class="token operator">=</span> route<span class="token punctuation">.</span>fetch<span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment"># Force settings theme to a predefined value.</span>
  json <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
  json<span class="token punctuation">[</span><span class="token string">&quot;theme&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Solorized&quot;</span>

  <span class="token comment"># Fulfill with modified data.</span>
  route<span class="token punctuation">.</span>fulfill<span class="token punctuation">(</span>json<span class="token operator">=</span>json<span class="token punctuation">)</span>


page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/api/settings&quot;</span><span class="token punctuation">,</span> handle_route<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>New method [<code>method: Locator.all</code>] to iterate over all matching elements:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Check all checkboxes!</span>
checkboxes <span class="token operator">=</span> page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;checkbox&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> checkbox <span class="token keyword">in</span> checkboxes<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  checkbox<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>[<code>method: Locator.selectOption</code>] matches now by value or label:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">multiple</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Red<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>green<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Green<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>element<span class="token punctuation">.</span>select_option<span class="token punctuation">(</span><span class="token string">&quot;Red&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="miscellaneous-1" tabindex="-1"><a class="header-anchor" href="#miscellaneous-1" aria-hidden="true">#</a> Miscellaneous</h3><ul><li>Option <code>postData</code> in method [<code>method: Route.continue</code>] now supports [Serializable] values.</li></ul><h3 id="browser-versions-2" tabindex="-1"><a class="header-anchor" href="#browser-versions-2" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 109.0.5414.46</li><li>Mozilla Firefox 107.0</li><li>WebKit 16.4</li></ul><p>This version was also tested against the following stable channels:</p><ul><li>Google Chrome 108</li><li>Microsoft Edge 108</li></ul><h2 id="version-1-28" tabindex="-1"><a class="header-anchor" href="#version-1-28" aria-hidden="true">#</a> Version 1.28</h2><h3 id="playwright-tools" tabindex="-1"><a class="header-anchor" href="#playwright-tools" aria-hidden="true">#</a> Playwright Tools</h3><ul><li><strong>Live Locators in CodeGen.</strong> Generate a locator for any element on the page using &quot;Explore&quot; tool.</li></ul><figure><img src="https://user-images.githubusercontent.com/9798949/202293514-8e2eade6-c809-4b0a-864b-899dfcee3d84.png" alt="Locator Explorer" tabindex="0" loading="lazy"><figcaption>Locator Explorer</figcaption></figure><h3 id="new-apis-2" tabindex="-1"><a class="header-anchor" href="#new-apis-2" aria-hidden="true">#</a> New APIs</h3><ul><li>[<code>method: Locator.blur</code>]</li><li>[<code>method: Locator.clear</code>]</li></ul><h3 id="browser-versions-3" tabindex="-1"><a class="header-anchor" href="#browser-versions-3" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 108.0.5359.29</li><li>Mozilla Firefox 106.0</li><li>WebKit 16.4</li></ul><p>This version was also tested against the following stable channels:</p><ul><li>Google Chrome 107</li><li>Microsoft Edge 107</li></ul><h2 id="version-1-27" tabindex="-1"><a class="header-anchor" href="#version-1-27" aria-hidden="true">#</a> Version 1.27</h2><h3 id="locators" tabindex="-1"><a class="header-anchor" href="#locators" aria-hidden="true">#</a> Locators</h3><p>With these new APIs writing locators is a joy:</p>`,31),_=e("li",null,[n("["),e("code",null,"method: Page.getByText"),n("] to locate by text content.")],-1),x=e("code",null,"method: Page.getByRole",-1),q={href:"https://www.w3.org/TR/wai-aria-1.2/#roles",target:"_blank",rel:"noopener noreferrer"},P={href:"https://www.w3.org/TR/wai-aria-1.2/#aria-attributes",target:"_blank",rel:"noopener noreferrer"},A={href:"https://w3c.github.io/accname/#dfn-accessible-name",target:"_blank",rel:"noopener noreferrer"},C=t("<li>[<code>method: Page.getByLabel</code>] to locate a form control by associated label&#39;s text.</li><li>[<code>method: Page.getByTestId</code>] to locate an element based on its <code>data-testid</code> attribute (other attribute can be configured).</li><li>[<code>method: Page.getByPlaceholder</code>] to locate an input by placeholder.</li><li>[<code>method: Page.getByAltText</code>] to locate an element, usually image, by its text alternative.</li><li>[<code>method: Page.getByTitle</code>] to locate an element by its title.</li>",5),R=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>get_by_label<span class="token punctuation">(</span><span class="token string">&quot;User Name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token string">&quot;John&quot;</span><span class="token punctuation">)</span>

page<span class="token punctuation">.</span>get_by_label<span class="token punctuation">(</span><span class="token string">&quot;Password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token string">&quot;secret-password&quot;</span><span class="token punctuation">)</span>

page<span class="token punctuation">.</span>get_by_role<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;Sign in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>

expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>get_by_text<span class="token punctuation">(</span><span class="token string">&quot;Welcome, John!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_be_visible<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>All the same methods are also available on [Locator], [FrameLocator] and [Frame] classes.</p><h3 id="other-highlights" tabindex="-1"><a class="header-anchor" href="#other-highlights" aria-hidden="true">#</a> Other highlights</h3><ul><li>As announced in v1.25, Ubuntu 18 will not be supported as of Dec 2022. In addition to that, there will be no WebKit updates on Ubuntu 18 starting from the next Playwright release.</li></ul><h3 id="behavior-changes" tabindex="-1"><a class="header-anchor" href="#behavior-changes" aria-hidden="true">#</a> Behavior Changes</h3><ul><li><p>[<code>method: LocatorAssertions.toHaveAttribute</code>] with an empty value does not match missing attribute anymore. For example, the following snippet will succeed when <code>button</code> <strong>does not</strong> have a <code>disabled</code> attribute.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">expect</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">get_by_role</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_have_attribute</span><span class="token punctuation">(</span><span class="token string">&quot;disabled&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="browser-versions-4" tabindex="-1"><a class="header-anchor" href="#browser-versions-4" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 107.0.5304.18</li><li>Mozilla Firefox 105.0.1</li><li>WebKit 16.0</li></ul><p>This version was also tested against the following stable channels:</p><ul><li>Google Chrome 106</li><li>Microsoft Edge 106</li></ul><h2 id="version-1-26" tabindex="-1"><a class="header-anchor" href="#version-1-26" aria-hidden="true">#</a> Version 1.26</h2><h3 id="assertions" tabindex="-1"><a class="header-anchor" href="#assertions" aria-hidden="true">#</a> Assertions</h3><ul><li>New option <code>enabled</code> for [<code>method: LocatorAssertions.toBeEnabled</code>].</li><li>[<code>method: LocatorAssertions.toHaveText</code>] now pierces open shadow roots.</li><li>New option <code>editable</code> for [<code>method: LocatorAssertions.toBeEditable</code>].</li><li>New option <code>visible</code> for [<code>method: LocatorAssertions.toBeVisible</code>].</li></ul><h3 id="other-highlights-1" tabindex="-1"><a class="header-anchor" href="#other-highlights-1" aria-hidden="true">#</a> Other highlights</h3><ul><li>New option <code>max_redirects</code> for [<code>method: APIRequestContext.get</code>] and others to limit redirect count.</li><li>Python 3.11 is now supported.</li></ul><h3 id="behavior-change" tabindex="-1"><a class="header-anchor" href="#behavior-change" aria-hidden="true">#</a> Behavior Change</h3><p>A bunch of Playwright APIs already support the <code>wait_until: &quot;domcontentloaded&quot;</code> option.<br> For example:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://playwright.dev&quot;</span><span class="token punctuation">,</span> wait_until<span class="token operator">=</span><span class="token string">&quot;domcontentloaded&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Prior to 1.26, this would wait for all iframes to fire the <code>DOMContentLoaded</code><br> event.</p><p>To align with web specification, the <code>&#39;domcontentloaded&#39;</code> value only waits for<br> the target frame to fire the <code>&#39;DOMContentLoaded&#39;</code> event. Use <code>wait_until=&quot;load&quot;</code> to wait for all iframes.</p><h3 id="browser-versions-5" tabindex="-1"><a class="header-anchor" href="#browser-versions-5" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 106.0.5249.30</li><li>Mozilla Firefox 104.0</li><li>WebKit 16.0</li></ul><p>This version was also tested against the following stable channels:</p><ul><li>Google Chrome 105</li><li>Microsoft Edge 105</li></ul><h2 id="version-1-25" tabindex="-1"><a class="header-anchor" href="#version-1-25" aria-hidden="true">#</a> Version 1.25</h2><h3 id="announcements" tabindex="-1"><a class="header-anchor" href="#announcements" aria-hidden="true">#</a> Announcements</h3><ul><li>🎁 We now ship Ubuntu 22.04 Jammy Jellyfish docker image: <code>mcr.microsoft.com/playwright/python:v1.32.0-jammy</code>.</li><li>🪦 This is the last release with macOS 10.15 support (deprecated as of 1.21).</li><li>⚠️ Ubuntu 18 is now deprecated and will not be supported as of Dec 2022.</li></ul><h3 id="browser-versions-6" tabindex="-1"><a class="header-anchor" href="#browser-versions-6" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 105.0.5195.19</li><li>Mozilla Firefox 103.0</li><li>WebKit 16.0</li></ul><p>This version was also tested against the following stable channels:</p><ul><li>Google Chrome 104</li><li>Microsoft Edge 104</li></ul><h2 id="version-1-24" tabindex="-1"><a class="header-anchor" href="#version-1-24" aria-hidden="true">#</a> Version 1.24</h2>`,32),T=e("div",{className:"embed-youtube"},[e("iframe",{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/9F05o1shxcY",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""})],-1),V=t('<h3 id="🐂-debian-11-bullseye-support" tabindex="-1"><a class="header-anchor" href="#🐂-debian-11-bullseye-support" aria-hidden="true">#</a> 🐂 Debian 11 Bullseye Support</h3><p>Playwright now supports Debian 11 Bullseye on x86_64 for Chromium, Firefox and WebKit. Let us know<br> if you encounter any issues!</p><p>Linux support looks like this:</p><p>| | Ubuntu 20.04 | Ubuntu 22.04 | Debian 11<br> | :--- | :---: | :---: | :---: | :---: |<br> | Chromium | ✅ | ✅ | ✅ |<br> | WebKit | ✅ | ✅ | ✅ |<br> | Firefox | ✅ | ✅ | ✅ |</p><h3 id="new-introduction-docs" tabindex="-1"><a class="header-anchor" href="#new-introduction-docs" aria-hidden="true">#</a> New introduction docs</h3>',5),B={href:"https://playwright.dev/python/docs/intro",target:"_blank",rel:"noopener noreferrer"},I=t(`<h2 id="version-1-23" tabindex="-1"><a class="header-anchor" href="#version-1-23" aria-hidden="true">#</a> Version 1.23</h2><h3 id="network-replay" tabindex="-1"><a class="header-anchor" href="#network-replay" aria-hidden="true">#</a> Network Replay</h3><p>Now you can record network traffic into a HAR file and re-use this traffic in your tests.</p><p>To record network into HAR file:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token function">open</span> --save-har<span class="token operator">=</span>github.har.zip https://github.com/microsoft
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Alternatively, you can record HAR programmatically:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>record_har_path<span class="token operator">=</span><span class="token string">&quot;github.har.zip&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># ... do stuff ...</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>record_har_path<span class="token operator">=</span><span class="token string">&quot;github.har.zip&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># ... do stuff ...</span>
context<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),N=e("code",null,"method: Page.routeFromHAR",-1),L=e("code",null,"method: BrowserContext.routeFromHAR",-1),M={href:"http://www.softwareishard.com/blog/har-12-spec/",target:"_blank",rel:"noopener noreferrer"},F=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> context<span class="token punctuation">.</span>route_from_har<span class="token punctuation">(</span><span class="token string">&quot;github.har.zip&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context<span class="token punctuation">.</span>route_from_har<span class="token punctuation">(</span><span class="token string">&quot;github.har.zip&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Read more in <a href="./network#record-and-replay-requests">our documentation</a>.</p><h3 id="advanced-routing" tabindex="-1"><a class="header-anchor" href="#advanced-routing" aria-hidden="true">#</a> Advanced Routing</h3><p>You can now use [<code>method: Route.fallback</code>] to defer routing to other handlers.</p><p>Consider the following example:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Remove a header from all requests</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">remove_header_handler</span><span class="token punctuation">(</span>route<span class="token punctuation">:</span> Route<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    headers <span class="token operator">=</span> <span class="token keyword">await</span> route<span class="token punctuation">.</span>request<span class="token punctuation">.</span>all_headers<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token string">&quot;if-none-match&quot;</span> <span class="token keyword">in</span> headers<span class="token punctuation">:</span>
        <span class="token keyword">del</span> headers<span class="token punctuation">[</span><span class="token string">&quot;if-none-match&quot;</span><span class="token punctuation">]</span>
    <span class="token keyword">await</span> route<span class="token punctuation">.</span>fallback<span class="token punctuation">(</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> remove_header_handler<span class="token punctuation">)</span>

<span class="token comment"># Abort all images</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">abort_images_handler</span><span class="token punctuation">(</span>route<span class="token punctuation">:</span> Route<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> route<span class="token punctuation">.</span>request<span class="token punctuation">.</span>resource_type <span class="token operator">==</span> <span class="token string">&quot;image&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">await</span> route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">await</span> route<span class="token punctuation">.</span>fallback<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> abort_images_handler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Remove a header from all requests</span>
<span class="token keyword">def</span> <span class="token function">remove_header_handler</span><span class="token punctuation">(</span>route<span class="token punctuation">:</span> Route<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    headers <span class="token operator">=</span> route<span class="token punctuation">.</span>request<span class="token punctuation">.</span>all_headers<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token string">&quot;if-none-match&quot;</span> <span class="token keyword">in</span> headers<span class="token punctuation">:</span>
        <span class="token keyword">del</span> headers<span class="token punctuation">[</span><span class="token string">&quot;if-none-match&quot;</span><span class="token punctuation">]</span>
    route<span class="token punctuation">.</span>fallback<span class="token punctuation">(</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> remove_header_handler<span class="token punctuation">)</span>

<span class="token comment"># Abort all images</span>
<span class="token keyword">def</span> <span class="token function">abort_images_handler</span><span class="token punctuation">(</span>route<span class="token punctuation">:</span> Route<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> route<span class="token punctuation">.</span>request<span class="token punctuation">.</span>resource_type <span class="token operator">==</span> <span class="token string">&quot;image&quot;</span><span class="token punctuation">:</span>
        route<span class="token punctuation">.</span>abort<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        route<span class="token punctuation">.</span>fallback<span class="token punctuation">(</span><span class="token punctuation">)</span>

page<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">&quot;**/*&quot;</span><span class="token punctuation">,</span> abort_images_handler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that the new methods [<code>method: Page.routeFromHAR</code>] and [<code>method: BrowserContext.routeFromHAR</code>] also participate in routing and could be deferred to.</p><h3 id="web-first-assertions-update" tabindex="-1"><a class="header-anchor" href="#web-first-assertions-update" aria-hidden="true">#</a> Web-First Assertions Update</h3><ul><li>New method [<code>method: LocatorAssertions.toHaveValues</code>] that asserts all selected values of <code>&lt;select multiple&gt;</code> element.</li><li>Methods [<code>method: LocatorAssertions.toContainText</code>] and [<code>method: LocatorAssertions.toHaveText</code>] now accept <code>ignore_case</code> option.</li></ul><h3 id="miscellaneous-2" tabindex="-1"><a class="header-anchor" href="#miscellaneous-2" aria-hidden="true">#</a> Miscellaneous</h3><ul><li><p>If there&#39;s a service worker that&#39;s in your way, you can now easily disable it with a new context option <code>service_workers</code>:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>service_workers<span class="token operator">=</span><span class="token string">&quot;block&quot;</span><span class="token punctuation">)</span>
page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>service_workers<span class="token operator">=</span><span class="token string">&quot;block&quot;</span><span class="token punctuation">)</span>
page <span class="token operator">=</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Using <code>.zip</code> path for <code>recordHar</code> context option automatically zips the resulting HAR:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>record_har_path<span class="token operator">=</span><span class="token string">&quot;github.har.zip&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>record_har_path<span class="token operator">=</span><span class="token string">&quot;github.har.zip&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>If you intend to edit HAR by hand, consider using the <code>&quot;minimal&quot;</code> HAR recording mode<br> that only records information that is essential for replaying:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>record_har_mode<span class="token operator">=</span><span class="token string">&quot;minimal&quot;</span><span class="token punctuation">,</span> record_har_path<span class="token operator">=</span><span class="token string">&quot;har.har&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span>record_har_mode<span class="token operator">=</span><span class="token string">&quot;minimal&quot;</span><span class="token punctuation">,</span> record_har_path<span class="token operator">=</span><span class="token string">&quot;har.har&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Playwright now runs on Ubuntu 22 amd64 and Ubuntu 22 arm64.</p></li></ul><h2 id="version-1-22" tabindex="-1"><a class="header-anchor" href="#version-1-22" aria-hidden="true">#</a> Version 1.22</h2><h3 id="highlights" tabindex="-1"><a class="header-anchor" href="#highlights" aria-hidden="true">#</a> Highlights</h3>`,15),S={href:"https://www.w3.org/TR/wai-aria-1.2/#roles",target:"_blank",rel:"noopener noreferrer"},E={href:"https://www.w3.org/TR/wai-aria-1.2/#aria-attributes",target:"_blank",rel:"noopener noreferrer"},z={href:"https://w3c.github.io/accname/#dfn-accessible-name",target:"_blank",rel:"noopener noreferrer"},W=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Click a button with accessible name &quot;log in&quot;</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;role=button[name=&#39;log in&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),H=t(`<li><p>New [<code>method: Locator.filter</code>] API to filter an existing locator</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>buttons <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;role=button&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># ...</span>
submit_button <span class="token operator">=</span> buttons<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>has_text<span class="token operator">=</span><span class="token string">&quot;Submit&quot;</span><span class="token punctuation">)</span>
submit_button<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Codegen now supports generating Pytest Tests</p><figure><img src="https://user-images.githubusercontent.com/746130/168098384-40784024-6c26-4426-8255-e714862af6fc.png" alt="Graphics" tabindex="0" loading="lazy"><figcaption>Graphics</figcaption></figure></li>`,2),D=e("h2",{id:"version-1-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#version-1-21","aria-hidden":"true"},"#"),n(" Version 1.21")],-1),G=e("h3",{id:"highlights-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#highlights-1","aria-hidden":"true"},"#"),n(" Highlights")],-1),K={href:"https://www.w3.org/TR/wai-aria-1.2/#roles",target:"_blank",rel:"noopener noreferrer"},U={href:"https://www.w3.org/TR/wai-aria-1.2/#aria-attributes",target:"_blank",rel:"noopener noreferrer"},O={href:"https://w3c.github.io/accname/#dfn-accessible-name",target:"_blank",rel:"noopener noreferrer"},j=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Click a button with accessible name &quot;log in&quot;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;role=button[name=&#39;log in&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Click a button with accessible name &quot;log in&quot;</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;role=button[name=&#39;log in&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),J=t("<li><p>New <code>scale</code> option in [<code>method: Page.screenshot</code>] for smaller sized screenshots.</p></li><li><p>New <code>caret</code> option in [<code>method: Page.screenshot</code>] to control text caret. Defaults to <code>&quot;hide&quot;</code>.</p></li>",2),Y=t(`<h3 id="behavior-changes-1" tabindex="-1"><a class="header-anchor" href="#behavior-changes-1" aria-hidden="true">#</a> Behavior Changes</h3><ul><li>The <code>mcr.microsoft.com/playwright</code> docker image no longer contains Python. Please use <code>mcr.microsoft.com/playwright/python</code><br> as a Playwright-ready docker image with pre-installed Python.</li><li>Playwright now supports large file uploads (100s of MBs) via [<code>method: Locator.setInputFiles</code>] API.</li></ul><h3 id="browser-versions-7" tabindex="-1"><a class="header-anchor" href="#browser-versions-7" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 101.0.4951.26</li><li>Mozilla Firefox 98.0.2</li><li>WebKit 15.4</li></ul><p>This version was also tested against the following stable channels:</p><ul><li>Google Chrome 100</li><li>Microsoft Edge 100</li></ul><h2 id="version-1-20" tabindex="-1"><a class="header-anchor" href="#version-1-20" aria-hidden="true">#</a> Version 1.20</h2><h3 id="highlights-2" tabindex="-1"><a class="header-anchor" href="#highlights-2" aria-hidden="true">#</a> Highlights</h3><ul><li>New options for methods [<code>method: Page.screenshot</code>], [<code>method: Locator.screenshot</code>] and [<code>method: ElementHandle.screenshot</code>]: <ul><li>Option <code>animations: &quot;disabled&quot;</code> rewinds all CSS animations and transitions to a consistent state</li><li>Option <code>mask: Locator[]</code> masks given elements, overlaying them with pink <code>#FF00FF</code> boxes.</li></ul></li><li><a href="./trace-viewer">Trace Viewer</a> now shows <a href="./api-testing">API testing requests</a>.</li><li>[<code>method: Locator.highlight</code>] visually reveals element(s) for easier debugging.</li></ul><h3 id="announcements-1" tabindex="-1"><a class="header-anchor" href="#announcements-1" aria-hidden="true">#</a> Announcements</h3><ul><li>We now ship a designated Python docker image <code>mcr.microsoft.com/playwright/python</code>. Please switch over to it if you use<br> Python. This is the last release that includes Python inside our javascript <code>mcr.microsoft.com/playwright</code> docker image.</li><li>v1.20 is the last release to receive WebKit update for macOS 10.15 Catalina. Please update MacOS to keep using latest &amp; greatest WebKit!</li></ul><h3 id="browser-versions-8" tabindex="-1"><a class="header-anchor" href="#browser-versions-8" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 101.0.4921.0</li><li>Mozilla Firefox 97.0.1</li><li>WebKit 15.4</li></ul><p>This version was also tested against the following stable channels:</p><ul><li>Google Chrome 99</li><li>Microsoft Edge 99</li></ul><h2 id="version-1-19" tabindex="-1"><a class="header-anchor" href="#version-1-19" aria-hidden="true">#</a> Version 1.19</h2><h3 id="highlights-3" tabindex="-1"><a class="header-anchor" href="#highlights-3" aria-hidden="true">#</a> Highlights</h3><ul><li><p>Locator now supports a <code>has</code> option that makes sure it contains another locator inside:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;article&quot;</span><span class="token punctuation">,</span> has<span class="token operator">=</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;.highlight&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;article&quot;</span><span class="token punctuation">,</span> has<span class="token operator">=</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;.highlight&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Read more in <a href="./api/class-locator#locator-locator-option-has">locator documentation</a></p></li><li><p>New [<code>method: Locator.page</code>]</p></li><li><p>[<code>method: Page.screenshot</code>] and [<code>method: Locator.screenshot</code>] now automatically hide blinking caret</p></li><li><p>Playwright Codegen now generates locators and frame locators</p></li></ul><h3 id="browser-versions-9" tabindex="-1"><a class="header-anchor" href="#browser-versions-9" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 100.0.4863.0</li><li>Mozilla Firefox 96.0.1</li><li>WebKit 15.4</li></ul><p>This version was also tested against the following stable channels:</p><ul><li>Google Chrome 98</li><li>Microsoft Edge 98</li></ul><h2 id="version-1-18" tabindex="-1"><a class="header-anchor" href="#version-1-18" aria-hidden="true">#</a> Version 1.18</h2><h3 id="api-testing" tabindex="-1"><a class="header-anchor" href="#api-testing" aria-hidden="true">#</a> API Testing</h3><p>Playwright for Python 1.18 introduces new <a href="./api/class-apirequestcontext">API Testing</a> that lets you send requests to the server directly from Python!<br> Now you can:</p><ul><li>test your server API</li><li>prepare server side state before visiting the web application in a test</li><li>validate server side post-conditions after running some actions in the browser</li></ul><p>To do a request on behalf of Playwright&#39;s Page, use <strong>new [<code>property: Page.request</code>] API</strong>:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Do a GET request on behalf of page</span>
res <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span>request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://example.com/foo.json&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Do a GET request on behalf of page</span>
res <span class="token operator">=</span> page<span class="token punctuation">.</span>request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://example.com/foo.json&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Read more in <a href="./api/class-apirequestcontext">our documentation</a>.</p><h3 id="web-first-assertions" tabindex="-1"><a class="header-anchor" href="#web-first-assertions" aria-hidden="true">#</a> Web-First Assertions</h3><p>Playwright for Python 1.18 introduces <a href="./test-assertions">Web-First Assertions</a>.</p><p>Consider the following example:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>async_api <span class="token keyword">import</span> Page<span class="token punctuation">,</span> expect

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">test_status_becomes_submitted</span><span class="token punctuation">(</span>page<span class="token punctuation">:</span> Page<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token comment"># ..</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;#submit-button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;.status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token string">&quot;Submitted&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> playwright<span class="token punctuation">.</span>sync_api <span class="token keyword">import</span> Page<span class="token punctuation">,</span> expect

<span class="token keyword">def</span> <span class="token function">test_status_becomes_submitted</span><span class="token punctuation">(</span>page<span class="token punctuation">:</span> Page<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token comment"># ..</span>
    page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;#submit-button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
    expect<span class="token punctuation">(</span>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;.status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_have_text<span class="token punctuation">(</span><span class="token string">&quot;Submitted&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Playwright will be re-testing the node with the selector <code>.status</code> until<br> fetched Node has the <code>&quot;Submitted&quot;</code> text. It will be re-fetching the node and<br> checking it over and over, until the condition is met or until the timeout is<br> reached. You can pass this timeout as an option.</p><p>Read more in <a href="./test-assertions">our documentation</a>.</p><h3 id="locator-improvements" tabindex="-1"><a class="header-anchor" href="#locator-improvements" aria-hidden="true">#</a> Locator Improvements</h3><ul><li><p>[<code>method: Locator.dragTo</code>]</p></li><li><p>Each locator can now be optionally filtered by the text it contains:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">await</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">,</span> has_text<span class="token operator">=</span><span class="token string">&quot;my item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">,</span> has_text<span class="token operator">=</span><span class="token string">&quot;my item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Read more in <a href="./api/class-locator#locator-locator-option-has-text">locator documentation</a></p></li></ul><h3 id="new-apis-changes" tabindex="-1"><a class="header-anchor" href="#new-apis-changes" aria-hidden="true">#</a> New APIs &amp; changes</h3><ul><li><a href="./api/class-browser#browser-new-context-option-accept-downloads"><code>accept_downloads</code></a> option now defaults to <code>True</code>.</li><li><a href="./api/class-tracing#tracing-start-option-sources"><code>sources</code></a> option to embed sources into traces.</li></ul><h3 id="browser-versions-10" tabindex="-1"><a class="header-anchor" href="#browser-versions-10" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 99.0.4812.0</li><li>Mozilla Firefox 95.0</li><li>WebKit 15.4</li></ul><p>This version was also tested against the following stable channels:</p><ul><li>Google Chrome 97</li><li>Microsoft Edge 97</li></ul><h2 id="version-1-17" tabindex="-1"><a class="header-anchor" href="#version-1-17" aria-hidden="true">#</a> Version 1.17</h2><h3 id="frame-locators" tabindex="-1"><a class="header-anchor" href="#frame-locators" aria-hidden="true">#</a> Frame Locators</h3><p>Playwright 1.17 introduces <a href="./api/class-framelocator">frame locators</a> - a locator to the iframe on the page. Frame locators capture the logic sufficient to retrieve the <code>iframe</code> and then locate elements in that iframe. Frame locators are strict by default, will wait for <code>iframe</code> to appear and can be used in Web-First assertions.</p><figure><img src="https://user-images.githubusercontent.com/746130/142082759-2170db38-370d-43ec-8d41-5f9941f57d83.png" alt="Graphics" tabindex="0" loading="lazy"><figcaption>Graphics</figcaption></figure><p>Frame locators can be created with either [<code>method: Page.frameLocator</code>] or [<code>method: Locator.frameLocator</code>] method.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>locator <span class="token operator">=</span> page<span class="token punctuation">.</span>frame_locator<span class="token punctuation">(</span><span class="token string">&quot;my-frame&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;text=Submit&quot;</span><span class="token punctuation">)</span>
locator<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Read more at <a href="./api/class-framelocator">our documentation</a>.</p><h3 id="trace-viewer-update" tabindex="-1"><a class="header-anchor" href="#trace-viewer-update" aria-hidden="true">#</a> Trace Viewer Update</h3>`,53),Q=e("strong",null,"available online",-1),Z={href:"https://trace.playwright.dev",target:"_blank",rel:"noopener noreferrer"},X=e("code",null,"trace.zip",-1),$=e("strong",null,"NOTE",-1),ee={href:"https://trace.playwright.dev",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://web.dev/progressive-web-apps/",target:"_blank",rel:"noopener noreferrer"},ae=t(`<ul><li>Playwright Test traces now include sources by default (these could be turned off with tracing option)</li><li>Trace Viewer now shows test name</li><li>New trace metadata tab with browser details</li><li>Snapshots now have URL bar</li></ul><figure><img src="https://user-images.githubusercontent.com/746130/141877831-29e37cd1-e574-4bd9-aab5-b13a463bb4ae.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h3 id="html-report-update" tabindex="-1"><a class="header-anchor" href="#html-report-update" aria-hidden="true">#</a> HTML Report Update</h3><ul><li>HTML report now supports dynamic filtering</li><li>Report is now a <strong>single static HTML file</strong> that could be sent by e-mail or as a slack attachment.</li></ul><figure><img src="https://user-images.githubusercontent.com/746130/141877402-e486643d-72c7-4db3-8844-ed2072c5d676.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h3 id="ubuntu-arm64-support-more" tabindex="-1"><a class="header-anchor" href="#ubuntu-arm64-support-more" aria-hidden="true">#</a> Ubuntu ARM64 support + more</h3><ul><li>Playwright now supports <strong>Ubuntu 20.04 ARM64</strong>. You can now run Playwright tests inside Docker on Apple M1 and on Raspberry Pi.</li><li>You can now use Playwright to install stable version of Edge on Linux:<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token function">install</span> msedge
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="new-apis-3" tabindex="-1"><a class="header-anchor" href="#new-apis-3" aria-hidden="true">#</a> New APIs</h3><ul><li>Tracing now supports a <a href="./api/class-tracing#tracing-start-option-title"><code>&#39;title&#39;</code></a> option</li><li>Page navigations support a new <a href="./api/class-page#page-goto"><code>&#39;commit&#39;</code></a> waiting option</li></ul><h2 id="version-1-16" tabindex="-1"><a class="header-anchor" href="#version-1-16" aria-hidden="true">#</a> Version 1.16</h2><h3 id="🎭-playwright-library" tabindex="-1"><a class="header-anchor" href="#🎭-playwright-library" aria-hidden="true">#</a> 🎭 Playwright Library</h3><h4 id="locator-wait-for" tabindex="-1"><a class="header-anchor" href="#locator-wait-for" aria-hidden="true">#</a> <code>locator.wait_for</code></h4><p>Wait for a locator to resolve to a single element with a given state.<br> Defaults to the <code>state: &#39;visible&#39;</code>.</p><p>Comes especially handy when working with lists:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>order_sent <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;#order-sent&quot;</span><span class="token punctuation">)</span>
order_sent<span class="token punctuation">.</span>wait_for<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Read more about [<code>method: Locator.waitFor</code>].</p><h3 id="docker-support-for-arm64" tabindex="-1"><a class="header-anchor" href="#docker-support-for-arm64" aria-hidden="true">#</a> Docker support for Arm64</h3><p>Playwright Docker image is now published for Arm64 so it can be used on Apple Silicon.</p><p>Read more about <a href="./docker">Docker integration</a>.</p><h3 id="🎭-playwright-trace-viewer" tabindex="-1"><a class="header-anchor" href="#🎭-playwright-trace-viewer" aria-hidden="true">#</a> 🎭 Playwright Trace Viewer</h3><ul><li>run trace viewer with <code>npx playwright show-trace</code> and drop trace files to the trace viewer PWA</li><li>better visual attribution of action targets</li></ul><p>Read more about <a href="./trace-viewer">Trace Viewer</a>.</p><h3 id="browser-versions-11" tabindex="-1"><a class="header-anchor" href="#browser-versions-11" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 97.0.4666.0</li><li>Mozilla Firefox 93.0</li><li>WebKit 15.4</li></ul><p>This version of Playwright was also tested against the following stable channels:</p><ul><li>Google Chrome 94</li><li>Microsoft Edge 94</li></ul><h2 id="version-1-15" tabindex="-1"><a class="header-anchor" href="#version-1-15" aria-hidden="true">#</a> Version 1.15</h2><h3 id="🖱️-mouse-wheel" tabindex="-1"><a class="header-anchor" href="#🖱️-mouse-wheel" aria-hidden="true">#</a> 🖱️ Mouse Wheel</h3>`,28),se={href:"https://playwright.dev/python/docs/api/class-mouse#mouse-wheel",target:"_blank",rel:"noopener noreferrer"},te=e("code",null,"Page.mouse.wheel",-1),oe=e("h3",{id:"📜-new-headers-api",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#📜-new-headers-api","aria-hidden":"true"},"#"),n(" 📜 New Headers API")],-1),ie=e("p",null,"Previously it was not possible to get multiple header values of a response. This is now possible and additional helper functions are available:",-1),le={href:"https://playwright.dev/python/docs/api/class-request#request-all-headers",target:"_blank",rel:"noopener noreferrer"},re={href:"https://playwright.dev/python/docs/api/class-request#request-headers-array",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://playwright.dev/python/docs/api/class-request#request-header-value",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://playwright.dev/python/docs/api/class-response#response-all-headers",target:"_blank",rel:"noopener noreferrer"},de={href:"https://playwright.dev/python/docs/api/class-response#response-headers-array",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://playwright.dev/python/docs/api/class-response#response-header-value",target:"_blank",rel:"noopener noreferrer"},he={href:"https://playwright.dev/python/docs/api/class-response#response-header-values",target:"_blank",rel:"noopener noreferrer"},ge=e("h3",{id:"🌈-forced-colors-emulation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#🌈-forced-colors-emulation","aria-hidden":"true"},"#"),n(" 🌈 Forced-Colors emulation")],-1),me=e("code",null,"forced-colors",-1),be={href:"https://playwright.dev/python/docs/api/class-browser#browser-new-context-option-forced-colors",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://playwright.dev/python/docs/api/class-page#page-emulate-media",target:"_blank",rel:"noopener noreferrer"},ve=e("h3",{id:"new-apis-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#new-apis-4","aria-hidden":"true"},"#"),n(" New APIs")],-1),we={href:"https://playwright.dev/python/docs/api/class-page#page-route",target:"_blank",rel:"noopener noreferrer"},fe=e("code",null,"times",-1),ye={href:"https://playwright.dev/python/docs/api/class-page#page-set-checked",target:"_blank",rel:"noopener noreferrer"},_e={href:"https://playwright.dev/python/docs/api/class-locator#locator-set-checked",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://playwright.dev/python/docs/api/class-request#request-sizes",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://playwright.dev/python/docs/api/class-tracing#tracing-start-chunk",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://playwright.dev/python/docs/api/class-tracing#tracing-stop-chunk",target:"_blank",rel:"noopener noreferrer"},Ae=t(`<h3 id="browser-versions-12" tabindex="-1"><a class="header-anchor" href="#browser-versions-12" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 96.0.4641.0</li><li>Mozilla Firefox 92.0</li><li>WebKit 15.0</li></ul><h2 id="version-1-14" tabindex="-1"><a class="header-anchor" href="#version-1-14" aria-hidden="true">#</a> Version 1.14</h2><h4 id="⚡️-new-strict-mode" tabindex="-1"><a class="header-anchor" href="#⚡️-new-strict-mode" aria-hidden="true">#</a> ⚡️ New &quot;strict&quot; mode</h4><p>Selector ambiguity is a common problem in automation testing. <strong>&quot;strict&quot; mode</strong><br> ensures that your selector points to a single element and throws otherwise.</p><p>Pass <code>strict=true</code> into your action calls to opt in.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># This will throw if you have more than one button!</span>
page<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">,</span> strict<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="📍-new-locators-api" tabindex="-1"><a class="header-anchor" href="#📍-new-locators-api" aria-hidden="true">#</a> 📍 New <a href="./api/class-locator"><strong>Locators API</strong></a></h4><p>Locator represents a view to the element(s) on the page. It captures the logic sufficient to retrieve the element at any given moment.</p><p>The difference between the <a href="./api/class-locator">Locator</a> and <a href="./api/class-elementhandle">ElementHandle</a> is that the latter points to a particular element, while <a href="./api/class-locator">Locator</a> captures the logic of how to retrieve that element.</p><p>Also, locators are <strong>&quot;strict&quot; by default</strong>!</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>locator <span class="token operator">=</span> page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span>
locator<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Learn more in the <a href="./api/class-locator">documentation</a>.</p>`,13),Ce={id:"🧩-experimental-react-and-vue-selector-engines",tabindex:"-1"},Re=e("a",{class:"header-anchor",href:"#🧩-experimental-react-and-vue-selector-engines","aria-hidden":"true"},"#",-1),Te=e("strong",null,"React",-1),Ve=e("strong",null,"Vue",-1),Be={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors",target:"_blank",rel:"noopener noreferrer"},Ie=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;_react=SubmitButton[enabled=true]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;_vue=submit-button[enabled=true]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Ne={id:"✨-new-nth-and-visible-selector-engines",tabindex:"-1"},Le=e("a",{class:"header-anchor",href:"#✨-new-nth-and-visible-selector-engines","aria-hidden":"true"},"#",-1),Me=e("strong",null,[e("code",null,"nth")],-1),Fe=e("strong",null,[e("code",null,"visible")],-1),Se=e("code",null,"nth",-1),Ee=e("code",null,":nth-match",-1),ze=e("code",null,"visible",-1),We=e("code",null,":visible",-1),He=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># select the first button among all buttons</span>
button<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;button &gt;&gt; nth=0&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># or if you are using locators, you can use first, nth() and last</span>
page<span class="token punctuation">.</span>locator<span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># click a visible button</span>
button<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token string">&quot;button &gt;&gt; visible=true&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="browser-versions-13" tabindex="-1"><a class="header-anchor" href="#browser-versions-13" aria-hidden="true">#</a> Browser Versions</h3><ul><li>Chromium 94.0.4595.0</li><li>Mozilla Firefox 91.0</li><li>WebKit 15.0</li></ul><h2 id="version-1-13" tabindex="-1"><a class="header-anchor" href="#version-1-13" aria-hidden="true">#</a> Version 1.13</h2><h4 id="playwright" tabindex="-1"><a class="header-anchor" href="#playwright" aria-hidden="true">#</a> Playwright</h4><ul><li><strong>🖖 Programmatic drag-and-drop support</strong> via the [<code>method: Page.dragAndDrop</code>] API.</li><li><strong>🔎 Enhanced HAR</strong> with body sizes for requests and responses. Use via <code>recordHar</code> option in [<code>method: Browser.newContext</code>].</li></ul><h4 id="tools" tabindex="-1"><a class="header-anchor" href="#tools" aria-hidden="true">#</a> Tools</h4><ul><li>Playwright Trace Viewer now shows parameters, returned values and <code>console.log()</code> calls.</li></ul><h4 id="new-and-overhauled-guides" tabindex="-1"><a class="header-anchor" href="#new-and-overhauled-guides" aria-hidden="true">#</a> New and Overhauled Guides</h4>`,9),De=t('<h4 id="browser-versions-14" tabindex="-1"><a class="header-anchor" href="#browser-versions-14" aria-hidden="true">#</a> Browser Versions</h4><ul><li>Chromium 93.0.4576.0</li><li>Mozilla Firefox 90.0</li><li>WebKit 14.2</li></ul><h4 id="new-playwright-apis" tabindex="-1"><a class="header-anchor" href="#new-playwright-apis" aria-hidden="true">#</a> New Playwright APIs</h4><ul><li>new <code>baseURL</code> option in [<code>method: Browser.newContext</code>] and [<code>method: Browser.newPage</code>]</li><li>[<code>method: Response.securityDetails</code>] and [<code>method: Response.serverAddr</code>]</li><li>[<code>method: Page.dragAndDrop</code>] and [<code>method: Frame.dragAndDrop</code>]</li><li>[<code>method: Download.cancel</code>]</li><li>[<code>method: Page.inputValue</code>], [<code>method: Frame.inputValue</code>] and [<code>method: ElementHandle.inputValue</code>]</li><li>new <code>force</code> option in [<code>method: Page.fill</code>], [<code>method: Frame.fill</code>], and [<code>method: ElementHandle.fill</code>]</li><li>new <code>force</code> option in [<code>method: Page.selectOption</code>], [<code>method: Frame.selectOption</code>], and [<code>method: ElementHandle.selectOption</code>]</li></ul><h2 id="version-1-12" tabindex="-1"><a class="header-anchor" href="#version-1-12" aria-hidden="true">#</a> Version 1.12</h2><h4 id="🧟‍♂️-introducing-playwright-trace-viewer" tabindex="-1"><a class="header-anchor" href="#🧟‍♂️-introducing-playwright-trace-viewer" aria-hidden="true">#</a> 🧟‍♂️ Introducing Playwright Trace Viewer</h4>',6),Ge=t(`<ul><li>page DOM before and after each Playwright action</li><li>page rendering before and after each Playwright action</li><li>browser network during script execution</li></ul><p>Traces are recorded using the new [<code>property: BrowserContext.tracing</code>] API:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>browser <span class="token operator">=</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Start tracing before creating / navigating a page.</span>
context<span class="token punctuation">.</span>tracing<span class="token punctuation">.</span>start<span class="token punctuation">(</span>screenshots<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> snapshots<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://playwright.dev&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Stop tracing and export it into a zip archive.</span>
context<span class="token punctuation">.</span>tracing<span class="token punctuation">.</span>stop<span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;trace.zip&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Traces are examined later with the Playwright CLI:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>playwright show-trace trace.zip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>That will open the following GUI:</p><figure><img src="https://user-images.githubusercontent.com/746130/121109654-d66c4480-c7c0-11eb-8d4d-eb70d2b03811.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure>`,7),Ke=t('<h4 id="browser-versions-15" tabindex="-1"><a class="header-anchor" href="#browser-versions-15" aria-hidden="true">#</a> Browser Versions</h4><ul><li>Chromium 93.0.4530.0</li><li>Mozilla Firefox 89.0</li><li>WebKit 14.2</li></ul><p>This version of Playwright was also tested against the following stable channels:</p><ul><li>Google Chrome 91</li><li>Microsoft Edge 91</li></ul><h4 id="new-apis-5" tabindex="-1"><a class="header-anchor" href="#new-apis-5" aria-hidden="true">#</a> New APIs</h4><ul><li><code>reducedMotion</code> option in [<code>method: Page.emulateMedia</code>], [<code>method: BrowserType.launchPersistentContext</code>], [<code>method: Browser.newContext</code>] and [<code>method: Browser.newPage</code>]</li><li>[<code>event: BrowserContext.request</code>]</li><li>[<code>event: BrowserContext.requestFailed</code>]</li><li>[<code>event: BrowserContext.requestFinished</code>]</li><li>[<code>event: BrowserContext.response</code>]</li><li><code>tracesDir</code> option in [<code>method: BrowserType.launch</code>] and [<code>method: BrowserType.launchPersistentContext</code>]</li><li>new [<code>property: BrowserContext.tracing</code>] API namespace</li><li>new [<code>method: Download.page</code>] method</li></ul><h2 id="version-1-11" tabindex="-1"><a class="header-anchor" href="#version-1-11" aria-hidden="true">#</a> Version 1.11</h2>',7),Ue={href:"https://youtu.be/_Jla6DyuEu4",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://docs.google.com/presentation/d/1xFhZIJrdHkVe2CuMKOrni92HoG2SWslo0DhJJQMR1DI/edit?usp=sharing",target:"_blank",rel:"noopener noreferrer"},je=e("li",null,"We talked about Playwright",-1),Je=e("li",null,"Showed engineering work behind the scenes",-1),Ye=e("li",null,"Did live demos with new features ✨",-1),Qe=e("strong",null,"Special thanks",-1),Ze={href:"http://applitools.com/",target:"_blank",rel:"noopener noreferrer"},Xe=t('<h4 id="browser-versions-16" tabindex="-1"><a class="header-anchor" href="#browser-versions-16" aria-hidden="true">#</a> Browser Versions</h4><ul><li>Chromium 92.0.4498.0</li><li>Mozilla Firefox 89.0b6</li><li>WebKit 14.2</li></ul><h4 id="new-apis-6" tabindex="-1"><a class="header-anchor" href="#new-apis-6" aria-hidden="true">#</a> New APIs</h4><ul><li>support for <strong>async predicates</strong> across the API in methods such as [<code>method: Page.waitForRequest</code>] and others</li><li>new <strong>emulation devices</strong>: Galaxy S8, Galaxy S9+, Galaxy Tab S4, Pixel 3, Pixel 4</li><li>new methods: <ul><li>[<code>method: Page.waitForURL</code>] to await navigations to URL</li><li>[<code>method: Video.delete</code>] and [<code>method: Video.saveAs</code>] to manage screen recording</li></ul></li><li>new options: <ul><li><code>screen</code> option in the [<code>method: Browser.newContext</code>] method to emulate <code>window.screen</code> dimensions</li><li><code>position</code> option in [<code>method: Page.check</code>] and [<code>method: Page.uncheck</code>] methods</li><li><code>trial</code> option to dry-run actions in [<code>method: Page.check</code>], [<code>method: Page.uncheck</code>], [<code>method: Page.click</code>], [<code>method: Page.dblclick</code>], [<code>method: Page.hover</code>] and [<code>method: Page.tap</code>]</li></ul></li></ul><h2 id="version-1-10" tabindex="-1"><a class="header-anchor" href="#version-1-10" aria-hidden="true">#</a> Version 1.10</h2>',5),$e={href:"https://github.com/microsoft/playwright-java",target:"_blank",rel:"noopener noreferrer"},en=e("strong",null,"now stable",-1),nn=e("li",null,[n("Run Playwright against "),e("strong",null,"Google Chrome"),n(" and "),e("strong",null,"Microsoft Edge"),n(" stable channels with the "),e("a",{href:"./browsers"},"new channels API"),n(".")],-1),an=e("li",null,[n("Chromium screenshots are "),e("strong",null,"fast"),n(" on Mac & Windows.")],-1),sn=t('<h4 id="bundled-browser-versions" tabindex="-1"><a class="header-anchor" href="#bundled-browser-versions" aria-hidden="true">#</a> Bundled Browser Versions</h4><ul><li>Chromium 90.0.4430.0</li><li>Mozilla Firefox 87.0b10</li><li>WebKit 14.2</li></ul><p>This version of Playwright was also tested against the following stable channels:</p><ul><li>Google Chrome 89</li><li>Microsoft Edge 89</li></ul><h4 id="new-apis-7" tabindex="-1"><a class="header-anchor" href="#new-apis-7" aria-hidden="true">#</a> New APIs</h4><ul><li><a href="./api/class-browsertype#browsertypelaunchoptions"><code>browserType.launch()</code></a> now accepts the new <code>&#39;channel&#39;</code> option. Read more in <a href="./browsers">our documentation</a>.</li></ul><h2 id="version-1-9" tabindex="-1"><a class="header-anchor" href="#version-1-9" aria-hidden="true">#</a> Version 1.9</h2>',7),tn=e("strong",null,"new GUI tool",-1),on=e("ul",null,[e("li",null,[e("strong",null,"Line-by-line debugging"),n(" of your Playwright scripts, with play, pause and step-through.")]),e("li",null,[n("Author new scripts by "),e("strong",null,"recording user actions"),n(".")]),e("li",null,[e("strong",null,"Generate element selectors"),n(" for your script by hovering over elements.")]),e("li",null,[n("Set the "),e("code",null,"PWDEBUG=1"),n(" environment variable to launch the Inspector")])],-1),ln=e("strong",null,"Pause script execution",-1),rn=e("code",null,"method: Page.pause",-1),cn=e("strong",null,"New has-text pseudo-class",-1),pn=e("code",null,':has-text("example")',-1),dn=e("code",null,'"example"',-1),un=e("strong",null,"Page dialogs are now auto-dismissed",-1),hn=e("code",null,"dialog",-1),gn={href:"https://github.com/microsoft/playwright-python",target:"_blank",rel:"noopener noreferrer"},mn=e("strong",null,"now stable",-1),bn=t('<h4 id="browser-versions-17" tabindex="-1"><a class="header-anchor" href="#browser-versions-17" aria-hidden="true">#</a> Browser Versions</h4><ul><li>Chromium 90.0.4421.0</li><li>Mozilla Firefox 86.0b10</li><li>WebKit 14.1</li></ul><h4 id="new-apis-8" tabindex="-1"><a class="header-anchor" href="#new-apis-8" aria-hidden="true">#</a> New APIs</h4><ul><li>[<code>method: Page.pause</code>].</li></ul><h2 id="version-1-8" tabindex="-1"><a class="header-anchor" href="#version-1-8" aria-hidden="true">#</a> Version 1.8</h2>',5),kn=e("code",null,":left-of()",-1),vn=e("code",null,":right-of()",-1),wn=e("code",null,":above()",-1),fn=e("code",null,":below()",-1),yn=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>playwright <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),_n=e("li",null,[n("["),e("code",null,"method: Page.selectOption"),n("] now waits for the options to be present.")],-1),xn=e("li",null,[n("New methods to "),e("a",{href:"./actionability#assertions"},"assert element state"),n(" like ["),e("code",null,"method: Page.isEditable"),n("].")],-1),qn=t('<h4 id="new-apis-9" tabindex="-1"><a class="header-anchor" href="#new-apis-9" aria-hidden="true">#</a> New APIs</h4><ul><li>[<code>method: ElementHandle.isChecked</code>].</li><li>[<code>method: ElementHandle.isDisabled</code>].</li><li>[<code>method: ElementHandle.isEditable</code>].</li><li>[<code>method: ElementHandle.isEnabled</code>].</li><li>[<code>method: ElementHandle.isHidden</code>].</li><li>[<code>method: ElementHandle.isVisible</code>].</li><li>[<code>method: Page.isChecked</code>].</li><li>[<code>method: Page.isDisabled</code>].</li><li>[<code>method: Page.isEditable</code>].</li><li>[<code>method: Page.isEnabled</code>].</li><li>[<code>method: Page.isHidden</code>].</li><li>[<code>method: Page.isVisible</code>].</li><li>New option <code>&#39;editable&#39;</code> in [<code>method: ElementHandle.waitForElementState</code>].</li></ul><h4 id="browser-versions-18" tabindex="-1"><a class="header-anchor" href="#browser-versions-18" aria-hidden="true">#</a> Browser Versions</h4><ul><li>Chromium 90.0.4392.0</li><li>Mozilla Firefox 85.0b5</li><li>WebKit 14.1</li></ul><h2 id="version-1-7" tabindex="-1"><a class="header-anchor" href="#version-1-7" aria-hidden="true">#</a> Version 1.7</h2>',5),Pn=e("strong",null,"New Java SDK",-1),An={href:"https://github.com/microsoft/playwright-java",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://github.com/microsoft/playwright",target:"_blank",rel:"noopener noreferrer"},Rn={href:"https://github.com/microsoft/playwright-python",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://github.com/microsoft/playwright-dotnet",target:"_blank",rel:"noopener noreferrer"},Vn=e("li",null,[e("strong",null,"Browser storage API"),n(": New convenience APIs to save and load browser storage state (cookies, local storage) to simplify automation scenarios with authentication.")],-1),Bn=e("strong",null,"New CSS selectors",-1),In=e("strong",null,"New website",-1),Nn={href:"https://playwright.dev/",target:"_blank",rel:"noopener noreferrer"},Ln={href:"https://v2.docusaurus.io/",target:"_blank",rel:"noopener noreferrer"},Mn=e("li",null,[e("strong",null,"Support for Apple Silicon"),n(": Playwright browser binaries for WebKit and Chromium are now built for Apple Silicon.")],-1),Fn=t('<h4 id="new-apis-10" tabindex="-1"><a class="header-anchor" href="#new-apis-10" aria-hidden="true">#</a> New APIs</h4><ul><li>[<code>method: BrowserContext.storageState</code>] to get current state for later reuse.</li><li><code>storageState</code> option in [<code>method: Browser.newContext</code>] and [<code>method: Browser.newPage</code>] to setup browser context state.</li></ul><h4 id="browser-versions-19" tabindex="-1"><a class="header-anchor" href="#browser-versions-19" aria-hidden="true">#</a> Browser Versions</h4><ul><li>Chromium 89.0.4344.0</li><li>Mozilla Firefox 84.0b9</li><li>WebKit 14.1</li></ul>',4);function Sn(En,zn){const s=l("ExternalLinkIcon"),o=l("RouterLink");return c(),p("div",null,[u,h,e("ul",null,[e("li",null,[e("p",null,[n("New assertion ["),g,n("] ensures that locator points to an element that intersects viewport, according to the "),e("a",m,[n("intersection observer API"),a(s)]),n(".")]),b])]),k,e("ul",null,[v,w,f,e("li",null,[n("Official "),a(o,{to:"/book/playwright/docker.html"},{default:i(()=>[n("docker images")]),_:1}),n(" now include Node 18 instead of Node 16.")])]),y,e("ul",null,[_,e("li",null,[n("["),x,n("] to locate by "),e("a",q,[n("ARIA role"),a(s)]),n(", "),e("a",P,[n("ARIA attributes"),a(s)]),n(" and "),e("a",A,[n("accessible name"),a(s)]),n(".")]),C]),R,T,V,e("p",null,[n("We rewrote our Getting Started docs to be more end-to-end testing focused. Check them out on "),e("a",B,[n("playwright.dev"),a(s)]),n(".")]),I,e("p",null,[n("Use the new methods ["),N,n("] or ["),L,n("] to serve matching responses from the "),e("a",M,[n("HAR"),a(s)]),n(" file:")]),F,e("ul",null,[e("li",null,[e("p",null,[n("Role selectors that allow selecting elements by their "),e("a",S,[n("ARIA role"),a(s)]),n(", "),e("a",E,[n("ARIA attributes"),a(s)]),n(" and "),e("a",z,[n("accessible name"),a(s)]),n(".")]),W,e("p",null,[n("Read more in "),a(o,{to:"/book/playwright/locators.html#locate-by-role"},{default:i(()=>[n("our documentation")]),_:1}),n(".")])]),H]),D,G,e("ul",null,[e("li",null,[e("p",null,[n("New role selectors that allow selecting elements by their "),e("a",K,[n("ARIA role"),a(s)]),n(", "),e("a",U,[n("ARIA attributes"),a(s)]),n(" and "),e("a",O,[n("accessible name"),a(s)]),n(".")]),j,e("p",null,[n("Read more in "),a(o,{to:"/book/playwright/locators.html#locate-by-role"},{default:i(()=>[n("our documentation")]),_:1}),n(".")])]),J]),Y,e("p",null,[n("Playwright Trace Viewer is now "),Q,n(" at "),e("a",Z,[n("https://trace.playwright.dev"),a(s)]),n("! Just drag-and-drop your "),X,n(" file to inspect its contents.")]),e("blockquote",null,[e("p",null,[$,n(": trace files are not uploaded anywhere; "),e("a",ee,[n("trace.playwright.dev"),a(s)]),n(" is a "),e("a",ne,[n("progressive web application"),a(s)]),n(" that processes traces locally.")])]),ae,e("p",null,[n("By using "),e("a",se,[te,a(s)]),n(" you are now able to scroll vertically or horizontally.")]),oe,ie,e("ul",null,[e("li",null,[e("a",le,[n("Request.all_headers()"),a(s)])]),e("li",null,[e("a",re,[n("Request.headers_array()"),a(s)])]),e("li",null,[e("a",ce,[n("Request.header_value(name: str)"),a(s)])]),e("li",null,[e("a",pe,[n("Response.all_headers()"),a(s)])]),e("li",null,[e("a",de,[n("Response.headers_array()"),a(s)])]),e("li",null,[e("a",ue,[n("Response.header_value(name: str)"),a(s)])]),e("li",null,[e("a",he,[n("Response.header_values(name: str)"),a(s)])])]),ge,e("p",null,[n("Its now possible to emulate the "),me,n(" CSS media feature by passing it in the "),e("a",be,[n("context options"),a(s)]),n(" or calling "),e("a",ke,[n("Page.emulate_media()"),a(s)]),n(".")]),ve,e("ul",null,[e("li",null,[e("a",we,[n("Page.route()"),a(s)]),n(" accepts new "),fe,n(" option to specify how many times this route should be matched.")]),e("li",null,[e("a",ye,[n("Page.set_checked(selector: str, checked: bool)"),a(s)]),n(" and "),e("a",_e,[n("Locator.set_checked(selector: str, checked: bool)"),a(s)]),n(" was introduced to set the checked state of a checkbox.")]),e("li",null,[e("a",xe,[n("Request.sizes()"),a(s)]),n(" Returns resource size information for given http request.")]),e("li",null,[e("a",qe,[n("BrowserContext.tracing.start_chunk()"),a(s)]),n(" - Start a new trace chunk.")]),e("li",null,[e("a",Pe,[n("BrowserContext.tracing.stop_chunk()"),a(s)]),n(" - Stops a new trace chunk.")])]),Ae,e("h4",Ce,[Re,n(" 🧩 Experimental "),a(o,{to:"/book/playwright/other-locators.html#react-locator"},{default:i(()=>[Te]),_:1}),n(" and "),a(o,{to:"/book/playwright/other-locators.html#vue-locator"},{default:i(()=>[Ve]),_:1}),n(" selector engines")]),e("p",null,[n("React and Vue selectors allow selecting elements by its component name and/or property values. The syntax is very similar to "),e("a",Be,[n("attribute selectors"),a(s)]),n(" and supports all attribute selector operators.")]),Ie,e("p",null,[n("Learn more in the "),a(o,{to:"/book/playwright/other-locators.html#react-locator"},{default:i(()=>[n("react selectors documentation")]),_:1}),n(" and the "),a(o,{to:"/book/playwright/other-locators.html#vue-locator"},{default:i(()=>[n("vue selectors documentation")]),_:1}),n(".")]),e("h4",Ne,[Le,n(" ✨ New "),a(o,{to:"/book/playwright/other-locators.html#n-th-element-locator"},{default:i(()=>[Me]),_:1}),n(" and "),a(o,{to:"/book/playwright/other-locators.html#css-matching-only-visible-elements"},{default:i(()=>[Fe]),_:1}),n(" selector engines")]),e("ul",null,[e("li",null,[a(o,{to:"/book/playwright/other-locators.html#n-th-element-locator"},{default:i(()=>[Se]),_:1}),n(" selector engine is equivalent to the "),Ee,n(" pseudo class, but could be combined with other selector engines.")]),e("li",null,[a(o,{to:"/book/playwright/other-locators.html#css-matching-only-visible-elements"},{default:i(()=>[ze]),_:1}),n(" selector engine is equivalent to the "),We,n(" pseudo class, but could be combined with other selector engines.")])]),He,e("ul",null,[e("li",null,[a(o,{to:"/book/playwright/intro-python.html"},{default:i(()=>[n("Intro")]),_:1})]),e("li",null,[a(o,{to:"/book/playwright/auth.html"},{default:i(()=>[n("Authentication")]),_:1})]),e("li",null,[a(o,{to:"/book/playwright/chrome-extensions.html"},{default:i(()=>[n("Chrome Extensions")]),_:1})])]),De,e("p",null,[a(o,{to:"/book/playwright/trace-viewer.html"},{default:i(()=>[n("Playwright Trace Viewer")]),_:1}),n(" is a new GUI tool that helps exploring recorded Playwright traces after the script ran. Playwright traces let you examine:")]),Ge,e("p",null,[n("👉 Read more in "),a(o,{to:"/book/playwright/trace-viewer.html"},{default:i(()=>[n("trace viewer documentation")]),_:1}),n(".")]),Ke,e("p",null,[n("🎥 New video: "),e("a",Ue,[n("Playwright: A New Test Automation Framework for the Modern Web"),a(s)]),n(" ("),e("a",Oe,[n("slides"),a(s)]),n(")")]),e("ul",null,[je,Je,Ye,e("li",null,[Qe,n(" to "),e("a",Ze,[n("applitools"),a(s)]),n(" for hosting the event and inviting us!")])]),Xe,e("ul",null,[e("li",null,[e("a",$e,[n("Playwright for Java v1.10"),a(s)]),n(" is "),en,n("!")]),nn,an]),sn,e("ul",null,[e("li",null,[e("p",null,[a(o,{to:"/book/playwright/debug.html"},{default:i(()=>[n("Playwright Inspector")]),_:1}),n(" is a "),tn,n(" to author and debug your tests.")]),on]),e("li",null,[e("p",null,[ln,n(" with ["),rn,n("] in headed mode. Pausing the page launches "),a(o,{to:"/book/playwright/debug.html"},{default:i(()=>[n("Playwright Inspector")]),_:1}),n(" for debugging.")])]),e("li",null,[e("p",null,[cn,n(" for CSS selectors. "),pn,n(" matches any element containing "),dn,n(" somewhere inside, possibly in a child or a descendant element. See "),a(o,{to:"/book/playwright/other-locators.html#css-matching-by-text"},{default:i(()=>[n("more examples")]),_:1}),n(".")])]),e("li",null,[e("p",null,[un,n(" during execution, unless a listener for "),hn,n(" event is configured. "),a(o,{to:"/book/playwright/dialogs.html"},{default:i(()=>[n("Learn more")]),_:1}),n(" about this.")])]),e("li",null,[e("p",null,[e("a",gn,[n("Playwright for Python"),a(s)]),n(" is "),mn,n(" with an idiomatic snake case API and pre-built "),a(o,{to:"/book/playwright/docker.html"},{default:i(()=>[n("Docker image")]),_:1}),n(" to run tests in CI/CD.")])])]),bn,e("ul",null,[e("li",null,[a(o,{to:"/book/playwright/other-locators.html#css-matching-elements-based-on-layout"},{default:i(()=>[n("Selecting elements based on layout")]),_:1}),n(" with "),kn,n(", "),vn,n(", "),wn,n(" and "),fn,n(".")]),e("li",null,[n("Playwright now includes "),a(o,{to:"/book/playwright/cli.html"},{default:i(()=>[n("command line interface")]),_:1}),n(", former playwright-cli."),yn]),_n,xn]),qn,e("ul",null,[e("li",null,[Pn,n(": "),e("a",An,[n("Playwright for Java"),a(s)]),n(" is now on par with "),e("a",Cn,[n("JavaScript"),a(s)]),n(", "),e("a",Rn,[n("Python"),a(s)]),n(" and "),e("a",Tn,[n(".NET bindings"),a(s)]),n(".")]),Vn,e("li",null,[Bn,n(": We heard your feedback for more flexible selectors and have revamped the selectors implementation. Playwright 1.7 introduces "),a(o,{to:"/book/playwright/other-locators.html#css-locator"},{default:i(()=>[n("new CSS extensions")]),_:1}),n(" and there's more coming soon.")]),e("li",null,[In,n(": The docs website at "),e("a",Nn,[n("playwright.dev"),a(s)]),n(" has been updated and is now built with "),e("a",Ln,[n("Docusaurus"),a(s)]),n(".")]),Mn]),Fn])}const Dn=r(d,[["render",Sn],["__file","release-notes-python.html.vue"]]);export{Dn as default};
