import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c as d,a as e,b as t,d as a,w as l,f as n}from"./app-3f278ba4.js";const c={},u=e("p",null,"Here are the most common options available in the command line.",-1),p=n(`<li><p>Run all the tests</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Run a single test file</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token builtin class-name">test</span> tests/todo-page.spec.ts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Run a set of test files</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token builtin class-name">test</span> tests/todo-page/ tests/landing-page/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Run files that have <code>my-spec</code> or <code>my-spec-2</code> in the file name</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token builtin class-name">test</span> my-spec my-spec-2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Run tests that are in line 42 in my-spec.ts</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token builtin class-name">test</span> my-spec.ts:42
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Run the test with the title</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token builtin class-name">test</span> <span class="token parameter variable">-g</span> <span class="token string">&quot;add a todo item&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Run tests in headed browsers</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token builtin class-name">test</span> <span class="token parameter variable">--headed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Run all the tests against a specific project</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token builtin class-name">test</span> <span class="token parameter variable">--project</span><span class="token operator">=</span>chromium
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,8),h=n(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token builtin class-name">test</span> <span class="token parameter variable">--workers</span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),m=n(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token builtin class-name">test</span> <span class="token parameter variable">--reporter</span><span class="token operator">=</span>dot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),g=n(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token builtin class-name">test</span> <span class="token parameter variable">--debug</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),b=n(`<li><p>Ask for help</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright <span class="token builtin class-name">test</span> <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,1),f=e("h2",{id:"reference",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),t(" Reference")],-1),v=n("<li><p><code>--headed</code>: Run tests in headed browsers. Useful for debugging.</p></li><li><p><code>--browser</code>: Run test in a specific browser. Available options are <code>&quot;chromium&quot;</code>, <code>&quot;firefox&quot;</code>, <code>&quot;webkit&quot;</code> or <code>&quot;all&quot;</code> to run tests in all three browsers at the same time.</p></li><li><p><code>--debug</code>: Run tests with Playwright Inspector. Shortcut for <code>PWDEBUG=1</code> environment variable and <code>--timeout=0 --max-failures=1 --headed --workers=1</code> options.</p></li><li><p><code>-c &lt;file&gt;</code> or <code>--config &lt;file&gt;</code>: Configuration file. If not passed, defaults to <code>playwright.config.ts</code> or <code>playwright.config.js</code> in the current directory.</p></li><li><p><code>-c &lt;dir&gt;</code> or <code>--config &lt;dir&gt;</code>: Directory with the tests to run without configuration file.</p></li><li><p><code>--forbid-only</code>: Whether to disallow <code>test.only</code>. Useful on CI.</p></li><li><p><code>-g &lt;grep&gt;</code> or <code>--grep &lt;grep&gt;</code>: Only run tests matching this regular expression. For example, this will run <code>&#39;should add to cart&#39;</code> when passed <code>-g &quot;add to cart&quot;</code>.</p></li><li><p><code>--grep-invert &lt;grep&gt;</code>: Only run tests <strong>not</strong> matching this regular expression. The opposite of <code>--grep</code>.</p></li>",8),_=e("code",null,"--global-timeout <number>",-1),w=n("<li><p><code>--list</code>: List all the tests, but do not run them.</p></li><li><p><code>--max-failures &lt;N&gt;</code> or <code>-x</code>: Stop after the first <code>N</code> test failures. Passing <code>-x</code> stops after the first failure.</p></li><li><p><code>--output &lt;dir&gt;</code>: Directory for artifacts produced by tests, defaults to <code>test-results</code>.</p></li>",3),k=e("code",null,"--project <name>",-1),y=e("li",null,[e("p",null,[e("code",null,"--quiet"),t(": Whether to suppress stdout and stderr from the tests.")])],-1),x=e("li",null,[e("p",null,[e("code",null,"--repeat-each <N>"),t(": Run each test "),e("code",null,"N"),t(" times, defaults to one.")])],-1),R=e("code",null,"--reporter <reporter>",-1),q=e("code",null,"dot",-1),j=e("code",null,"line",-1),C=e("code",null,"list",-1),N=e("code",null,"--retries <number>",-1),L=e("code",null,"--shard <shard>",-1),T=e("code",null,"current/all",-1),W=e("code",null,"3/5",-1),B=e("code",null,"--timeout <number>",-1),D=e("li",null,[e("p",null,[e("code",null,"--trace <mode>"),t(": Force tracing mode, can be "),e("code",null,"on"),t(", "),e("code",null,"off"),t(", "),e("code",null,"on-first-retry"),t(", "),e("code",null,"retain-on-failure")])],-1),P=e("code",null,"--ignore-snapshots",-1),S=e("code",null,"--update-snapshots",-1),U=e("code",null,"-u",-1),I=e("code",null,"--workers <number>",-1),V=e("code",null,"-j <number>",-1);function F(O,z){const s=i("RouterLink");return r(),d("div",null,[u,e("ul",null,[p,e("li",null,[e("p",null,[t("Disable "),a(s,{to:"/book/playwright/test-parallel.html"},{default:l(()=>[t("parallelization")]),_:1})]),h]),e("li",null,[e("p",null,[t("Choose a "),a(s,{to:"/book/playwright/test-reporters.html"},{default:l(()=>[t("reporter")]),_:1})]),m]),e("li",null,[e("p",null,[t("Run in debug mode with "),a(s,{to:"/book/playwright/debug.html"},{default:l(()=>[t("Playwright Inspector")]),_:1})]),g]),b]),f,e("p",null,[t("Complete set of Playwright Test options is available in the "),a(s,{to:"/book/playwright/test-advanced.html"},{default:l(()=>[t("configuration file")]),_:1}),t(". Following options can be passed to a command line and take a priority over the configuration file:")]),e("ul",null,[v,e("li",null,[e("p",null,[_,t(": Total timeout for the whole test run in milliseconds. By default, there is no global timeout. Learn more about "),a(s,{to:"/book/playwright/test-timeouts.html"},{default:l(()=>[t("various timeouts")]),_:1}),t(".")])]),w,e("li",null,[e("p",null,[k,t(": Only run tests from one of the specified "),a(s,{to:"/book/playwright/test-advanced.html#projects"},{default:l(()=>[t("projects")]),_:1}),t(". Defaults to running all projects defined in the configuration file.")])]),y,x,e("li",null,[e("p",null,[R,t(": Choose a reporter: minimalist "),q,t(", concise "),j,t(" or detailed "),C,t(". See "),a(s,{to:"/book/playwright/test-reporters.html"},{default:l(()=>[t("reporters")]),_:1}),t(" for more information.")])]),e("li",null,[e("p",null,[N,t(": The maximum number of "),a(s,{to:"/book/playwright/test-retries.html#retries"},{default:l(()=>[t("retries")]),_:1}),t(" for flaky tests, defaults to zero (no retries).")])]),e("li",null,[e("p",null,[L,t(": "),a(s,{to:"/book/playwright/test-parallel.html#shard-tests-between-multiple-machines"},{default:l(()=>[t("Shard")]),_:1}),t(" tests and execute only selected shard, specified in the form "),T,t(", 1-based, for example "),W,t(".")])]),e("li",null,[e("p",null,[B,t(": Maximum timeout in milliseconds for each test, defaults to 30 seconds. Learn more about "),a(s,{to:"/book/playwright/test-timeouts.html"},{default:l(()=>[t("various timeouts")]),_:1}),t(".")])]),D,e("li",null,[e("p",null,[P,t(": Whether to ignore "),a(s,{to:"/book/playwright/test-snapshots.html"},{default:l(()=>[t("snapshots")]),_:1}),t(". Use this when snapshot expectations are known to be different, e.g. running tests on Linux against Windows screenshots.")])]),e("li",null,[e("p",null,[S,t(" or "),U,t(": Whether to update "),a(s,{to:"/book/playwright/test-snapshots.html"},{default:l(()=>[t("snapshots")]),_:1}),t(" with actual results instead of comparing them. Use this when snapshot expectations have changed.")])]),e("li",null,[e("p",null,[I,t(" or "),V,t(": The maximum number of concurrent worker processes that run in "),a(s,{to:"/book/playwright/test-parallel.html"},{default:l(()=>[t("parallel")]),_:1}),t(".")])])])])}const G=o(c,[["render",F],["__file","test-cli.html.vue"]]);export{G as default};
