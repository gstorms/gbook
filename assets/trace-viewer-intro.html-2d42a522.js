import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as u,a as n,d as s,w as e,b as a,f as d}from"./app-207e7d61.js";const h={},k=n("p",null,"Playwright Trace Viewer is a GUI tool that lets you explore recorded Playwright traces of your tests meaning you can go back and forward through each action of your test and visually see what was happening during each action.",-1),g=n("p",null,[n("strong",null,"You will learn")],-1),m=n("h2",{id:"recording-a-trace",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#recording-a-trace","aria-hidden":"true"},"#"),a(" Recording a Trace")],-1),v=n("code",null,"trace.zip",-1),b=n("code",null,"on-first-retry",-1),w=n("code",null,"retries",-1),y=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// @ts-check"),a(`

`),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token punctuation"},"{"),a(" defineConfig "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'@playwright/test'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

module`),n("span",{class:"token punctuation"},"."),a("exports "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"defineConfig"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"retries"),n("span",{class:"token operator"},":"),a(" process"),n("span",{class:"token punctuation"},"."),a("env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"CI"),a(),n("span",{class:"token operator"},"?"),a(),n("span",{class:"token number"},"2"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token comment"},"// set to 2 when running on CI"),a(`
  `),n("span",{class:"token operator"},"..."),a(`
  `),n("span",{class:"token literal-property property"},"use"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token literal-property property"},"trace"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'on-first-retry'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token comment"},"// record traces on first retry of each test"),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token punctuation"},"{"),a(" defineConfig "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'@playwright/test'"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token function"},"defineConfig"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"retries"),n("span",{class:"token operator"},":"),a(" process"),n("span",{class:"token punctuation"},"."),a("env"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"CI"),a(),n("span",{class:"token operator"},"?"),a(),n("span",{class:"token number"},"2"),a(),n("span",{class:"token operator"},":"),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token comment"},"// set to 2 when running on CI"),a(`
  `),n("span",{class:"token operator"},"..."),a(`
  `),n("span",{class:"token literal-property property"},"use"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token literal-property property"},"trace"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'on-first-retry'"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token comment"},"// record traces on first retry of each test"),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("code",null,"--trace on",-1),T=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[a("npx playwright "),n("span",{class:"token builtin class-name"},"test"),a(),n("span",{class:"token parameter variable"},"--trace"),a(` on
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),x=n("div",{class:"hint-container note"},[n("p",{class:"hint-container-title"},"æ³¨"),n("p",null,[a("The "),n("code",null,"trace-on"),a(" flag was introduced in Playwright v1.25. Check your "),n("code",null,"package.json"),a(" to make sure you have at least this version of Playwright installed.")])],-1),C=d(`<p>@tab python<br> Traces can be recorded using the [<code>property: BrowserContext.tracing</code>] API as follows:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Start tracing before creating / navigating a page.</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span>tracing<span class="token punctuation">.</span>start<span class="token punctuation">(</span>screenshots<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> snapshots<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> sources<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://playwright.dev&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Stop tracing and export it into a zip archive.</span>
<span class="token keyword">await</span> context<span class="token punctuation">.</span>tracing<span class="token punctuation">.</span>stop<span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;trace.zip&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>browser <span class="token operator">=</span> chromium<span class="token punctuation">.</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span>
context <span class="token operator">=</span> browser<span class="token punctuation">.</span>new_context<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Start tracing before creating / navigating a page.</span>
context<span class="token punctuation">.</span>tracing<span class="token punctuation">.</span>start<span class="token punctuation">(</span>screenshots<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> snapshots<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> sources<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

page <span class="token operator">=</span> context<span class="token punctuation">.</span>new_page<span class="token punctuation">(</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token string">&quot;https://playwright.dev&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Stop tracing and export it into a zip archive.</span>
context<span class="token punctuation">.</span>tracing<span class="token punctuation">.</span>stop<span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;trace.zip&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This will record the trace and place it into the file named <code>trace.zip</code>.<br> :::</p><h2 id="opening-the-html-report" tabindex="-1"><a class="header-anchor" href="#opening-the-html-report" aria-hidden="true">#</a> Opening the HTML Report</h2><p>The HTML report shows you a report of all your tests that have been ran and on which browsers as well as how long they took. Tests can be filtered by passed tests, failed, flakey or skipped tests. You can also search for a particular test. Clicking on a test will open the detailed view where you can see more information on your tests such as the errors, the test steps and the trace.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx playwright show-report
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>In the HTML report click on the trace icon next to the test name file name to directly open the trace for the required test.</p><img width="1404" alt="Playwright HTML Report" src="https://user-images.githubusercontent.com/13063165/212745273-c19487d2-bc5e-483f-9f67-f9c9e5413ff4.png"><p>You can also click open the detailed view of the test and scroll down to the <code>&#39;Traces&#39;</code> tab and open the trace by clicking on the trace screenshot.</p><img width="1404" alt="Playwright HTML Report detailed view" src="https://user-images.githubusercontent.com/13063165/212745663-124dd56a-5bd3-4eac-94f4-971790587b13.png">`,11),I=n("h2",{id:"viewing-the-trace",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#viewing-the-trace","aria-hidden":"true"},"#"),a(" Viewing the Trace")],-1),H=n("p",null,"View traces of your test by clicking through each action or hovering using the timeline and see the state of the page before and after the action. Inspect the log, source and network during each step of the test. The trace viewer creates a DOM snapshot so you can fully interact with it, open devtools etc.",-1),V=n("img",{width:"1976",alt:"Playwright Trace Viewer",src:"https://user-images.githubusercontent.com/13063165/212869694-61368b16-f176-4083-bbc2-fc85b95131f0.png"},null,-1);function q(j,L){const t=o("RouterLink"),c=o("Tabs");return l(),u("div",null,[k,g,n("ul",null,[n("li",null,[s(t,{to:"/book/playwright/trace-viewer-intro.html#recording-a-trace"},{default:e(()=>[a("How to record a trace")]),_:1})]),n("li",null,[s(t,{to:"/book/playwright/trace-viewer-intro.html#opening-the-html-report"},{default:e(()=>[a("How to open the HTML report")]),_:1})]),n("li",null,[s(t,{to:"/book/playwright/trace-viewer-intro.html#viewing-the-trace"},{default:e(()=>[a("How to open and view the trace")]),_:1})])]),m,s(c,{id:"26",data:[{id:"js"}]},{title0:e(({value:r,isActive:i})=>[a("js")]),tab0:e(({value:r,isActive:i})=>[n("p",null,[a("By default the "),s(t,{to:"/book/playwright/test-configuration.html#record-test-trace"},{default:e(()=>[a("playwright.config")]),_:1}),a(" file will contain the configuration needed to create a "),v,a(" file for each test. Traces are setup to run "),b,a(" meaning they will be run on the first retry of a failed test. Also "),w,a(" are set to 2 when running on CI and 0 locally. This means the traces will be recorded on the first retry of a failed test but not on the first run and not on the second retry.")]),y,f,n("p",null,[a("To learn more about available options to record a trace check out our detailed guide on "),s(t,{to:"/book/playwright/trace-viewer.html"},{default:e(()=>[a("Trace Viewer")]),_:1}),a(".")]),n("p",null,[a("Traces are normally run in a Continuous Integration(CI) environment as locally you can use "),s(t,{to:"/book/playwright/debug.html"},{default:e(()=>[a("debugging")]),_:1}),a(" methods to debug tests. However should you want to run traces locally you can force tracing to be on with "),_,a(".")]),T,x]),_:1}),C,n("p",null,[a("To learn more about reporters check out our detailed guide on reporters including the "),s(t,{to:"/book/playwright/test-reporters.html#html-reporter"},{default:e(()=>[a("HTML Reporter")]),_:1}),a(".")]),I,H,V,n("p",null,[a("To learn more about traces check out our detailed guide on "),s(t,{to:"/book/playwright/trace-viewer.html"},{default:e(()=>[a("Trace Viewer")]),_:1}),a(".")])])}const R=p(h,[["render",q],["__file","trace-viewer-intro.html.vue"]]);export{R as default};
