import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as e,f as s}from"./app-d0fb0332.js";const r={},i=s(`<h1 id="修改yarn的全局安装和缓存位置" tabindex="-1"><a class="header-anchor" href="#修改yarn的全局安装和缓存位置" aria-hidden="true">#</a> 修改Yarn的全局安装和缓存位置</h1><p>在CMD命令行中执行</p><h3 id="_1-改变-yarn-全局安装位置" tabindex="-1"><a class="header-anchor" href="#_1-改变-yarn-全局安装位置" aria-hidden="true">#</a> 1.改变 yarn 全局安装位置</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> config  <span class="token builtin class-name">set</span> global-folder <span class="token string">&quot;你的磁盘路径&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后你会在你的用户目录找到 <code>.yarnrc</code> 的文件，打开它，找到 <code>global-folder</code> ，改为 <code>--global-folder</code></p><h5 id="这里是我的路径" tabindex="-1"><a class="header-anchor" href="#这里是我的路径" aria-hidden="true">#</a> 这里是我的路径</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> config  <span class="token builtin class-name">set</span> global-folder <span class="token string">&quot;D:\\Software\\yarn\\global&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-改变-yarn-缓存位置" tabindex="-1"><a class="header-anchor" href="#_2-改变-yarn-缓存位置" aria-hidden="true">#</a> 2. 改变 yarn 缓存位置</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> cache-folder <span class="token string">&quot;你的磁盘路径&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="这里是我的路径-1" tabindex="-1"><a class="header-anchor" href="#这里是我的路径-1" aria-hidden="true">#</a> 这里是我的路径</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> cache-folder <span class="token string">&quot;D:\\Software\\yarn<span class="token entity" title="\\c">\\c</span>ache&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在我们使用 全局安装 包的时候，会在 “D:\\Software\\yarn\\global” 下 生成 node_modules.bin 目录</p><p>我们需要将 D:\\Software\\yarn\\global\\node_modules.bin 整个目录 添加到系统环境变量中去，否则通过yarn 添加的全局包 在cmd 中是找不到的。</p><h3 id="检查当前yarn-的-bin的-位置" tabindex="-1"><a class="header-anchor" href="#检查当前yarn-的-bin的-位置" aria-hidden="true">#</a> 检查当前yarn 的 bin的 位置</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> global bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="检查当前-yarn-的-全局安装位置" tabindex="-1"><a class="header-anchor" href="#检查当前-yarn-的-全局安装位置" aria-hidden="true">#</a> 检查当前 yarn 的 全局安装位置</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> global <span class="token function">dir</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,17),d=[i];function l(c,o){return n(),e("div",null,d)}const u=a(r,[["render",l],["__file","修改Yarn的全局安装和缓存位置.html.vue"]]);export{u as default};
