import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as c,c as u,a as s,b as n,d as t,f as p}from"./app-207e7d61.js";const l={},i=s("h1",{id:"在-flask-sqlalchemy-中联表查询",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#在-flask-sqlalchemy-中联表查询","aria-hidden":"true"},"#"),n(" 在-Flask-SQLAlchemy-中联表查询")],-1),k={href:"http://www.sqlalchemy.org/",target:"_blank",rel:"noopener noreferrer"},r={href:"https://en.wikipedia.org/wiki/Object-relational_mapping",target:"_blank",rel:"noopener noreferrer"},d={href:"http://flask-sqlalchemy.pocoo.org/",target:"_blank",rel:"noopener noreferrer"},m={href:"http://flask.pocoo.org/",target:"_blank",rel:"noopener noreferrer"},b=p(`<p>本篇介绍我在使用 Flask-SQLAlchemy 2.1 时进行联表查询的一些经验</p><h2 id="表定义" tabindex="-1"><a class="header-anchor" href="#表定义" aria-hidden="true">#</a> 表定义</h2><hr><p>这里有两个表，account 表保存帐号 ID 和昵称，bind 表保存 account 之间的绑定关系。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 省略了外键定义，请自行脑补</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> account
<span class="token punctuation">(</span>
	gameuid <span class="token keyword">int</span> <span class="token keyword">auto_increment</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
    nickname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">34</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> bind
<span class="token punctuation">(</span>
	bindid <span class="token keyword">int</span> <span class="token keyword">auto_increment</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
	fromid <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
	toid <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应的 Model 如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Account</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    __tablename__ <span class="token operator">=</span> <span class="token string">&#39;account&#39;</span>
    gameuid <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>INT<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> autoincrement<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    nickname <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>VARCHAR<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> unique<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;&lt;Account %r&gt;&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>gameuid<span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Bind</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    __tablename__ <span class="token operator">=</span> <span class="token string">&#39;bind&#39;</span>
    bindid <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>BIGINT<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> autoincrement<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token comment"># 绑定者和被绑定者的 gameuid</span>
    fromid <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>BIGINT<span class="token punctuation">,</span> db<span class="token punctuation">.</span>ForeignKey<span class="token punctuation">(</span><span class="token string">&#39;account.gameuid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    toid <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>BIGINT<span class="token punctuation">,</span> db<span class="token punctuation">.</span>ForeignKey<span class="token punctuation">(</span><span class="token string">&#39;account.gameuid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;&lt;Bind %r.%r&gt;&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>fromid<span class="token punctuation">,</span> self<span class="token punctuation">.</span>toid<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关联查询" tabindex="-1"><a class="header-anchor" href="#关联查询" aria-hidden="true">#</a> 关联查询</h2><hr><p>先来看一个简单的例子：查询 gameuid 1000 账号下绑定的所有帐号。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>bindid<span class="token punctuation">,</span> Bind<span class="token punctuation">.</span>fromid<span class="token punctuation">,</span> Bind<span class="token punctuation">.</span>toid<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>gameuid<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>nickname<span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    <span class="token builtin">filter</span><span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>toid <span class="token operator">==</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    <span class="token builtin">filter</span><span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>fromid <span class="token operator">==</span> Account<span class="token punctuation">.</span>gameuid<span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    <span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10001</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">10001</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10001&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10002</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">10002</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10002&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10003</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">10003</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10003&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10004</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">10004</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10004&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10005</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">10005</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10005&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">10006</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">10006</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10006&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10007</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">10007</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10007&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10008</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">10008</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10008&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10009</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">10009</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10009&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">11000</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">11000</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家11000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看一看生成的 SQL 语句：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>bindid<span class="token punctuation">,</span> Bind<span class="token punctuation">.</span>fromid<span class="token punctuation">,</span> Bind<span class="token punctuation">.</span>toid<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>gameuid<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>nickname<span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    <span class="token builtin">filter</span><span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>toid <span class="token operator">==</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    <span class="token builtin">filter</span><span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>fromid <span class="token operator">==</span> Account<span class="token punctuation">.</span>gameuid<span class="token punctuation">)</span><span class="token punctuation">)</span>
SELECT bind<span class="token punctuation">.</span>bindid AS bind_bindid<span class="token punctuation">,</span> bind<span class="token punctuation">.</span>fromid AS bind_fromid<span class="token punctuation">,</span> bind<span class="token punctuation">.</span>toid AS bind_toid<span class="token punctuation">,</span> account<span class="token punctuation">.</span>gameuid AS account_gameuid<span class="token punctuation">,</span> account<span class="token punctuation">.</span>nickname AS account_nickname
FROM bind<span class="token punctuation">,</span> account
WHERE bind<span class="token punctuation">.</span>toid <span class="token operator">=</span> <span class="token operator">%</span><span class="token punctuation">(</span>toid_1<span class="token punctuation">)</span>s AND bind<span class="token punctuation">.</span>fromid <span class="token operator">=</span> account<span class="token punctuation">.</span>gameuid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的联表查询使用的是 WHERE 语句。如果希望使用 JOIN 语句，可以这样写：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>bindid<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>gameuid<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>nickname<span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    join<span class="token punctuation">(</span>Account<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>gameuid<span class="token operator">==</span>Bind<span class="token punctuation">.</span>fromid<span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    <span class="token builtin">filter</span><span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>toid <span class="token operator">==</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
SELECT bind<span class="token punctuation">.</span>bindid AS bind_bindid<span class="token punctuation">,</span> bind<span class="token punctuation">.</span>fromid AS bind_fromid<span class="token punctuation">,</span> account<span class="token punctuation">.</span>gameuid AS account_gameuid<span class="token punctuation">,</span> account<span class="token punctuation">.</span>nickname AS account_nickname
FROM bind INNER JOIN account ON account<span class="token punctuation">.</span>gameuid <span class="token operator">=</span> bind<span class="token punctuation">.</span>fromid
WHERE bind<span class="token punctuation">.</span>toid <span class="token operator">=</span> <span class="token operator">%</span><span class="token punctuation">(</span>toid_1<span class="token punctuation">)</span>s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出，现在生成的 SQL 语句已经使用 JOIN 语句了。但上面的语意有点奇怪，既然已经在 query 中使用了 Bind 和 Account，后面再 join 一次 Account 总觉得有点多余。那么 SQLAlchemy 如何选择 JOIN 的时候谁先谁后呢？看看这个错误就知道了：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>bindid<span class="token punctuation">,</span> Bind<span class="token punctuation">.</span>fromid<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>gameuid<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>nickname<span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    join<span class="token punctuation">(</span>Bind<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>gameuid<span class="token operator">==</span>Bind<span class="token punctuation">.</span>fromid<span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    <span class="token builtin">filter</span><span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>toid <span class="token operator">==</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;&lt;console&gt;&quot;</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
  File <span class="token string">&quot;/Users/zrong/.pyvenv/api/lib/python3.6/site-packages/sqlalchemy/orm/query.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">1971</span><span class="token punctuation">,</span> <span class="token keyword">in</span> join
    from_joinpoint<span class="token operator">=</span>from_joinpoint<span class="token punctuation">)</span>
  File <span class="token string">&quot;&lt;string&gt;&quot;</span><span class="token punctuation">,</span> line <span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">in</span> _join
  File <span class="token string">&quot;/Users/zrong/.pyvenv/api/lib/python3.6/site-packages/sqlalchemy/orm/base.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">201</span><span class="token punctuation">,</span> <span class="token keyword">in</span> generate
    fn<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">**</span>kw<span class="token punctuation">)</span>
  File <span class="token string">&quot;/Users/zrong/.pyvenv/api/lib/python3.6/site-packages/sqlalchemy/orm/query.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">2115</span><span class="token punctuation">,</span> <span class="token keyword">in</span> _join
    outerjoin<span class="token punctuation">,</span> full<span class="token punctuation">,</span> create_aliases<span class="token punctuation">,</span> prop<span class="token punctuation">)</span>
  File <span class="token string">&quot;/Users/zrong/.pyvenv/api/lib/python3.6/site-packages/sqlalchemy/orm/query.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">2171</span><span class="token punctuation">,</span> <span class="token keyword">in</span> _join_left_to_right
    l_info<span class="token punctuation">.</span>selectable<span class="token punctuation">)</span>
sqlalchemy<span class="token punctuation">.</span>exc<span class="token punctuation">.</span>InvalidRequestError<span class="token punctuation">:</span> Can<span class="token string">&#39;t join table/selectable &#39;</span>bind&#39; to itself
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个错误显然说明，query 中参数的顺序很重要，第一个参数所代表的 table 就是 JOIN 时放在前面的那个 table。因此，此处 JOIN 的目标应该是 Account， 而不应该是 Bind 自身。</p><h2 id="分页支持" tabindex="-1"><a class="header-anchor" href="#分页支持" aria-hidden="true">#</a> 分页支持</h2><hr>`,20),g={href:"http://flask-sqlalchemy.pocoo.org/2.1/api/?highlight=paginate#flask.ext.sqlalchemy.BaseQuery.paginate",target:"_blank",rel:"noopener noreferrer"},v=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>bindid<span class="token punctuation">,</span> Bind<span class="token punctuation">.</span>fromid<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>gameuid<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>nickname<span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    join<span class="token punctuation">(</span>Bind<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>gameuid<span class="token operator">==</span>Bind<span class="token punctuation">.</span>fromid<span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    <span class="token builtin">filter</span><span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>toid <span class="token operator">==</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    paginate<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;&lt;console&gt;&quot;</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
AttributeError<span class="token punctuation">:</span> <span class="token string">&#39;Query&#39;</span> <span class="token builtin">object</span> has no attribute <span class="token string">&#39;paginate&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报错的原因是<code>db.session.query</code> 默认返回的是 <code>orm.Query</code> 对象，这个对象并不包含<code>paginate</code>方法。要解决这个问题，需要修改 Flask-SQLAlchemy 的源码。</p><p>找到 <code>SQLAlchemy</code> 对象的 <code>__init__</code> 定义，在其中加入 <code>session_options[&#39;query_cls&#39;] = BaseQuery</code> 即可：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> app<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> use_native_unicode<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> session_options<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> metadata<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">if</span> session_options <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        session_options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    session_options<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">&#39;scopefunc&#39;</span><span class="token punctuation">,</span> connection_stack<span class="token punctuation">.</span>__ident_func__<span class="token punctuation">)</span>
    self<span class="token punctuation">.</span>use_native_unicode <span class="token operator">=</span> use_native_unicode
    self<span class="token punctuation">.</span>app <span class="token operator">=</span> app

    <span class="token comment"># 使用 BaseQuery，这样可以让使用 db.session.query 等方法创建的 Query 对象支持 BaseQuery 的方法</span>
    session_options<span class="token punctuation">[</span><span class="token string">&#39;query_cls&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> BaseQuery
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="另一种关联查询语法" tabindex="-1"><a class="header-anchor" href="#另一种关联查询语法" aria-hidden="true">#</a> 另一种关联查询语法</h2><p>在 Flask-SQLAlchemy 提供的 Model 对象中，可以使用 <code>Model.query</code> 这样的语法来直接得到一个查询对象，这是由于 Flask-SQLAlchemy 中存在一个 <code>_QueryProperty</code> 类，每次调用 <code>Model.__get__</code>时，会自动生成一个基于当前 session 的 query 对象：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">_QueryProperty</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sa<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>sa <span class="token operator">=</span> sa

    <span class="token keyword">def</span> <span class="token function">__get__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            mapper <span class="token operator">=</span> orm<span class="token punctuation">.</span>class_mapper<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> mapper<span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token builtin">type</span><span class="token punctuation">.</span>query_class<span class="token punctuation">(</span>mapper<span class="token punctuation">,</span> session<span class="token operator">=</span>self<span class="token punctuation">.</span>sa<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> UnmappedClassError<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>Model.query</code>得到的这个 query 对象可以直接进行 JOIN 操作，得到的结果是 Model 对象。这样就方便多了：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Account<span class="token punctuation">.</span>query<span class="token punctuation">.</span>join<span class="token punctuation">(</span>Bind<span class="token punctuation">,</span> Bind<span class="token punctuation">.</span>fromid <span class="token operator">==</span> Account<span class="token punctuation">.</span>gameuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>toid <span class="token operator">==</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token operator">&lt;</span>Account <span class="token number">10001</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Account <span class="token number">10002</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Account <span class="token number">10003</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Account <span class="token number">10004</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Account <span class="token number">10005</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Account <span class="token number">10006</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Account <span class="token number">10007</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Account <span class="token number">10008</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Account <span class="token number">10009</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Account <span class="token number">10000</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Account <span class="token number">11000</span><span class="token operator">&gt;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>转换成 SQL 是这样的：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>SELECT account<span class="token punctuation">.</span>gameuid AS account_gameuid<span class="token punctuation">,</span> account<span class="token punctuation">.</span>nickname AS account_nickname
FROM account INNER JOIN bind ON bind<span class="token punctuation">.</span>fromid <span class="token operator">=</span> account<span class="token punctuation">.</span>gameuid
WHERE bind<span class="token punctuation">.</span>toid <span class="token operator">=</span> <span class="token operator">%</span><span class="token punctuation">(</span>toid_1<span class="token punctuation">)</span>s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出，这样的查询结果和使用 db.session.query 并没有什么不同。由于返回的是 Model 对象，使用上可能还更加方便了。</p><h2 id="筛选字段" tabindex="-1"><a class="header-anchor" href="#筛选字段" aria-hidden="true">#</a> 筛选字段</h2><hr>`,14),h=s("code",null,"Model.query.join",-1),y=s("code",null,"SQLAlchemy",-1),_={href:"http://docs.sqlalchemy.org/en/latest/orm/query.html#sqlalchemy.orm.query.Query.with_entities",target:"_blank",rel:"noopener noreferrer"},f=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Account<span class="token punctuation">.</span>query<span class="token punctuation">.</span>join<span class="token punctuation">(</span>Bind<span class="token punctuation">,</span> Bind<span class="token punctuation">.</span>fromid <span class="token operator">==</span> Account<span class="token punctuation">.</span>gameuid<span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    <span class="token builtin">filter</span><span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>toid <span class="token operator">==</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    with_entities<span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>bindid<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>nickname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10001&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10002&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10003&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10004&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10005&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10006&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10007&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10008&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10009&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">53</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家10000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">54</span><span class="token punctuation">,</span> <span class="token string">&#39;玩家11000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),A=s("code",null,"(2, '玩家10001')",-1),q=s("code",null,"<class 'sqlalchemy.util._collections.result'>",-1),B={href:"https://github.com/zzzeek/sqlalchemy/blob/master/lib/sqlalchemy/util/_collections.py#L22",target:"_blank",rel:"noopener noreferrer"},w=s("code",null,"keys()",-1),S=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> results <span class="token operator">=</span> Account<span class="token punctuation">.</span>query<span class="token punctuation">.</span>join<span class="token punctuation">(</span>Bind<span class="token punctuation">,</span> Bind<span class="token punctuation">.</span>fromid <span class="token operator">==</span> Account<span class="token punctuation">.</span>gameuid<span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    <span class="token builtin">filter</span><span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>toid <span class="token operator">==</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span> \\
    with_entities<span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>bindid<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>nickname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> result <span class="token keyword">in</span> results<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&#39;bindid&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;nickname&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;玩家10001&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;bindid&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;nickname&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;玩家10002&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;bindid&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;nickname&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;玩家10003&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;bindid&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;nickname&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;玩家10004&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;bindid&#39;</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;nickname&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;玩家10005&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;bindid&#39;</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;nickname&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;玩家10006&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;bindid&#39;</span><span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">&#39;nickname&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;玩家10007&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;bindid&#39;</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token string">&#39;nickname&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;玩家10008&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;bindid&#39;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;nickname&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;玩家10009&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;bindid&#39;</span><span class="token punctuation">:</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token string">&#39;nickname&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;玩家10000&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;bindid&#39;</span><span class="token punctuation">:</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token string">&#39;nickname&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;玩家11000&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),x={href:"https://github.com/zzzeek/sqlalchemy/blob/master/lib/sqlalchemy/util/_collections.py#L22",target:"_blank",rel:"noopener noreferrer"},N={href:"http://docs.sqlalchemy.org/en/latest/changelog/migration_10.html#new-keyedtuple-implementation-dramatically-faster",target:"_blank",rel:"noopener noreferrer"},Q=p(`<h2 id="获得多个-model-的记录" tabindex="-1"><a class="header-anchor" href="#获得多个-model-的记录" aria-hidden="true">#</a> 获得多个 Model 的记录</h2><hr><p>除了筛选字段外，还可以用另一个方法获取多个 Model 的记录。那就是，返回两个 Model 的所有字段：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Account<span class="token punctuation">,</span> Bind<span class="token punctuation">)</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>Bind<span class="token punctuation">,</span> Account<span class="token punctuation">.</span>gameuid<span class="token operator">==</span>Bind<span class="token punctuation">.</span>fromid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>Bind<span class="token punctuation">.</span>toid<span class="token operator">==</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Account <span class="token number">10001</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Bind <span class="token number">10001</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Account <span class="token number">10002</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Bind <span class="token number">10002</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Account <span class="token number">10004</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Bind <span class="token number">10004</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Account <span class="token number">10005</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Bind <span class="token number">10005</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Account <span class="token number">10006</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Bind <span class="token number">10006</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Account <span class="token number">10007</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Bind <span class="token number">10007</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Account <span class="token number">10008</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Bind <span class="token number">10008</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Account <span class="token number">10009</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Bind <span class="token number">10009</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Account <span class="token number">10000</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Bind <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Account <span class="token number">11000</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Bind <span class="token number">11000</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用上面的语法直接返回 Account 和 Bind 对象，可以进行更加灵活的操作。</p><h2 id="多表查询" tabindex="-1"><a class="header-anchor" href="#多表查询" aria-hidden="true">#</a> 多表查询</h2><hr><p>要联结超过 2 张以上的表，可以直接在 join 得到的结果之后链式调用 join 。也可以在 filter 的结果后面链式调用 join 。join 和 filter 返回的都是 query 对象，因此可以无限链式调用下去。</p><p>写完查询后，应该打印生成的 SQL 语句查看一下有没有性能问题。</p>`,9),j={href:"https://blog.zengrong.net/",target:"_blank",rel:"noopener noreferrer"},F=s("br",null,null,-1),L={href:"https://blog.zengrong.net/post/join-in-flash-sqlalchemy/",target:"_blank",rel:"noopener noreferrer"};function E(I,T){const a=e("ExternalLinkIcon");return c(),u("div",null,[i,s("p",null,[s("a",k,[n("SQLAlchemy"),t(a)]),n(" 是一个功能强大的 "),s("a",r,[n("ORM"),t(a)]),n(" 。 "),s("a",d,[n("Flask-SQLAlchemy"),t(a)]),n(" 是一个 "),s("a",m,[n("Flask"),t(a)]),n(" 插件，它让我们在 Flask 框架中使用 SQLAlchemy 变得更容易。")]),b,s("p",null,[n("上面的例子已经解决了大多数需求了。我们再来看看分页。在 Flask-SQLAlchemy 中封装了一个 "),s("a",g,[n("paginate"),t(a)]),n(" 方法，可以方便地将查询记录进行分页：")]),v,s("p",null,[n("如何使用 "),h,n(" 语法得到部分字段呢？这里可以使用 "),y,n(" 提供的 "),s("a",_,[n("with_entities"),t(a)]),n(" 方法：")]),f,s("p",null,[n("注意，列表中的项 "),A,n(" 并不是标准的 Python tuple。你如果查看它的类型，会发现一个奇怪的名称： "),q,n(" 。它是一个 "),s("a",B,[n("AbstractKeyedTuple"),t(a)]),n(" 对象，拥有一个 "),w,n(" 方法，这样可以很容易将其转换成 dict ：")]),S,s("p",null,[n("想了解 "),s("a",x,[n("AbstractKeyedTuple"),t(a)]),n(" ，可以看看这篇文档 "),s("a",N,[n("New KeyedTuple implementation dramatically faster"),t(a)]),n(" 。")]),Q,s("blockquote",null,[s("p",null,[n("原文作者："),s("a",j,[n("zrong"),t(a)]),F,n(" 原文链接："),s("a",L,[n("https://blog.zengrong.net/post/join-in-flash-sqlalchemy/"),t(a)])])])])}const O=o(l,[["render",E],["__file","在-Flask-SQLAlchemy-中联表查询.html.vue"]]);export{O as default};
