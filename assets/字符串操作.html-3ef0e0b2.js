const e=JSON.parse('{"key":"v-e4044044","path":"/book/wangdao/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C.html","title":"字符串操作","lang":"zh-CN","frontmatter":{"description":"本章介绍 Bash 字符串操作的语法。 字符串的长度 获取字符串长度的语法如下。下面是一个例子。大括号{}是必需的，否则 Bash 会将$#理解成脚本的参数个数，将变量名理解成文本。上面例子中，Bash 将$#和`myvar分开解释了。 子字符串 字符串提取子串的语法如下。上面语法的含义是返回变量$varname的子字符串，从位置offset开始（从0...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/book/wangdao/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"字符串操作"}],["meta",{"property":"og:description","content":"本章介绍 Bash 字符串操作的语法。 字符串的长度 获取字符串长度的语法如下。下面是一个例子。大括号{}是必需的，否则 Bash 会将$#理解成脚本的参数个数，将变量名理解成文本。上面例子中，Bash 将$#和`myvar分开解释了。 子字符串 字符串提取子串的语法如下。上面语法的含义是返回变量$varname的子字符串，从位置offset开始（从0..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-03T09:19:59.000Z"}],["meta",{"property":"article:author","content":"gstorms"}],["meta",{"property":"article:modified_time","content":"2023-07-03T09:19:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"字符串操作\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-03T09:19:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gstorms\\",\\"url\\":\\"https://gtcool.top\\"}]}"]]},"headers":[{"level":2,"title":"字符串的长度","slug":"字符串的长度","link":"#字符串的长度","children":[]},{"level":2,"title":"子字符串","slug":"子字符串","link":"#子字符串","children":[]},{"level":2,"title":"搜索和替换","slug":"搜索和替换","link":"#搜索和替换","children":[]},{"level":2,"title":"改变大小写","slug":"改变大小写","link":"#改变大小写","children":[]}],"git":{"createdTime":1688375999000,"updatedTime":1688375999000,"contributors":[{"name":"gstorms","email":"wangzx_2015@foxmail.com","commits":1}]},"readingTime":{"minutes":6.37,"words":1910},"filePathRelative":"book/wangdao/字符串操作.md","localizedDate":"2023年7月3日","autoDesc":true}');export{e as data};
