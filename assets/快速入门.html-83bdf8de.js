import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c as o,a as s,b as n,d as e,f as t}from"./app-207e7d61.js";const c={},u=t(`<h1 id="快速入门" tabindex="-1"><a class="header-anchor" href="#快速入门" aria-hidden="true">#</a> 快速入门</h1><p>我们将创建一个简单的允许管理员用户查看和编辑系统中的用户和组的API。</p><h2 id="项目设置" tabindex="-1"><a class="header-anchor" href="#项目设置" aria-hidden="true">#</a> 项目设置</h2><p>创建一个名为 <code>tutorial</code> 的新django项目，然后启动一个名为 <code>quickstart</code> 的新app。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建项目目录</span>
<span class="token function">mkdir</span> tutorial
<span class="token builtin class-name">cd</span> tutorial
<span class="token comment"># 创建一个virtualenv来隔离我们本地的包依赖关系</span>
virtualenv <span class="token function">env</span>
<span class="token builtin class-name">source</span> env/bin/activate  <span class="token comment"># 在Windows下使用 \`env\\Scripts\\activate\`</span>
<span class="token comment"># 在创建的虚拟环境中安装 Django 和 Django REST framework</span>
pip <span class="token function">install</span> django
pip <span class="token function">install</span> djangorestframework
<span class="token comment"># 创建一个新项目和一个单个应用</span>
django-admin.py startproject tutorial <span class="token builtin class-name">.</span>  <span class="token comment"># 注意结尾的&#39;.&#39;符号</span>
<span class="token builtin class-name">cd</span> tutorial
django-admin.py startapp quickstart
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在第一次同步你的数据库：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python manage.py migrate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们还要创建一个名为 <code>admin</code> 的初始用户，密码为 <code>password123</code>。我们稍后将在该示例中验证该用户。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python manage.py createsuperuser
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等你建立好一个数据库和初始用户，并准备好开始。打开应用程序的目录，我们就要开始编码了...</p><h2 id="serializers" tabindex="-1"><a class="header-anchor" href="#serializers" aria-hidden="true">#</a> Serializers</h2><p>首先我们要定义一些序列化程序。我们创建一个名为 <code>tutorial/quickstart/serializers.py</code>的文件，来用作我们的数据表示。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>models <span class="token keyword">import</span> User<span class="token punctuation">,</span> Group
<span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> serializers
<span class="token keyword">class</span> <span class="token class-name">UserSerializer</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span>HyperlinkedModelSerializer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        model <span class="token operator">=</span> User
        fields <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;groups&#39;</span><span class="token punctuation">)</span>
        
        
<span class="token keyword">class</span> <span class="token class-name">GroupSerializer</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span>HyperlinkedModelSerializer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        model <span class="token operator">=</span> Group
        fields <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，在这个例子中我们用到了超链接关系，使用 <code>HyperlinkedModelSerializer</code>。你还可以使用主键和各种其他关系，但超链接是好的RESTful设计。</p><h2 id="views" tabindex="-1"><a class="header-anchor" href="#views" aria-hidden="true">#</a> Views</h2><p>好了，我们接下来再写一些视图。打开 <code>tutorial/quickstart/views.py</code> 文件开始写代码了。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>models <span class="token keyword">import</span> User<span class="token punctuation">,</span> Group
<span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> viewsets
<span class="token keyword">from</span> tutorial<span class="token punctuation">.</span>quickstart<span class="token punctuation">.</span>serializers <span class="token keyword">import</span> UserSerializer<span class="token punctuation">,</span> GroupSerializer
<span class="token keyword">class</span> <span class="token class-name">UserViewSet</span><span class="token punctuation">(</span>viewsets<span class="token punctuation">.</span>ModelViewSet<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    允许用户查看或编辑的API路径。
    &quot;&quot;&quot;</span>
    queryset <span class="token operator">=</span> User<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>order_by<span class="token punctuation">(</span><span class="token string">&#39;-date_joined&#39;</span><span class="token punctuation">)</span>
    serializer_class <span class="token operator">=</span> UserSerializer
<span class="token keyword">class</span> <span class="token class-name">GroupViewSet</span><span class="token punctuation">(</span>viewsets<span class="token punctuation">.</span>ModelViewSet<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    允许组查看或编辑的API路径。
    &quot;&quot;&quot;</span>
    queryset <span class="token operator">=</span> Group<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    serializer_class <span class="token operator">=</span> GroupSerializer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不再写多个视图，我们将所有常见行为分组写到叫 <code>ViewSets</code> 的类中。<br> 如果我们需要，我们可以轻松地将这些细节分解为单个视图，但是使用viewsets可以使视图逻辑组织良好，并且非常简洁。</p><h2 id="urls" tabindex="-1"><a class="header-anchor" href="#urls" aria-hidden="true">#</a> URLs</h2><p>好的，现在我们在<code>tutorial/urls.py</code>中开始写连接API的URLs。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> django<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>urls <span class="token keyword">import</span> url<span class="token punctuation">,</span> include
<span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> routers
<span class="token keyword">from</span> tutorial<span class="token punctuation">.</span>quickstart <span class="token keyword">import</span> views
router <span class="token operator">=</span> routers<span class="token punctuation">.</span>DefaultRouter<span class="token punctuation">(</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span>register<span class="token punctuation">(</span><span class="token string">r&#39;users&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>UserViewSet<span class="token punctuation">)</span>
router<span class="token punctuation">.</span>register<span class="token punctuation">(</span><span class="token string">r&#39;groups&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>GroupViewSet<span class="token punctuation">)</span>
<span class="token comment"># 使用自动URL路由连接我们的API。</span>
<span class="token comment"># 另外，我们还包括支持浏览器浏览API的登录URL。</span>
urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^&#39;</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span>router<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    url<span class="token punctuation">(</span><span class="token string">r&#39;^api-auth/&#39;</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">&#39;rest_framework.urls&#39;</span><span class="token punctuation">,</span> namespace<span class="token operator">=</span><span class="token string">&#39;rest_framework&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为我们使用的是viewsets而不是views，所以我们可以通过简单地使用路由器类注册视图来自动生成API的URL conf。<br> 再次，如果我们需要对API URL进行更多的控制，我们可以简单地将其拉出来使用常规基于类的视图，并明确地编写URL conf。<br> 最后，我们将包括用于支持浏览器浏览的API的默认登录和注销视图。这是可选的，但如果您的API需要身份验证，并且你想要使用支持浏览器浏览的API，那么它们很有用。</p><h2 id="settings" tabindex="-1"><a class="header-anchor" href="#settings" aria-hidden="true">#</a> Settings</h2><p>我们也想设置一些全局设置。我们想打开分页，我们希望我们的API只能由管理员使用。设置模块都在 <code>tutorial/settings.py</code> 中。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>INSTALLED_APPS <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token string">&#39;rest_framework&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
REST_FRAMEWORK <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;DEFAULT_PERMISSION_CLASSES&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string">&#39;rest_framework.permissions.IsAdminUser&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;PAGE_SIZE&#39;</span><span class="token punctuation">:</span> <span class="token number">10</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>好了，我们完成了。</p><hr><h2 id="测试我们的api" tabindex="-1"><a class="header-anchor" href="#测试我们的api" aria-hidden="true">#</a> 测试我们的API</h2><p>我们现在可以测试我们构建的API。我们从命令行启动服务器。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python manage.py runserver
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们现在可以从命令行访问我们的API，使用诸如 <code>curl</code> ...</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bash: <span class="token function">curl</span> <span class="token parameter variable">-H</span> <span class="token string">&#39;Accept: application/json; indent=4&#39;</span> <span class="token parameter variable">-u</span> admin:password123 http://127.0.0.1:8000/users/
<span class="token punctuation">{</span>
    <span class="token string">&quot;count&quot;</span><span class="token builtin class-name">:</span> <span class="token number">2</span>,
    <span class="token string">&quot;next&quot;</span><span class="token builtin class-name">:</span> null,
    <span class="token string">&quot;previous&quot;</span><span class="token builtin class-name">:</span> null,
    <span class="token string">&quot;results&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string">&quot;email&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin@example.com&quot;</span>,
            <span class="token string">&quot;groups&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;url&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;http://127.0.0.1:8000/users/1/&quot;</span>,
            <span class="token string">&quot;username&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;email&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;tom@example.com&quot;</span>,
            <span class="token string">&quot;groups&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">]</span>,
            <span class="token string">&quot;url&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;http://127.0.0.1:8000/users/2/&quot;</span>,
            <span class="token string">&quot;username&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;tom&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32),r={href:"https://github.com/jakubroztocil/httpie#installation",target:"_blank",rel:"noopener noreferrer"},d=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bash: http <span class="token parameter variable">-a</span> admin:password123 http://127.0.0.1:8000/users/
HTTP/1.1 <span class="token number">200</span> OK
<span class="token punctuation">..</span>.
<span class="token punctuation">{</span>
    <span class="token string">&quot;count&quot;</span><span class="token builtin class-name">:</span> <span class="token number">2</span>,
    <span class="token string">&quot;next&quot;</span><span class="token builtin class-name">:</span> null,
    <span class="token string">&quot;previous&quot;</span><span class="token builtin class-name">:</span> null,
    <span class="token string">&quot;results&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string">&quot;email&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin@example.com&quot;</span>,
            <span class="token string">&quot;groups&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;url&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;http://localhost:8000/users/1/&quot;</span>,
            <span class="token string">&quot;username&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;paul&quot;</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;email&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;tom@example.com&quot;</span>,
            <span class="token string">&quot;groups&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">]</span>,
            <span class="token string">&quot;url&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;http://127.0.0.1:8000/users/2/&quot;</span>,
            <span class="token string">&quot;username&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;tom&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),k=s("code",null,"http://127.0.0.1:8000/users/",-1),v=s("br",null,null,-1),m=s("img",{src:"https://cdn.nlark.com/yuque/0/2021/png/12492743/1622699402319-6c8ff6ec-76fa-4e69-aec8-ce61cfca2d60.png#height=696&id=kBMxh&originHeight=696&originWidth=791&originalType=binary&ratio=1&size=0&status=done&style=none&width=791",alt:"",loading:"lazy"},null,-1),b=s("br",null,null,-1),g=s("br",null,null,-1),h=s("br",null,null,-1),q={href:"https://www.yuque.com/gstorms/uufcz2/qcp3as",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.yuque.com/gstorms/uufcz2/vn0zo8",target:"_blank",rel:"noopener noreferrer"};function y(_,f){const a=p("ExternalLinkIcon");return l(),o("div",null,[u,s("p",null,[n("或者使用 "),s("a",r,[n("httpie"),e(a)]),n("，命令行工具...")]),d,s("p",null,[n("或直接通过浏览器，转到URL "),k,n("..."),v,m,b,n(" 如果您正在使用浏览器，请确保使用右上角进行登录。"),g,n(" 非常棒！就是这么简单！"),h,n(" 如果您想更深入地了解REST framework各部分是如何配合在一起的，请前往"),s("a",q,[n("教程"),e(a)]),n("，或者开始浏览 "),s("a",w,[n("API指南"),e(a)]),n("。")])])}const z=i(c,[["render",y],["__file","快速入门.html.vue"]]);export{z as default};
